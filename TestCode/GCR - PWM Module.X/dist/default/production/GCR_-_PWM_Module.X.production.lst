

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Thu Dec 27 21:38:47 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 12 "PWMmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 12 "PWMmain.c"
    45  2007  F4F4               	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFFFF & 0xF7FF ;#
    46                           	FNCALL	_main,_Initialise
    47                           	FNCALL	_main,_parseDirectionPWM
    48                           	FNCALL	_main,_SetPulse
    49                           	FNCALL	_Initialise,_BeginPWM
    50                           	FNCALL	_Initialise,_directionInit
    51                           	FNROOT	_main
    52                           	FNCALL	intlevel1,_isr
    53                           	global	intlevel1
    54                           	FNROOT	intlevel1
    55                           	global	_i2cBuffer
    56                           	global	_setSpeed
    57                           	global	_val
    58                           	global	_i2cDirection
    59                           	global	_i2cRequest
    60                           	global	_i2cVelocity
    61                           	global	_CCP1CON
    62                           psect	text288,local,class=CODE,delta=2
    63                           global __ptext288
    64  0000                     __ptext288:
    65  0017                     _CCP1CON	set	23
    66                           	global	_CCP1CONbits
    67  0017                     _CCP1CONbits	set	23
    68                           	global	_CCPR1L
    69  0015                     _CCPR1L	set	21
    70                           	global	_PIR1bits
    71  000C                     _PIR1bits	set	12
    72                           	global	_PORTBbits
    73  0006                     _PORTBbits	set	6
    74                           	global	_PORTD
    75  0008                     _PORTD	set	8
    76                           	global	_T2CON
    77  0012                     _T2CON	set	18
    78                           	global	_T2CONbits
    79  0012                     _T2CONbits	set	18
    80                           	global	_CARRY
    81  0018                     _CARRY	set	24
    82                           	global	_GIE
    83  005F                     _GIE	set	95
    84                           	global	_TMR2IF
    85  0061                     _TMR2IF	set	97
    86                           	global	_PIE1bits
    87  008C                     _PIE1bits	set	140
    88                           	global	_PR2
    89  0092                     _PR2	set	146
    90                           	global	_TRISCbits
    91  0087                     _TRISCbits	set	135
    92                           	global	_TRISD
    93  0088                     _TRISD	set	136
    94                           	global	_TRISB3
    95  0433                     _TRISB3	set	1075
    96                           	global	_EEADR
    97  010D                     _EEADR	set	269
    98                           	global	_EEDATA
    99  010C                     _EEDATA	set	268
   100                           	global	_EECON1
   101  018C                     _EECON1	set	396
   102                           	global	_EECON2
   103  018D                     _EECON2	set	397
   104                           	global	_RD
   105  0C60                     _RD	set	3168
   106                           	global	_WR
   107  0C61                     _WR	set	3169
   108                           	global	_WREN
   109  0C62                     _WREN	set	3170
   110                           	file	"C:\Users\josh\AppData\Local\Temp\s5bk."
   111                           	line	#
   112                           psect cinit,class=CODE,delta=2
   113                           global start_initialization
   114  00A4                     start_initialization:
   115                           
   116                           psect	bssCOMMON,class=COMMON,space=1
   117                           global __pbssCOMMON
   118  0076                     __pbssCOMMON:
   119  0076                     _i2cDirection:
   120  0076                            ds      1
   121                           
   122  0077                     _i2cRequest:
   123  0077                            ds      1
   124                           
   125  0078                     _i2cVelocity:
   126  0078                            ds      1
   127                           
   128                           psect	bssBANK0,class=BANK0,space=1
   129                           global __pbssBANK0
   130  0020                     __pbssBANK0:
   131  0020                     _i2cBuffer:
   132  0020                            ds      2
   133                           
   134  0022                     _setSpeed:
   135  0022                            ds      2
   136                           
   137  0024                     _val:
   138  0024                            ds      2
   139                           
   140                           ; Clear objects allocated to COMMON
   141                           psect cinit,class=CODE,delta=2
   142  00A4  01F6               	clrf	((__pbssCOMMON)+0)&07Fh
   143  00A5  01F7               	clrf	((__pbssCOMMON)+1)&07Fh
   144  00A6  01F8               	clrf	((__pbssCOMMON)+2)&07Fh
   145                           ; Clear objects allocated to BANK0
   146                           psect cinit,class=CODE,delta=2
   147  00A7  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   148  00A8  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   149  00A9  01A2               	clrf	((__pbssBANK0)+2)&07Fh
   150  00AA  01A3               	clrf	((__pbssBANK0)+3)&07Fh
   151  00AB  01A4               	clrf	((__pbssBANK0)+4)&07Fh
   152  00AC  01A5               	clrf	((__pbssBANK0)+5)&07Fh
   153                           psect cinit,class=CODE,delta=2
   154                           global end_of_initialization
   155                           
   156                           ;End of C runtime variable initialization code
   157                           
   158  00AD                     end_of_initialization:
   159  00AD  0183               clrf status
   160  00AE  120A  118A  2815   ljmp _main	;jump to C main() function
   161                           psect	cstackCOMMON,class=COMMON,space=1
   162                           global __pcstackCOMMON
   163  0070                     __pcstackCOMMON:
   164                           	global	?_Initialise
   165  0070                     ?_Initialise:	; 0 bytes @ 0x0
   166                           	global	?_BeginPWM
   167  0070                     ?_BeginPWM:	; 0 bytes @ 0x0
   168                           	global	?_directionInit
   169  0070                     ?_directionInit:	; 0 bytes @ 0x0
   170                           	global	?_main
   171  0070                     ?_main:	; 0 bytes @ 0x0
   172                           	global	?_isr
   173  0070                     ?_isr:	; 0 bytes @ 0x0
   174                           	global	??_isr
   175  0070                     ??_isr:	; 0 bytes @ 0x0
   176  0070                     	ds	4
   177                           	global	??_Initialise
   178  0074                     ??_Initialise:	; 0 bytes @ 0x4
   179                           	global	?_SetPulse
   180  0074                     ?_SetPulse:	; 0 bytes @ 0x4
   181                           	global	??_BeginPWM
   182  0074                     ??_BeginPWM:	; 0 bytes @ 0x4
   183                           	global	??_directionInit
   184  0074                     ??_directionInit:	; 0 bytes @ 0x4
   185                           	global	?_parseDirectionPWM
   186  0074                     ?_parseDirectionPWM:	; 2 bytes @ 0x4
   187                           	global	SetPulse@length
   188  0074                     SetPulse@length:	; 2 bytes @ 0x4
   189  0074                     	ds	2
   190                           	global	??_SetPulse
   191  0076                     ??_SetPulse:	; 0 bytes @ 0x6
   192                           	global	??_main
   193  0076                     ??_main:	; 0 bytes @ 0x6
   194                           psect	cstackBANK0,class=BANK0,space=1
   195                           global __pcstackBANK0
   196  0026                     __pcstackBANK0:
   197                           	global	??_parseDirectionPWM
   198  0026                     ??_parseDirectionPWM:	; 0 bytes @ 0x0
   199                           	global	SetPulse@temp
   200  0026                     SetPulse@temp:	; 2 bytes @ 0x0
   201  0026                     	ds	2
   202                           	global	main@direction
   203  0028                     main@direction:	; 2 bytes @ 0x2
   204  0028                     	ds	2
   205 ;;Data sizes: Strings 0, constant 0, data 0, bss 9, persistent 0 stack 0
   206 ;;Auto spaces:   Size  Autos    Used
   207 ;; COMMON          14      6       9
   208 ;; BANK0           80      4      10
   209 ;; BANK1           80      0       0
   210 ;; BANK3           96      0       0
   211 ;; BANK2           80      0       0
   212                           
   213 ;;
   214 ;; Pointer list with targets:
   215                           
   216                           
   217                           
   218 ;;
   219 ;; Critical Paths under _main in COMMON
   220 ;;
   221 ;;   _main->_parseDirectionPWM
   222 ;;   _main->_SetPulse
   223 ;;
   224 ;; Critical Paths under _isr in COMMON
   225 ;;
   226 ;;   None.
   227 ;;
   228 ;; Critical Paths under _main in BANK0
   229 ;;
   230 ;;   _main->_parseDirectionPWM
   231 ;;   _main->_SetPulse
   232 ;;
   233 ;; Critical Paths under _isr in BANK0
   234 ;;
   235 ;;   None.
   236 ;;
   237 ;; Critical Paths under _main in BANK1
   238 ;;
   239 ;;   None.
   240 ;;
   241 ;; Critical Paths under _isr in BANK1
   242 ;;
   243 ;;   None.
   244 ;;
   245 ;; Critical Paths under _main in BANK3
   246 ;;
   247 ;;   None.
   248 ;;
   249 ;; Critical Paths under _isr in BANK3
   250 ;;
   251 ;;   None.
   252 ;;
   253 ;; Critical Paths under _main in BANK2
   254 ;;
   255 ;;   None.
   256 ;;
   257 ;; Critical Paths under _isr in BANK2
   258 ;;
   259 ;;   None.
   260                           
   261 ;;
   262 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   263 ;;
   264                           
   265 ;;
   266 ;;Call Graph Tables:
   267 ;;
   268 ;; ---------------------------------------------------------------------------------
   269 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   270 ;; ---------------------------------------------------------------------------------
   271 ;; (0) _main                                                 2     2      0     102
   272 ;;                                              2 BANK0      2     2      0
   273 ;;                         _Initialise
   274 ;;                  _parseDirectionPWM
   275 ;;                           _SetPulse
   276 ;; ---------------------------------------------------------------------------------
   277 ;; (1) _Initialise                                           0     0      0       0
   278 ;;                           _BeginPWM
   279 ;;                      _directionInit
   280 ;; ---------------------------------------------------------------------------------
   281 ;; (2) _directionInit                                        0     0      0       0
   282 ;; ---------------------------------------------------------------------------------
   283 ;; (2) _BeginPWM                                             0     0      0       0
   284 ;; ---------------------------------------------------------------------------------
   285 ;; (1) _SetPulse                                             4     2      2      99
   286 ;;                                              4 COMMON     2     0      2
   287 ;;                                              0 BANK0      2     2      0
   288 ;; ---------------------------------------------------------------------------------
   289 ;; (1) _parseDirectionPWM                                    4     2      2       0
   290 ;;                                              4 COMMON     2     0      2
   291 ;;                                              0 BANK0      2     2      0
   292 ;; ---------------------------------------------------------------------------------
   293 ;; Estimated maximum stack depth 2
   294 ;; ---------------------------------------------------------------------------------
   295 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   296 ;; ---------------------------------------------------------------------------------
   297 ;; (3) _isr                                                  4     4      0       0
   298 ;;                                              0 COMMON     4     4      0
   299 ;; ---------------------------------------------------------------------------------
   300 ;; Estimated maximum stack depth 3
   301 ;; ---------------------------------------------------------------------------------
   302                           
   303 ;; Call Graph Graphs:
   304                           
   305 ;; _main (ROOT)
   306 ;;   _Initialise
   307 ;;     _BeginPWM
   308 ;;     _directionInit
   309 ;;   _parseDirectionPWM
   310 ;;   _SetPulse
   311 ;;
   312 ;; _isr (ROOT)
   313 ;;
   314                           
   315 ;; Address spaces:
   316                           
   317 ;;Name               Size   Autos  Total    Cost      Usage
   318 ;;BITCOMMON            E      0       0       0        0.0%
   319 ;;EEDATA             100      0       0       0        0.0%
   320 ;;NULL                 0      0       0       0        0.0%
   321 ;;CODE                 0      0       0       0        0.0%
   322 ;;COMMON               E      6       9       1       64.3%
   323 ;;BITSFR0              0      0       0       1        0.0%
   324 ;;SFR0                 0      0       0       1        0.0%
   325 ;;BITSFR1              0      0       0       2        0.0%
   326 ;;SFR1                 0      0       0       2        0.0%
   327 ;;STACK                0      0       2       2        0.0%
   328 ;;BITBANK0            50      0       0       3        0.0%
   329 ;;BANK0               50      4       A       4       12.5%
   330 ;;BITSFR3              0      0       0       4        0.0%
   331 ;;SFR3                 0      0       0       4        0.0%
   332 ;;BITBANK1            50      0       0       5        0.0%
   333 ;;BITSFR2              0      0       0       5        0.0%
   334 ;;SFR2                 0      0       0       5        0.0%
   335 ;;BANK1               50      0       0       6        0.0%
   336 ;;BITBANK3            60      0       0       7        0.0%
   337 ;;BANK3               60      0       0       8        0.0%
   338 ;;BANK2               50      0       0       9        0.0%
   339 ;;ABS                  0      0      13      10        0.0%
   340 ;;BITBANK2            50      0       0      11        0.0%
   341 ;;DATA                 0      0      15      12        0.0%
   342                           
   343                           	global	_main
   344                           psect	maintext,global,class=CODE,delta=2
   345                           global __pmaintext
   346  0015                     __pmaintext:
   347                           
   348 ;; *************** function _main *****************
   349 ;; Defined at:
   350 ;;		line 36 in file "PWMmain.c"
   351 ;; Parameters:    Size  Location     Type
   352 ;;		None
   353 ;; Auto vars:     Size  Location     Type
   354 ;;  direction       2    2[BANK0 ] int 
   355 ;; Return value:  Size  Location     Type
   356 ;;		None               void
   357 ;; Registers used:
   358 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   359 ;; Tracked objects:
   360 ;;		On entry : 17F/0
   361 ;;		On exit  : 0/0
   362 ;;		Unchanged: 0/0
   363 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   364 ;;      Params:         0       0       0       0       0
   365 ;;      Locals:         0       2       0       0       0
   366 ;;      Temps:          0       0       0       0       0
   367 ;;      Totals:         0       2       0       0       0
   368 ;;Total ram usage:        2 bytes
   369 ;; Hardware stack levels required when called:    3
   370 ;; This function calls:
   371 ;;		_Initialise
   372 ;;		_parseDirectionPWM
   373 ;;		_SetPulse
   374 ;; This function is called by:
   375 ;;		Startup code after reset
   376 ;; This function uses a non-reentrant model
   377 ;;
   378                           psect	maintext
   379                           	file	"PWMmain.c"
   380                           	line	36
   381                           	global	__size_of_main
   382  0026                     	__size_of_main	equ	__end_of_main-_main
   383                           	
   384  0015                     _main:	
   385                           	opt	stack 5
   386                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   387                           	line	39
   388                           	
   389  0015                     l5941:	
   390                           ;PWMmain.c: 38: int direction;
   391                           ;PWMmain.c: 39: Initialise();
   392  0015  120A  118A  2093   	fcall	_Initialise
              120A  118A         
   393                           	line	60
   394                           ;PWMmain.c: 60: while (1)
   395                           	
   396  001A                     l1513:	
   397                           	line	62
   398                           ;PWMmain.c: 61: {
   399                           ;PWMmain.c: 62: direction = parseDirectionPWM();
   400  001A  120A  118A  2079   	fcall	_parseDirectionPWM
              120A  118A         
   401  001F  0875               	movf	(1+(?_parseDirectionPWM)),w
   402  0020  1283               	bcf	status, 5	;RP0=0, select bank0
   403  0021  1303               	bcf	status, 6	;RP1=0, select bank0
   404  0022  01A9               	clrf	(main@direction+1)
   405  0023  07A9               	addwf	(main@direction+1)
   406  0024  0874               	movf	(0+(?_parseDirectionPWM)),w
   407  0025  01A8               	clrf	(main@direction)
   408  0026  07A8               	addwf	(main@direction)
   409                           
   410                           	line	65
   411                           	
   412  0027                     l5943:	
   413                           ;PWMmain.c: 65: SetPulse(setSpeed);
   414  0027  0823               	movf	(_setSpeed+1),w
   415  0028  01F5               	clrf	(?_SetPulse+1)
   416  0029  07F5               	addwf	(?_SetPulse+1)
   417  002A  0822               	movf	(_setSpeed),w
   418  002B  01F4               	clrf	(?_SetPulse)
   419  002C  07F4               	addwf	(?_SetPulse)
   420                           
   421  002D  120A  118A  203B   	fcall	_SetPulse
              120A  118A         
   422                           	line	67
   423                           	
   424  0032                     l5945:	
   425                           ;PWMmain.c: 67: PORTD = setSpeed;
   426  0032  1283               	bcf	status, 5	;RP0=0, select bank0
   427  0033  1303               	bcf	status, 6	;RP1=0, select bank0
   428  0034  0822               	movf	(_setSpeed),w
   429  0035  0088               	movwf	(8)	;volatile
   430  0036  281A               	goto	l1513
   431                           	line	68
   432                           	
   433  0037                     l1514:	
   434                           	line	60
   435  0037  281A               	goto	l1513
   436                           	
   437  0038                     l1515:	
   438                           	line	71
   439                           	
   440  0038                     l1516:	
   441                           	global	start
   442  0038  120A  118A  2812   	ljmp	start
   443                           	opt stack 0
   444                           GLOBAL	__end_of_main
   445  003B                     	__end_of_main:
   446 ;; =============== function _main ends ============
   447                           
   448                           	signat	_main,88
   449                           	global	_Initialise
   450                           psect	text289,local,class=CODE,delta=2
   451                           global __ptext289
   452  0093                     __ptext289:
   453                           
   454 ;; *************** function _Initialise *****************
   455 ;; Defined at:
   456 ;;		line 87 in file "PWMmain.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;		None               void
   463 ;; Registers used:
   464 ;;		wreg, status,2, status,0, pclath, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   470 ;;      Params:         0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0
   472 ;;      Temps:          0       0       0       0       0
   473 ;;      Totals:         0       0       0       0       0
   474 ;;Total ram usage:        0 bytes
   475 ;; Hardware stack levels used:    1
   476 ;; Hardware stack levels required when called:    2
   477 ;; This function calls:
   478 ;;		_BeginPWM
   479 ;;		_directionInit
   480 ;; This function is called by:
   481 ;;		_main
   482 ;; This function uses a non-reentrant model
   483 ;;
   484                           psect	text289
   485                           	file	"PWMmain.c"
   486                           	line	87
   487                           	global	__size_of_Initialise
   488  0011                     	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   489                           	
   490  0093                     _Initialise:	
   491                           	opt	stack 5
   492                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   493                           	line	88
   494                           	
   495  0093                     l5933:	
   496                           ;PWMmain.c: 88: BeginPWM();
   497  0093  120A  118A  205B   	fcall	_BeginPWM
              120A  118A         
   498                           	line	90
   499                           	
   500  0098                     l5935:	
   501                           ;PWMmain.c: 90: directionInit();
   502  0098  120A  118A  20BC   	fcall	_directionInit
              120A  118A         
   503                           	line	92
   504                           	
   505  009D                     l5937:	
   506                           ;PWMmain.c: 92: TRISD = 0;
   507  009D  1683               	bsf	status, 5	;RP0=1, select bank1
   508  009E  1303               	bcf	status, 6	;RP1=0, select bank1
   509  009F  0188               	clrf	(136)^080h	;volatile
   510                           	line	93
   511                           	
   512  00A0                     l5939:	
   513                           ;PWMmain.c: 93: PORTD = 0;
   514  00A0  1283               	bcf	status, 5	;RP0=0, select bank0
   515  00A1  1303               	bcf	status, 6	;RP1=0, select bank0
   516  00A2  0188               	clrf	(8)	;volatile
   517                           	line	94
   518                           	
   519  00A3                     l1525:	
   520  00A3  0008               	return
   521                           	opt stack 0
   522                           GLOBAL	__end_of_Initialise
   523  00A4                     	__end_of_Initialise:
   524 ;; =============== function _Initialise ends ============
   525                           
   526                           	signat	_Initialise,88
   527                           	global	_directionInit
   528                           psect	text290,local,class=CODE,delta=2
   529                           global __ptext290
   530  00BC                     __ptext290:
   531                           
   532 ;; *************** function _directionInit *****************
   533 ;; Defined at:
   534 ;;		line 124 in file "PWMmain.c"
   535 ;; Parameters:    Size  Location     Type
   536 ;;		None
   537 ;; Auto vars:     Size  Location     Type
   538 ;;		None
   539 ;; Return value:  Size  Location     Type
   540 ;;		None               void
   541 ;; Registers used:
   542 ;;		None
   543 ;; Tracked objects:
   544 ;;		On entry : 0/0
   545 ;;		On exit  : 0/0
   546 ;;		Unchanged: 0/0
   547 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   548 ;;      Params:         0       0       0       0       0
   549 ;;      Locals:         0       0       0       0       0
   550 ;;      Temps:          0       0       0       0       0
   551 ;;      Totals:         0       0       0       0       0
   552 ;;Total ram usage:        0 bytes
   553 ;; Hardware stack levels used:    1
   554 ;; Hardware stack levels required when called:    1
   555 ;; This function calls:
   556 ;;		Nothing
   557 ;; This function is called by:
   558 ;;		_Initialise
   559 ;; This function uses a non-reentrant model
   560 ;;
   561                           psect	text290
   562                           	file	"PWMmain.c"
   563                           	line	124
   564                           	global	__size_of_directionInit
   565  0007                     	__size_of_directionInit	equ	__end_of_directionInit-_directionInit
   566                           	
   567  00BC                     _directionInit:	
   568                           	opt	stack 5
   569                           ; Regs used in _directionInit: []
   570                           	line	125
   571                           	
   572  00BC                     l5927:	
   573                           ;PWMmain.c: 125: TRISB3 = 0;
   574  00BC  1683               	bsf	status, 5	;RP0=1, select bank1
   575  00BD  1303               	bcf	status, 6	;RP1=0, select bank1
   576  00BE  1186               	bcf	(1075/8)^080h,(1075)&7
   577                           	line	126
   578                           ;PWMmain.c: 126: PORTBbits.RB3 = 0;
   579  00BF  1283               	bcf	status, 5	;RP0=0, select bank0
   580  00C0  1303               	bcf	status, 6	;RP1=0, select bank0
   581  00C1  1186               	bcf	(6),3	;volatile
   582                           	line	127
   583                           	
   584  00C2                     l1534:	
   585  00C2  0008               	return
   586                           	opt stack 0
   587                           GLOBAL	__end_of_directionInit
   588  00C3                     	__end_of_directionInit:
   589 ;; =============== function _directionInit ends ============
   590                           
   591                           	signat	_directionInit,88
   592                           	global	_BeginPWM
   593                           psect	text291,local,class=CODE,delta=2
   594                           global __ptext291
   595  005B                     __ptext291:
   596                           
   597 ;; *************** function _BeginPWM *****************
   598 ;; Defined at:
   599 ;;		line 41 in file "pwmlib.c"
   600 ;; Parameters:    Size  Location     Type
   601 ;;		None
   602 ;; Auto vars:     Size  Location     Type
   603 ;;		None
   604 ;; Return value:  Size  Location     Type
   605 ;;		None               void
   606 ;; Registers used:
   607 ;;		wreg, status,2
   608 ;; Tracked objects:
   609 ;;		On entry : 0/0
   610 ;;		On exit  : 0/0
   611 ;;		Unchanged: 0/0
   612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   613 ;;      Params:         0       0       0       0       0
   614 ;;      Locals:         0       0       0       0       0
   615 ;;      Temps:          0       0       0       0       0
   616 ;;      Totals:         0       0       0       0       0
   617 ;;Total ram usage:        0 bytes
   618 ;; Hardware stack levels used:    1
   619 ;; Hardware stack levels required when called:    1
   620 ;; This function calls:
   621 ;;		Nothing
   622 ;; This function is called by:
   623 ;;		_Initialise
   624 ;; This function uses a non-reentrant model
   625 ;;
   626                           psect	text291
   627                           	file	"pwmlib.c"
   628                           	line	41
   629                           	global	__size_of_BeginPWM
   630  001E                     	__size_of_BeginPWM	equ	__end_of_BeginPWM-_BeginPWM
   631                           	
   632  005B                     _BeginPWM:	
   633                           	opt	stack 5
   634                           ; Regs used in _BeginPWM: [wreg+status,2]
   635                           	line	44
   636                           	
   637  005B                     l5909:	
   638                           ;pwmlib.c: 44: TRISCbits.TRISC5 = 1;
   639  005B  1683               	bsf	status, 5	;RP0=1, select bank1
   640  005C  1303               	bcf	status, 6	;RP1=0, select bank1
   641  005D  1687               	bsf	(135)^080h,5	;volatile
   642                           	line	47
   643                           ;pwmlib.c: 47: PIE1bits.TMR2IE = 0;
   644  005E  108C               	bcf	(140)^080h,1	;volatile
   645                           	line	51
   646                           	
   647  005F                     l5911:	
   648                           ;pwmlib.c: 51: PR2 = 0xFF;
   649  005F  30FF               	movlw	(0FFh)
   650  0060  0092               	movwf	(146)^080h	;volatile
   651                           	line	55
   652                           ;pwmlib.c: 55: CCP1CON = 0b00001100;
   653  0061  300C               	movlw	(0Ch)
   654  0062  1283               	bcf	status, 5	;RP0=0, select bank0
   655  0063  1303               	bcf	status, 6	;RP1=0, select bank0
   656  0064  0097               	movwf	(23)	;volatile
   657                           	line	59
   658                           	
   659  0065                     l5913:	
   660                           ;pwmlib.c: 59: CCPR1L = 0;
   661  0065  0195               	clrf	(21)	;volatile
   662                           	line	60
   663                           	
   664  0066                     l5915:	
   665                           ;pwmlib.c: 60: CCP1CONbits.CCP1X = 0;
   666  0066  1297               	bcf	(23),5	;volatile
   667                           	line	61
   668                           	
   669  0067                     l5917:	
   670                           ;pwmlib.c: 61: CCP1CONbits.CCP1Y = 0;
   671  0067  1217               	bcf	(23),4	;volatile
   672                           	line	66
   673                           	
   674  0068                     l5919:	
   675                           ;pwmlib.c: 66: PIR1bits.TMR2IF = 0;
   676  0068  108C               	bcf	(12),1	;volatile
   677                           	line	70
   678                           	
   679  0069                     l5921:	
   680                           ;pwmlib.c: 70: T2CON = 0b00000100;
   681  0069  3004               	movlw	(04h)
   682  006A  0092               	movwf	(18)	;volatile
   683  006B  286C               	goto	l5923
   684                           	line	75
   685                           ;pwmlib.c: 75: while(1)
   686                           	
   687  006C                     l3037:	
   688                           	line	77
   689                           	
   690  006C                     l5923:	
   691                           ;pwmlib.c: 76: {
   692                           ;pwmlib.c: 77: if(PIR1bits.TMR2IF == 1)
   693  006C  1283               	bcf	status, 5	;RP0=0, select bank0
   694  006D  1C8C               	btfss	(12),1	;volatile
   695  006E  2870               	goto	u2341
   696  006F  2871               	goto	u2340
   697  0070                     u2341:
   698  0070  286C               	goto	l5923
   699  0071                     u2340:
   700                           	line	79
   701                           	
   702  0071                     l5925:	
   703                           ;pwmlib.c: 78: {
   704                           ;pwmlib.c: 79: TMR2IF = 0;
   705  0071  108C               	bcf	(97/8),(97)&7
   706                           	line	80
   707                           ;pwmlib.c: 80: TRISCbits.TRISC5 = 0;
   708  0072  1683               	bsf	status, 5	;RP0=1, select bank1
   709  0073  1303               	bcf	status, 6	;RP1=0, select bank1
   710  0074  1287               	bcf	(135)^080h,5	;volatile
   711                           	line	81
   712                           ;pwmlib.c: 81: break;
   713  0075  2878               	goto	l3041
   714                           	line	82
   715                           	
   716  0076                     l3038:	
   717  0076  286C               	goto	l5923
   718                           	line	83
   719                           	
   720  0077                     l3040:	
   721                           	line	75
   722  0077  286C               	goto	l5923
   723                           	
   724  0078                     l3039:	
   725                           	line	84
   726                           	
   727  0078                     l3041:	
   728  0078  0008               	return
   729                           	opt stack 0
   730                           GLOBAL	__end_of_BeginPWM
   731  0079                     	__end_of_BeginPWM:
   732 ;; =============== function _BeginPWM ends ============
   733                           
   734                           	signat	_BeginPWM,88
   735                           	global	_SetPulse
   736                           psect	text292,local,class=CODE,delta=2
   737                           global __ptext292
   738  003B                     __ptext292:
   739                           
   740 ;; *************** function _SetPulse *****************
   741 ;; Defined at:
   742 ;;		line 105 in file "pwmlib.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;  length          2    4[COMMON] int 
   745 ;; Auto vars:     Size  Location     Type
   746 ;;  temp            2    0[BANK0 ] int 
   747 ;; Return value:  Size  Location     Type
   748 ;;		None               void
   749 ;; Registers used:
   750 ;;		wreg, status,2, status,0, btemp+1
   751 ;; Tracked objects:
   752 ;;		On entry : 0/0
   753 ;;		On exit  : 0/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         2       0       0       0       0
   757 ;;      Locals:         0       2       0       0       0
   758 ;;      Temps:          0       0       0       0       0
   759 ;;      Totals:         2       2       0       0       0
   760 ;;Total ram usage:        4 bytes
   761 ;; Hardware stack levels used:    1
   762 ;; Hardware stack levels required when called:    1
   763 ;; This function calls:
   764 ;;		Nothing
   765 ;; This function is called by:
   766 ;;		_main
   767 ;;		_CalcPulse
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           psect	text292
   771                           	file	"pwmlib.c"
   772                           	line	105
   773                           	global	__size_of_SetPulse
   774  0020                     	__size_of_SetPulse	equ	__end_of_SetPulse-_SetPulse
   775                           	
   776  003B                     _SetPulse:	
   777                           	opt	stack 6
   778                           ; Regs used in _SetPulse: [wreg+status,2+status,0+btemp+1]
   779                           	line	106
   780                           	
   781  003B                     l5903:	
   782                           ;pwmlib.c: 106: int temp = length;
   783  003B  0875               	movf	(SetPulse@length+1),w
   784  003C  1283               	bcf	status, 5	;RP0=0, select bank0
   785  003D  1303               	bcf	status, 6	;RP1=0, select bank0
   786  003E  01A7               	clrf	(SetPulse@temp+1)
   787  003F  07A7               	addwf	(SetPulse@temp+1)
   788  0040  0874               	movf	(SetPulse@length),w
   789  0041  01A6               	clrf	(SetPulse@temp)
   790  0042  07A6               	addwf	(SetPulse@temp)
   791                           
   792                           	line	107
   793                           	
   794  0043                     l5905:	
   795                           ;pwmlib.c: 107: if (temp > 255)
   796  0043  0827               	movf	(SetPulse@temp+1),w
   797  0044  3A80               	xorlw	80h
   798  0045  00FF               	movwf	btemp+1
   799  0046  3081               	movlw	(high(0100h))^80h
   800  0047  027F               	subwf	btemp+1,w
   801  0048  1D03               	skipz
   802  0049  284C               	goto	u2335
   803  004A  3000               	movlw	low(0100h)
   804  004B  0226               	subwf	(SetPulse@temp),w
   805  004C                     u2335:
   806                           
   807  004C  1C03               	skipc
   808  004D  284F               	goto	u2331
   809  004E  2850               	goto	u2330
   810  004F                     u2331:
   811  004F  2856               	goto	l3048
   812  0050                     u2330:
   813                           	line	108
   814                           	
   815  0050                     l5907:	
   816                           ;pwmlib.c: 108: temp = 255;
   817  0050  30FF               	movlw	low(0FFh)
   818  0051  1283               	bcf	status, 5	;RP0=0, select bank0
   819  0052  1303               	bcf	status, 6	;RP1=0, select bank0
   820  0053  00A6               	movwf	(SetPulse@temp)
   821  0054  3000               	movlw	high(0FFh)
   822  0055  00A7               	movwf	((SetPulse@temp))+1
   823                           	
   824  0056                     l3048:	
   825                           	line	109
   826                           ;pwmlib.c: 109: CCPR1L = temp;
   827  0056  1283               	bcf	status, 5	;RP0=0, select bank0
   828  0057  1303               	bcf	status, 6	;RP1=0, select bank0
   829  0058  0826               	movf	(SetPulse@temp),w
   830  0059  0095               	movwf	(21)	;volatile
   831                           	line	113
   832                           	
   833  005A                     l3049:	
   834  005A  0008               	return
   835                           	opt stack 0
   836                           GLOBAL	__end_of_SetPulse
   837  005B                     	__end_of_SetPulse:
   838 ;; =============== function _SetPulse ends ============
   839                           
   840                           	signat	_SetPulse,4216
   841                           	global	_parseDirectionPWM
   842                           psect	text293,local,class=CODE,delta=2
   843                           global __ptext293
   844  0079                     __ptext293:
   845                           
   846 ;; *************** function _parseDirectionPWM *****************
   847 ;; Defined at:
   848 ;;		line 134 in file "PWMmain.c"
   849 ;; Parameters:    Size  Location     Type
   850 ;;		None
   851 ;; Auto vars:     Size  Location     Type
   852 ;;		None
   853 ;; Return value:  Size  Location     Type
   854 ;;                  2    4[COMMON] int 
   855 ;; Registers used:
   856 ;;		wreg, status,2
   857 ;; Tracked objects:
   858 ;;		On entry : 0/0
   859 ;;		On exit  : 0/0
   860 ;;		Unchanged: 0/0
   861 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   862 ;;      Params:         2       0       0       0       0
   863 ;;      Locals:         0       0       0       0       0
   864 ;;      Temps:          0       2       0       0       0
   865 ;;      Totals:         2       2       0       0       0
   866 ;;Total ram usage:        4 bytes
   867 ;; Hardware stack levels used:    1
   868 ;; Hardware stack levels required when called:    1
   869 ;; This function calls:
   870 ;;		Nothing
   871 ;; This function is called by:
   872 ;;		_main
   873 ;; This function uses a non-reentrant model
   874 ;;
   875                           psect	text293
   876                           	file	"PWMmain.c"
   877                           	line	134
   878                           	global	__size_of_parseDirectionPWM
   879  001A                     	__size_of_parseDirectionPWM	equ	__end_of_parseDirectionPWM-_parseDirectionPWM
   880                           	
   881  0079                     _parseDirectionPWM:	
   882                           	opt	stack 6
   883                           ; Regs used in _parseDirectionPWM: [wreg+status,2]
   884                           	line	135
   885                           	
   886  0079                     l5889:	
   887                           ;PWMmain.c: 135: setSpeed = i2cBuffer[1] & 0b01111111;
   888  0079  1283               	bcf	status, 5	;RP0=0, select bank0
   889  007A  1303               	bcf	status, 6	;RP1=0, select bank0
   890  007B  0821               	movf	0+(_i2cBuffer)+01h,w
   891  007C  397F               	andlw	07Fh
   892  007D  00A6               	movwf	(??_parseDirectionPWM+0)+0
   893  007E  01A7               	clrf	(??_parseDirectionPWM+0)+0+1
   894  007F  0826               	movf	0+(??_parseDirectionPWM+0)+0,w
   895  0080  00A2               	movwf	(_setSpeed)
   896  0081  0827               	movf	1+(??_parseDirectionPWM+0)+0,w
   897  0082  00A3               	movwf	(_setSpeed+1)
   898                           	line	137
   899                           	
   900  0083                     l5891:	
   901                           ;PWMmain.c: 137: if (i2cBuffer[1] > 0)
   902  0083  0821               	movf	0+(_i2cBuffer)+01h,w
   903  0084  1D03               	skipz
   904  0085  2887               	goto	u2320
   905  0086  288E               	goto	l5899
   906  0087                     u2320:
   907                           	line	139
   908                           	
   909  0087                     l5893:	
   910                           ;PWMmain.c: 138: {
   911                           ;PWMmain.c: 139: return 1;
   912  0087  3001               	movlw	low(01h)
   913  0088  00F4               	movwf	(?_parseDirectionPWM)
   914  0089  3000               	movlw	high(01h)
   915  008A  00F5               	movwf	((?_parseDirectionPWM))+1
   916  008B  2892               	goto	l1538
   917                           	
   918  008C                     l5895:	
   919  008C  2892               	goto	l1538
   920                           	line	140
   921                           	
   922  008D                     l5897:	
   923                           ;PWMmain.c: 140: }
   924  008D  2892               	goto	l1538
   925                           	line	141
   926                           	
   927  008E                     l1537:	
   928                           	line	142
   929                           	
   930  008E                     l5899:	
   931                           ;PWMmain.c: 141: else
   932                           ;PWMmain.c: 142: return 0;
   933  008E  01F4               	clrf	(?_parseDirectionPWM)
   934  008F  01F5               	clrf	(?_parseDirectionPWM+1)
   935  0090  2892               	goto	l1538
   936                           	
   937  0091                     l5901:	
   938  0091  2892               	goto	l1538
   939                           	
   940  0092                     l1539:	
   941                           	line	143
   942                           	
   943  0092                     l1538:	
   944  0092  0008               	return
   945                           	opt stack 0
   946                           GLOBAL	__end_of_parseDirectionPWM
   947  0093                     	__end_of_parseDirectionPWM:
   948 ;; =============== function _parseDirectionPWM ends ============
   949                           
   950                           	signat	_parseDirectionPWM,90
   951                           	global	_isr
   952                           psect	text294,local,class=CODE,delta=2
   953                           global __ptext294
   954  00B1                     __ptext294:
   955                           
   956 ;; *************** function _isr *****************
   957 ;; Defined at:
   958 ;;		line 114 in file "PWMmain.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;		None
   961 ;; Auto vars:     Size  Location     Type
   962 ;;		None
   963 ;; Return value:  Size  Location     Type
   964 ;;		None               void
   965 ;; Registers used:
   966 ;;		None
   967 ;; Tracked objects:
   968 ;;		On entry : 0/0
   969 ;;		On exit  : 0/0
   970 ;;		Unchanged: 0/0
   971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   972 ;;      Params:         0       0       0       0       0
   973 ;;      Locals:         0       0       0       0       0
   974 ;;      Temps:          4       0       0       0       0
   975 ;;      Totals:         4       0       0       0       0
   976 ;;Total ram usage:        4 bytes
   977 ;; Hardware stack levels used:    1
   978 ;; This function calls:
   979 ;;		Nothing
   980 ;; This function is called by:
   981 ;;		Interrupt level 1
   982 ;; This function uses a non-reentrant model
   983 ;;
   984                           psect	text294
   985                           	file	"PWMmain.c"
   986                           	line	114
   987                           	global	__size_of_isr
   988  000B                     	__size_of_isr	equ	__end_of_isr-_isr
   989                           	
   990  00B1                     _isr:	
   991                           	opt	stack 5
   992                           ; Regs used in _isr: []
   993                           psect	intentry,class=CODE,delta=2
   994                           global __pintentry
   995  0004                     __pintentry:
   996                           global interrupt_function
   997  0004                     interrupt_function:
   998                           	global saved_w
   999  007E                     	saved_w	set	btemp+0
  1000  0004  00FE               	movwf	saved_w
  1001  0005  0E03               	swapf	status,w
  1002  0006  00F0               	movwf	(??_isr+0)
  1003  0007  0804               	movf	fsr0,w
  1004  0008  00F1               	movwf	(??_isr+1)
  1005  0009  080A               	movf	pclath,w
  1006  000A  00F2               	movwf	(??_isr+2)
  1007  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1008  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1009  000D  087F               	movf	btemp+1,w
  1010  000E  00F3               	movwf	(??_isr+3)
  1011  000F  120A  118A  28B1   	ljmp	_isr
  1012                           psect	text294
  1013                           	line	117
  1014                           	
  1015  00B1                     i1l1531:	
  1016  00B1  0873               	movf	(??_isr+3),w
  1017  00B2  00FF               	movwf	btemp+1
  1018  00B3  0872               	movf	(??_isr+2),w
  1019  00B4  008A               	movwf	pclath
  1020  00B5  0871               	movf	(??_isr+1),w
  1021  00B6  0084               	movwf	fsr0
  1022  00B7  0E70               	swapf	(??_isr+0)^0FFFFFF80h,w
  1023  00B8  0083               	movwf	status
  1024  00B9  0EFE               	swapf	saved_w,f
  1025  00BA  0E7E               	swapf	saved_w,w
  1026  00BB  0009               	retfie
  1027                           	opt stack 0
  1028                           GLOBAL	__end_of_isr
  1029  00BC                     	__end_of_isr:
  1030 ;; =============== function _isr ends ============
  1031                           
  1032                           	signat	_isr,88
  1033                           psect	text295,local,class=CODE,delta=2
  1034                           global __ptext295
  1035  0000                     __ptext295:
  1036                           	global	btemp
  1037  007E                     	btemp set 07Eh
  1038                           
  1039                           	DABS	1,126,2	;btemp
  1040                           	global	wtemp0
  1041  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Thu Dec 27 21:38:47 2012

                        _RD 0C60                          _WR 0C61                         _GIE 005F  
                       _PR2 0092                         _isr 00B1                         _val 0024  
                       fsr0 0004                        l3040 0077                        l3041 0078  
                      l1513 001A                        l1514 0037                        l1515 0038  
                      l1516 0038                        l3037 006C                        l1525 00A3  
                      l3038 0076                        l1534 00C2                        l3039 0078  
                      l3048 0056                        l1537 008E                        l3049 005A  
                      l1538 0092                        l1539 0092                        l5901 0091  
                      l5903 003B                        l5911 005F                        l5905 0043  
                      l5921 0069                        l5913 0065                        l5907 0050  
                      l5923 006C                        l5915 0066                        ?_isr 0070  
                      l5925 0071                        l5917 0067                        l5909 005B  
                      l5933 0093                        l5941 0015                        l5919 0068  
                      l5927 00BC                        l5935 0098                        l5943 0027  
                      l5937 009D                        l5945 0032                        l5891 0083  
                      l5939 00A0                        l5893 0087                        l5895 008C  
                      l5897 008D                        l5889 0079                        l5899 008E  
                      u2320 0087                        u2330 0050                        u2331 004F  
                      u2340 0071                        u2341 0070                        u2335 004C  
                      _WREN 0C62             ??_directionInit 0074                        _main 0015  
                      btemp 007E                        start 0012                       ??_isr 0070  
                     ?_main 0070                       _EEADR 010D                       _CARRY 0018  
                     _T2CON 0012                       _PORTD 0008                       _TRISD 0088  
                     pclath 000A  __size_of_parseDirectionPWM 001A            __end_of_BeginPWM 0079  
                _i2cRequest 0077                       status 0003                       wtemp0 007E  
              __end_of_main 003B                  _Initialise 0093                      ??_main 0076  
          __end_of_SetPulse 005B               main@direction 0028                      _EEDATA 010C  
                    _CCPR1L 0015                      _EECON1 018C                      _EECON2 018D  
                    i1l1531 00B1                      _TMR2IF 0061                      _TRISB3 0433  
                    saved_w 007E                 _i2cVelocity 0078              __pcstackCOMMON 0070  
               ?_Initialise 0070                   ?_BeginPWM 0070                  __pbssBANK0 0020  
                 ?_SetPulse 0074                  __pmaintext 0015                  __pintentry 0004  
                   _CCP1CON 0017                  ??_BeginPWM 0074         __size_of_Initialise 0011  
     __end_of_directionInit 00C3                  ??_SetPulse 0076                _i2cDirection 0076  
                 _T2CONbits 0012                __size_of_isr 000B        end_of_initialization 00AD  
                 _PORTBbits 0006              SetPulse@length 0074                   _TRISCbits 0087  
               _CCP1CONbits 0017                ??_Initialise 0074                   _i2cBuffer 0020  
       start_initialization 00A4           __size_of_BeginPWM 001E                 __end_of_isr 00BC  
        __end_of_Initialise 00A4           __size_of_SetPulse 0020                SetPulse@temp 0026  
               __pbssCOMMON 0076               __pcstackBANK0 0026                   __ptext290 00BC  
                 __ptext291 005B                   __ptext292 003B                   __ptext293 0079  
                 __ptext294 00B1                   __ptext295 0000                   __ptext288 0000  
                 __ptext289 0093           interrupt_function 0004                    _PIE1bits 008C  
                  _PIR1bits 000C                    _BeginPWM 005B      __size_of_directionInit 0007  
                  _SetPulse 003B               __size_of_main 0026               _directionInit 00BC  
                  _setSpeed 0022                    intlevel1 0000           _parseDirectionPWM 0079  
            ?_directionInit 0070          ?_parseDirectionPWM 0074         ??_parseDirectionPWM 0026  
 __end_of_parseDirectionPWM 0093  
