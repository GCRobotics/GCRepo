

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Dec 12 22:00:34 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 12 "PWMmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 12 "PWMmain.c"
    45  2007  F4F4               	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFFFF & 0xF7FF ;#
    46                           	FNCALL	_main,_Initialise
    47                           	FNCALL	_main,_CalcPulse
    48                           	FNCALL	_CalcPulse,___wmul
    49                           	FNCALL	_CalcPulse,___awdiv
    50                           	FNCALL	_CalcPulse,_SetPulse
    51                           	FNCALL	_Initialise,_BeginPWM
    52                           	FNCALL	_Initialise,_i2c_init
    53                           	FNROOT	_main
    54                           	FNCALL	intlevel1,_isr
    55                           	global	intlevel1
    56                           	FNROOT	intlevel1
    57                           	global	_i2cBuffer
    58                           	global	_setSpeed
    59                           	global	_val
    60                           	global	_CCP1CON
    61                           psect	text327,local,class=CODE,delta=2
    62                           global __ptext327
    63  0000                     __ptext327:
    64  0017                     _CCP1CON	set	23
    65                           	global	_CCP1CONbits
    66  0017                     _CCP1CONbits	set	23
    67                           	global	_CCPR1L
    68  0015                     _CCPR1L	set	21
    69                           	global	_PIR1bits
    70  000C                     _PIR1bits	set	12
    71                           	global	_SSPBUF
    72  0013                     _SSPBUF	set	19
    73                           	global	_T2CON
    74  0012                     _T2CON	set	18
    75                           	global	_T2CONbits
    76  0012                     _T2CONbits	set	18
    77                           	global	_CARRY
    78  0018                     _CARRY	set	24
    79                           	global	_CKP
    80  00A4                     _CKP	set	164
    81                           	global	_GIE
    82  005F                     _GIE	set	95
    83                           	global	_INTE
    84  005C                     _INTE	set	92
    85                           	global	_PEIE
    86  005E                     _PEIE	set	94
    87                           	global	_SSPEN
    88  00A5                     _SSPEN	set	165
    89                           	global	_SSPIF
    90  0063                     _SSPIF	set	99
    91                           	global	_SSPM0
    92  00A0                     _SSPM0	set	160
    93                           	global	_SSPM1
    94  00A1                     _SSPM1	set	161
    95                           	global	_SSPM2
    96  00A2                     _SSPM2	set	162
    97                           	global	_SSPM3
    98  00A3                     _SSPM3	set	163
    99                           	global	_TMR2IF
   100  0061                     _TMR2IF	set	97
   101                           	global	_PIE1bits
   102  008C                     _PIE1bits	set	140
   103                           	global	_PR2
   104  0092                     _PR2	set	146
   105                           	global	_SSPADD
   106  0093                     _SSPADD	set	147
   107                           	global	_SSPSTAT
   108  0094                     _SSPSTAT	set	148
   109                           	global	_TRISCbits
   110  0087                     _TRISCbits	set	135
   111                           	global	_CKE
   112  04A6                     _CKE	set	1190
   113                           	global	_SMP
   114  04A7                     _SMP	set	1191
   115                           	global	_SSPIE
   116  0463                     _SSPIE	set	1123
   117                           	global	_TRISC6
   118  043E                     _TRISC6	set	1086
   119                           	global	_TRISC7
   120  043F                     _TRISC7	set	1087
   121                           	global	_EEADR
   122  010D                     _EEADR	set	269
   123                           	global	_EEDATA
   124  010C                     _EEDATA	set	268
   125                           	global	_EECON1
   126  018C                     _EECON1	set	396
   127                           	global	_EECON2
   128  018D                     _EECON2	set	397
   129                           	global	_RD
   130  0C60                     _RD	set	3168
   131                           	global	_WR
   132  0C61                     _WR	set	3169
   133                           	global	_WREN
   134  0C62                     _WREN	set	3170
   135                           	file	"C:\Users\Alan\AppData\Local\Temp\s4sg."
   136                           	line	#
   137                           psect cinit,class=CODE,delta=2
   138                           global start_initialization
   139  019E                     start_initialization:
   140                           
   141                           psect	bssCOMMON,class=COMMON,space=1
   142                           global __pbssCOMMON
   143  0077                     __pbssCOMMON:
   144  0077                     _val:
   145  0077                            ds      2
   146                           
   147                           psect	bssBANK0,class=BANK0,space=1
   148                           global __pbssBANK0
   149  0020                     __pbssBANK0:
   150  0020                     _i2cBuffer:
   151  0020                            ds      20
   152                           
   153  0034                     _setSpeed:
   154  0034                            ds      2
   155                           
   156                           psect clrtext,class=CODE,delta=2
   157                           global clear_ram
   158                           ;	Called with FSR containing the base address, and
   159                           ;	W with the last address+1
   160  01B8                     clear_ram:
   161  01B8  0064               	clrwdt			;clear the watchdog before getting into this loop
   162  01B9                     clrloop:
   163  01B9  0180               	clrf	indf		;clear RAM location pointed to by FSR
   164  01BA  0A84               	incf	fsr,f		;increment pointer
   165  01BB  0604               	xorwf	fsr,w		;XOR with final address
   166  01BC  1903               	btfsc	status,2	;have we reached the end yet?
   167  01BD  3400               	retlw	0		;all done for this memory range, return
   168  01BE  0604               	xorwf	fsr,w		;XOR again to restore value
   169  01BF  29B9               	goto	clrloop		;do the next byte
   170                           
   171                           ; Clear objects allocated to COMMON
   172                           psect cinit,class=CODE,delta=2
   173  019E  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
   174  019F  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
   175                           ; Clear objects allocated to BANK0
   176                           psect cinit,class=CODE,delta=2
   177  01A0  1383               	bcf	status, 7	;select IRP bank0
   178  01A1  3020               	movlw	low(__pbssBANK0)
   179  01A2  0084               	movwf	fsr
   180  01A3  3036               	movlw	low((__pbssBANK0)+016h)
   181  01A4  120A  118A  21B8   	fcall	clear_ram
              120A  118A         
   182                           psect cinit,class=CODE,delta=2
   183                           global end_of_initialization
   184                           
   185                           ;End of C runtime variable initialization code
   186                           
   187  01A9                     end_of_initialization:
   188  01A9  0183               clrf status
   189  01AA  120A  118A  2986   ljmp _main	;jump to C main() function
   190                           psect	cstackCOMMON,class=COMMON,space=1
   191                           global __pcstackCOMMON
   192  0070                     __pcstackCOMMON:
   193                           	global	?_Initialise
   194  0070                     ?_Initialise:	; 0 bytes @ 0x0
   195                           	global	?_BeginPWM
   196  0070                     ?_BeginPWM:	; 0 bytes @ 0x0
   197                           	global	?_i2c_init
   198  0070                     ?_i2c_init:	; 0 bytes @ 0x0
   199                           	global	?_main
   200  0070                     ?_main:	; 0 bytes @ 0x0
   201                           	global	?_isr
   202  0070                     ?_isr:	; 0 bytes @ 0x0
   203                           	global	??_isr
   204  0070                     ??_isr:	; 0 bytes @ 0x0
   205  0070                     	ds	7
   206                           psect	cstackBANK0,class=BANK0,space=1
   207                           global __pcstackBANK0
   208  0036                     __pcstackBANK0:
   209                           	global	??_Initialise
   210  0036                     ??_Initialise:	; 0 bytes @ 0x0
   211                           	global	??_BeginPWM
   212  0036                     ??_BeginPWM:	; 0 bytes @ 0x0
   213                           	global	??_i2c_init
   214  0036                     ??_i2c_init:	; 0 bytes @ 0x0
   215                           	global	?_SetPulse
   216  0036                     ?_SetPulse:	; 0 bytes @ 0x0
   217                           	global	?___wmul
   218  0036                     ?___wmul:	; 2 bytes @ 0x0
   219                           	global	SetPulse@length
   220  0036                     SetPulse@length:	; 2 bytes @ 0x0
   221                           	global	___wmul@multiplier
   222  0036                     ___wmul@multiplier:	; 2 bytes @ 0x0
   223  0036                     	ds	2
   224                           	global	??_SetPulse
   225  0038                     ??_SetPulse:	; 0 bytes @ 0x2
   226                           	global	SetPulse@temp
   227  0038                     SetPulse@temp:	; 2 bytes @ 0x2
   228                           	global	___wmul@multiplicand
   229  0038                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   230  0038                     	ds	2
   231                           	global	??___wmul
   232  003A                     ??___wmul:	; 0 bytes @ 0x4
   233                           	global	___wmul@product
   234  003A                     ___wmul@product:	; 2 bytes @ 0x4
   235  003A                     	ds	2
   236                           	global	?___awdiv
   237  003C                     ?___awdiv:	; 2 bytes @ 0x6
   238                           	global	___awdiv@divisor
   239  003C                     ___awdiv@divisor:	; 2 bytes @ 0x6
   240  003C                     	ds	2
   241                           	global	___awdiv@dividend
   242  003E                     ___awdiv@dividend:	; 2 bytes @ 0x8
   243  003E                     	ds	2
   244                           	global	??___awdiv
   245  0040                     ??___awdiv:	; 0 bytes @ 0xA
   246  0040                     	ds	1
   247                           	global	___awdiv@counter
   248  0041                     ___awdiv@counter:	; 1 bytes @ 0xB
   249  0041                     	ds	1
   250                           	global	___awdiv@sign
   251  0042                     ___awdiv@sign:	; 1 bytes @ 0xC
   252  0042                     	ds	1
   253                           	global	___awdiv@quotient
   254  0043                     ___awdiv@quotient:	; 2 bytes @ 0xD
   255  0043                     	ds	2
   256                           	global	?_CalcPulse
   257  0045                     ?_CalcPulse:	; 0 bytes @ 0xF
   258                           	global	CalcPulse@speed
   259  0045                     CalcPulse@speed:	; 2 bytes @ 0xF
   260  0045                     	ds	2
   261                           	global	??_CalcPulse
   262  0047                     ??_CalcPulse:	; 0 bytes @ 0x11
   263                           	global	CalcPulse@pulse
   264  0047                     CalcPulse@pulse:	; 2 bytes @ 0x11
   265  0047                     	ds	2
   266                           	global	??_main
   267  0049                     ??_main:	; 0 bytes @ 0x13
   268 ;;Data sizes: Strings 0, constant 0, data 0, bss 24, persistent 0 stack 0
   269 ;;Auto spaces:   Size  Autos    Used
   270 ;; COMMON          14      7       9
   271 ;; BANK0           80     19      41
   272 ;; BANK1           80      0       0
   273 ;; BANK3           96      0       0
   274 ;; BANK2           80      0       0
   275                           
   276 ;;
   277 ;; Pointer list with targets:
   278                           
   279 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   280 ;;
   281 ;; ?___awdiv	int  size(1) Largest target is 0
   282 ;;
   283                           
   284                           
   285 ;;
   286 ;; Critical Paths under _main in COMMON
   287 ;;
   288 ;;   None.
   289 ;;
   290 ;; Critical Paths under _isr in COMMON
   291 ;;
   292 ;;   None.
   293 ;;
   294 ;; Critical Paths under _main in BANK0
   295 ;;
   296 ;;   _main->_CalcPulse
   297 ;;   _CalcPulse->___awdiv
   298 ;;   ___awdiv->___wmul
   299 ;;
   300 ;; Critical Paths under _isr in BANK0
   301 ;;
   302 ;;   None.
   303 ;;
   304 ;; Critical Paths under _main in BANK1
   305 ;;
   306 ;;   None.
   307 ;;
   308 ;; Critical Paths under _isr in BANK1
   309 ;;
   310 ;;   None.
   311 ;;
   312 ;; Critical Paths under _main in BANK3
   313 ;;
   314 ;;   None.
   315 ;;
   316 ;; Critical Paths under _isr in BANK3
   317 ;;
   318 ;;   None.
   319 ;;
   320 ;; Critical Paths under _main in BANK2
   321 ;;
   322 ;;   None.
   323 ;;
   324 ;; Critical Paths under _isr in BANK2
   325 ;;
   326 ;;   None.
   327                           
   328 ;;
   329 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   330 ;;
   331                           
   332 ;;
   333 ;;Call Graph Tables:
   334 ;;
   335 ;; ---------------------------------------------------------------------------------
   336 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   337 ;; ---------------------------------------------------------------------------------
   338 ;; (0) _main                                                 1     1      0     600
   339 ;;                         _Initialise
   340 ;;                          _CalcPulse
   341 ;; ---------------------------------------------------------------------------------
   342 ;; (1) _CalcPulse                                            4     2      2     600
   343 ;;                                             15 BANK0      4     2      2
   344 ;;                             ___wmul
   345 ;;                            ___awdiv
   346 ;;                           _SetPulse
   347 ;; ---------------------------------------------------------------------------------
   348 ;; (1) _Initialise                                           0     0      0       0
   349 ;;                           _BeginPWM
   350 ;;                           _i2c_init
   351 ;; ---------------------------------------------------------------------------------
   352 ;; (2) ___awdiv                                              9     5      4     300
   353 ;;                                              6 BANK0      9     5      4
   354 ;;                             ___wmul (ARG)
   355 ;; ---------------------------------------------------------------------------------
   356 ;; (2) ___wmul                                               6     2      4     136
   357 ;;                                              0 BANK0      6     2      4
   358 ;; ---------------------------------------------------------------------------------
   359 ;; (2) _SetPulse                                             4     2      2      99
   360 ;;                                              0 BANK0      4     2      2
   361 ;; ---------------------------------------------------------------------------------
   362 ;; (2) _i2c_init                                             0     0      0       0
   363 ;; ---------------------------------------------------------------------------------
   364 ;; (2) _BeginPWM                                             0     0      0       0
   365 ;; ---------------------------------------------------------------------------------
   366 ;; Estimated maximum stack depth 2
   367 ;; ---------------------------------------------------------------------------------
   368 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   369 ;; ---------------------------------------------------------------------------------
   370 ;; (3) _isr                                                  7     7      0       0
   371 ;;                                              0 COMMON     7     7      0
   372 ;; ---------------------------------------------------------------------------------
   373 ;; Estimated maximum stack depth 3
   374 ;; ---------------------------------------------------------------------------------
   375                           
   376 ;; Call Graph Graphs:
   377                           
   378 ;; _main (ROOT)
   379 ;;   _Initialise
   380 ;;     _BeginPWM
   381 ;;     _i2c_init
   382 ;;   _CalcPulse
   383 ;;     ___wmul
   384 ;;     ___awdiv
   385 ;;       ___wmul (ARG)
   386 ;;     _SetPulse
   387 ;;
   388 ;; _isr (ROOT)
   389 ;;
   390                           
   391 ;; Address spaces:
   392                           
   393 ;;Name               Size   Autos  Total    Cost      Usage
   394 ;;BITCOMMON            E      0       0       0        0.0%
   395 ;;EEDATA             100      0       0       0        0.0%
   396 ;;NULL                 0      0       0       0        0.0%
   397 ;;CODE                 0      0       0       0        0.0%
   398 ;;COMMON               E      7       9       1       64.3%
   399 ;;BITSFR0              0      0       0       1        0.0%
   400 ;;SFR0                 0      0       0       1        0.0%
   401 ;;BITSFR1              0      0       0       2        0.0%
   402 ;;SFR1                 0      0       0       2        0.0%
   403 ;;STACK                0      0       2       2        0.0%
   404 ;;BITBANK0            50      0       0       3        0.0%
   405 ;;BANK0               50     13      29       4       51.3%
   406 ;;BITSFR3              0      0       0       4        0.0%
   407 ;;SFR3                 0      0       0       4        0.0%
   408 ;;BITBANK1            50      0       0       5        0.0%
   409 ;;BITSFR2              0      0       0       5        0.0%
   410 ;;SFR2                 0      0       0       5        0.0%
   411 ;;BANK1               50      0       0       6        0.0%
   412 ;;BITBANK3            60      0       0       7        0.0%
   413 ;;BANK3               60      0       0       8        0.0%
   414 ;;BANK2               50      0       0       9        0.0%
   415 ;;ABS                  0      0      32      10        0.0%
   416 ;;BITBANK2            50      0       0      11        0.0%
   417 ;;DATA                 0      0      34      12        0.0%
   418                           
   419                           	global	_main
   420                           psect	maintext,global,class=CODE,delta=2
   421                           global __pmaintext
   422  0186                     __pmaintext:
   423                           
   424 ;; *************** function _main *****************
   425 ;; Defined at:
   426 ;;		line 31 in file "PWMmain.c"
   427 ;; Parameters:    Size  Location     Type
   428 ;;		None
   429 ;; Auto vars:     Size  Location     Type
   430 ;;  dc              1    0        unsigned char 
   431 ;; Return value:  Size  Location     Type
   432 ;;		None               void
   433 ;; Registers used:
   434 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   435 ;; Tracked objects:
   436 ;;		On entry : 17F/0
   437 ;;		On exit  : 0/0
   438 ;;		Unchanged: 0/0
   439 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   440 ;;      Params:         0       0       0       0       0
   441 ;;      Locals:         0       0       0       0       0
   442 ;;      Temps:          0       0       0       0       0
   443 ;;      Totals:         0       0       0       0       0
   444 ;;Total ram usage:        0 bytes
   445 ;; Hardware stack levels required when called:    3
   446 ;; This function calls:
   447 ;;		_Initialise
   448 ;;		_CalcPulse
   449 ;; This function is called by:
   450 ;;		Startup code after reset
   451 ;; This function uses a non-reentrant model
   452 ;;
   453                           psect	maintext
   454                           	file	"PWMmain.c"
   455                           	line	31
   456                           	global	__size_of_main
   457  0018                     	__size_of_main	equ	__end_of_main-_main
   458                           	
   459  0186                     _main:	
   460                           	opt	stack 5
   461                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   462                           	line	33
   463                           	
   464  0186                     l5980:	
   465                           ;PWMmain.c: 32: unsigned char dc;
   466                           ;PWMmain.c: 33: Initialise();
   467  0186  120A  118A  21AD   	fcall	_Initialise
              120A  118A         
   468  018B  298C               	goto	l5982
   469                           	line	54
   470                           ;PWMmain.c: 54: while (1)
   471                           	
   472  018C                     l1507:	
   473                           	line	55
   474                           	
   475  018C                     l5982:	
   476                           ;PWMmain.c: 55: CalcPulse(setSpeed);
   477  018C  1283               	bcf	status, 5	;RP0=0, select bank0
   478  018D  1303               	bcf	status, 6	;RP1=0, select bank0
   479  018E  0835               	movf	(_setSpeed+1),w
   480  018F  01C6               	clrf	(?_CalcPulse+1)
   481  0190  07C6               	addwf	(?_CalcPulse+1)
   482  0191  0834               	movf	(_setSpeed),w
   483  0192  01C5               	clrf	(?_CalcPulse)
   484  0193  07C5               	addwf	(?_CalcPulse)
   485                           
   486  0194  120A  118A  20C7   	fcall	_CalcPulse
              120A  118A         
   487  0199  298C               	goto	l5982
   488                           	
   489  019A                     l1508:	
   490                           	line	54
   491  019A  298C               	goto	l5982
   492                           	
   493  019B                     l1509:	
   494                           	line	58
   495                           	
   496  019B                     l1510:	
   497                           	global	start
   498  019B  120A  118A  2812   	ljmp	start
   499                           	opt stack 0
   500                           GLOBAL	__end_of_main
   501  019E                     	__end_of_main:
   502 ;; =============== function _main ends ============
   503                           
   504                           	signat	_main,88
   505                           	global	_CalcPulse
   506                           psect	text328,local,class=CODE,delta=2
   507                           global __ptext328
   508  00C7                     __ptext328:
   509                           
   510 ;; *************** function _CalcPulse *****************
   511 ;; Defined at:
   512 ;;		line 84 in file "PWMmain.c"
   513 ;; Parameters:    Size  Location     Type
   514 ;;  speed           2   15[BANK0 ] int 
   515 ;; Auto vars:     Size  Location     Type
   516 ;;  pulse           2   17[BANK0 ] int 
   517 ;; Return value:  Size  Location     Type
   518 ;;		None               void
   519 ;; Registers used:
   520 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   521 ;; Tracked objects:
   522 ;;		On entry : 0/0
   523 ;;		On exit  : 0/0
   524 ;;		Unchanged: 0/0
   525 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   526 ;;      Params:         0       2       0       0       0
   527 ;;      Locals:         0       2       0       0       0
   528 ;;      Temps:          0       0       0       0       0
   529 ;;      Totals:         0       4       0       0       0
   530 ;;Total ram usage:        4 bytes
   531 ;; Hardware stack levels used:    1
   532 ;; Hardware stack levels required when called:    2
   533 ;; This function calls:
   534 ;;		___wmul
   535 ;;		___awdiv
   536 ;;		_SetPulse
   537 ;; This function is called by:
   538 ;;		_main
   539 ;; This function uses a non-reentrant model
   540 ;;
   541                           psect	text328
   542                           	file	"PWMmain.c"
   543                           	line	84
   544                           	global	__size_of_CalcPulse
   545  0036                     	__size_of_CalcPulse	equ	__end_of_CalcPulse-_CalcPulse
   546                           	
   547  00C7                     _CalcPulse:	
   548                           	opt	stack 5
   549                           ; Regs used in _CalcPulse: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   550                           	line	85
   551                           	
   552  00C7                     l5976:	
   553                           ;PWMmain.c: 85: int pulse = speed*255/10;
   554  00C7  300A               	movlw	low(0Ah)
   555  00C8  1283               	bcf	status, 5	;RP0=0, select bank0
   556  00C9  1303               	bcf	status, 6	;RP1=0, select bank0
   557  00CA  00BC               	movwf	(?___awdiv)
   558  00CB  3000               	movlw	high(0Ah)
   559  00CC  00BD               	movwf	((?___awdiv))+1
   560  00CD  0846               	movf	(CalcPulse@speed+1),w
   561  00CE  01B7               	clrf	(?___wmul+1)
   562  00CF  07B7               	addwf	(?___wmul+1)
   563  00D0  0845               	movf	(CalcPulse@speed),w
   564  00D1  01B6               	clrf	(?___wmul)
   565  00D2  07B6               	addwf	(?___wmul)
   566                           
   567  00D3  30FF               	movlw	low(0FFh)
   568  00D4  00B8               	movwf	0+(?___wmul)+02h
   569  00D5  3000               	movlw	high(0FFh)
   570  00D6  00B9               	movwf	(0+(?___wmul)+02h)+1
   571  00D7  120A  118A  20FD   	fcall	___wmul
              120A  118A         
   572  00DC  1283               	bcf	status, 5	;RP0=0, select bank0
   573  00DD  1303               	bcf	status, 6	;RP1=0, select bank0
   574  00DE  0837               	movf	(1+(?___wmul)),w
   575  00DF  01BF               	clrf	1+(?___awdiv)+02h
   576  00E0  07BF               	addwf	1+(?___awdiv)+02h
   577  00E1  0836               	movf	(0+(?___wmul)),w
   578  00E2  01BE               	clrf	0+(?___awdiv)+02h
   579  00E3  07BE               	addwf	0+(?___awdiv)+02h
   580                           
   581  00E4  120A  118A  2015   	fcall	___awdiv
              120A  118A         
   582  00E9  1283               	bcf	status, 5	;RP0=0, select bank0
   583  00EA  1303               	bcf	status, 6	;RP1=0, select bank0
   584  00EB  083D               	movf	(1+(?___awdiv)),w
   585  00EC  01C8               	clrf	(CalcPulse@pulse+1)
   586  00ED  07C8               	addwf	(CalcPulse@pulse+1)
   587  00EE  083C               	movf	(0+(?___awdiv)),w
   588  00EF  01C7               	clrf	(CalcPulse@pulse)
   589  00F0  07C7               	addwf	(CalcPulse@pulse)
   590                           
   591                           	line	86
   592                           	
   593  00F1                     l5978:	
   594                           ;PWMmain.c: 86: SetPulse(pulse);
   595  00F1  0848               	movf	(CalcPulse@pulse+1),w
   596  00F2  01B7               	clrf	(?_SetPulse+1)
   597  00F3  07B7               	addwf	(?_SetPulse+1)
   598  00F4  0847               	movf	(CalcPulse@pulse),w
   599  00F5  01B6               	clrf	(?_SetPulse)
   600  00F6  07B6               	addwf	(?_SetPulse)
   601                           
   602  00F7  120A  118A  2129   	fcall	_SetPulse
              120A  118A         
   603                           	line	87
   604                           	
   605  00FC                     l1522:	
   606  00FC  0008               	return
   607                           	opt stack 0
   608                           GLOBAL	__end_of_CalcPulse
   609  00FD                     	__end_of_CalcPulse:
   610 ;; =============== function _CalcPulse ends ============
   611                           
   612                           	signat	_CalcPulse,4216
   613                           	global	_Initialise
   614                           psect	text329,local,class=CODE,delta=2
   615                           global __ptext329
   616  01AD                     __ptext329:
   617                           
   618 ;; *************** function _Initialise *****************
   619 ;; Defined at:
   620 ;;		line 74 in file "PWMmain.c"
   621 ;; Parameters:    Size  Location     Type
   622 ;;		None
   623 ;; Auto vars:     Size  Location     Type
   624 ;;		None
   625 ;; Return value:  Size  Location     Type
   626 ;;		None               void
   627 ;; Registers used:
   628 ;;		wreg, status,2, status,0, pclath, cstack
   629 ;; Tracked objects:
   630 ;;		On entry : 0/0
   631 ;;		On exit  : 0/0
   632 ;;		Unchanged: 0/0
   633 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   634 ;;      Params:         0       0       0       0       0
   635 ;;      Locals:         0       0       0       0       0
   636 ;;      Temps:          0       0       0       0       0
   637 ;;      Totals:         0       0       0       0       0
   638 ;;Total ram usage:        0 bytes
   639 ;; Hardware stack levels used:    1
   640 ;; Hardware stack levels required when called:    2
   641 ;; This function calls:
   642 ;;		_BeginPWM
   643 ;;		_i2c_init
   644 ;; This function is called by:
   645 ;;		_main
   646 ;; This function uses a non-reentrant model
   647 ;;
   648                           psect	text329
   649                           	file	"PWMmain.c"
   650                           	line	74
   651                           	global	__size_of_Initialise
   652  000B                     	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   653                           	
   654  01AD                     _Initialise:	
   655                           	opt	stack 5
   656                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   657                           	line	75
   658                           	
   659  01AD                     l5974:	
   660                           ;PWMmain.c: 75: BeginPWM();
   661  01AD  120A  118A  2168   	fcall	_BeginPWM
              120A  118A         
   662                           	line	76
   663                           ;PWMmain.c: 76: i2c_init();
   664  01B2  120A  118A  2149   	fcall	_i2c_init
              120A  118A         
   665                           	line	78
   666                           	
   667  01B7                     l1519:	
   668  01B7  0008               	return
   669                           	opt stack 0
   670                           GLOBAL	__end_of_Initialise
   671  01B8                     	__end_of_Initialise:
   672 ;; =============== function _Initialise ends ============
   673                           
   674                           	signat	_Initialise,88
   675                           	global	___awdiv
   676                           psect	text330,local,class=CODE,delta=2
   677                           global __ptext330
   678  0015                     __ptext330:
   679                           
   680 ;; *************** function ___awdiv *****************
   681 ;; Defined at:
   682 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;  divisor         2    6[BANK0 ] int 
   685 ;;  dividend        2    8[BANK0 ] int 
   686 ;; Auto vars:     Size  Location     Type
   687 ;;  quotient        2   13[BANK0 ] int 
   688 ;;  sign            1   12[BANK0 ] unsigned char 
   689 ;;  counter         1   11[BANK0 ] unsigned char 
   690 ;; Return value:  Size  Location     Type
   691 ;;                  2    6[BANK0 ] int 
   692 ;; Registers used:
   693 ;;		wreg, status,2, status,0
   694 ;; Tracked objects:
   695 ;;		On entry : 0/0
   696 ;;		On exit  : 0/0
   697 ;;		Unchanged: 0/0
   698 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   699 ;;      Params:         0       4       0       0       0
   700 ;;      Locals:         0       4       0       0       0
   701 ;;      Temps:          0       1       0       0       0
   702 ;;      Totals:         0       9       0       0       0
   703 ;;Total ram usage:        9 bytes
   704 ;; Hardware stack levels used:    1
   705 ;; Hardware stack levels required when called:    1
   706 ;; This function calls:
   707 ;;		Nothing
   708 ;; This function is called by:
   709 ;;		_CalcPulse
   710 ;; This function uses a non-reentrant model
   711 ;;
   712                           psect	text330
   713                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
   714                           	line	5
   715                           	global	__size_of___awdiv
   716  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
   717                           	
   718  0015                     ___awdiv:	
   719                           	opt	stack 5
   720                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   721                           	line	9
   722                           	
   723  0015                     l5872:	
   724  0015  1283               	bcf	status, 5	;RP0=0, select bank0
   725  0016  1303               	bcf	status, 6	;RP1=0, select bank0
   726  0017  01C2               	clrf	(___awdiv@sign)
   727                           	line	10
   728  0018  1FBD               	btfss	(___awdiv@divisor+1),7
   729  0019  281B               	goto	u2361
   730  001A  281C               	goto	u2360
   731  001B                     u2361:
   732  001B  2825               	goto	l5876
   733  001C                     u2360:
   734                           	line	11
   735                           	
   736  001C                     l5874:	
   737  001C  09BC               	comf	(___awdiv@divisor),f
   738  001D  09BD               	comf	(___awdiv@divisor+1),f
   739  001E  0ABC               	incf	(___awdiv@divisor),f
   740  001F  1903               	skipnz
   741  0020  0ABD               	incf	(___awdiv@divisor+1),f
   742                           	line	12
   743  0021  01C2               	clrf	(___awdiv@sign)
   744  0022  1403               	bsf	status,0
   745  0023  0DC2               	rlf	(___awdiv@sign),f
   746  0024  2825               	goto	l5876
   747                           	line	13
   748                           	
   749  0025                     l4614:	
   750                           	line	14
   751                           	
   752  0025                     l5876:	
   753  0025  1FBF               	btfss	(___awdiv@dividend+1),7
   754  0026  2828               	goto	u2371
   755  0027  2829               	goto	u2370
   756  0028                     u2371:
   757  0028  2833               	goto	l5882
   758  0029                     u2370:
   759                           	line	15
   760                           	
   761  0029                     l5878:	
   762  0029  09BE               	comf	(___awdiv@dividend),f
   763  002A  09BF               	comf	(___awdiv@dividend+1),f
   764  002B  0ABE               	incf	(___awdiv@dividend),f
   765  002C  1903               	skipnz
   766  002D  0ABF               	incf	(___awdiv@dividend+1),f
   767                           	line	16
   768                           	
   769  002E                     l5880:	
   770  002E  3001               	movlw	(01h)
   771  002F  00C0               	movwf	(??___awdiv+0)+0
   772  0030  0840               	movf	(??___awdiv+0)+0,w
   773  0031  06C2               	xorwf	(___awdiv@sign),f
   774  0032  2833               	goto	l5882
   775                           	line	17
   776                           	
   777  0033                     l4615:	
   778                           	line	18
   779                           	
   780  0033                     l5882:	
   781  0033  01C3               	clrf	(___awdiv@quotient)
   782  0034  01C4               	clrf	(___awdiv@quotient+1)
   783                           	line	19
   784                           	
   785  0035                     l5884:	
   786  0035  083D               	movf	(___awdiv@divisor+1),w
   787  0036  043C               	iorwf	(___awdiv@divisor),w
   788  0037  1903               	skipnz
   789  0038  283A               	goto	u2381
   790  0039  283B               	goto	u2380
   791  003A                     u2381:
   792  003A  2879               	goto	l5904
   793  003B                     u2380:
   794                           	line	20
   795                           	
   796  003B                     l5886:	
   797  003B  01C1               	clrf	(___awdiv@counter)
   798  003C  1403               	bsf	status,0
   799  003D  0DC1               	rlf	(___awdiv@counter),f
   800                           	line	21
   801  003E  284B               	goto	l5892
   802                           	
   803  003F                     l4618:	
   804                           	line	22
   805                           	
   806  003F                     l5888:	
   807  003F  3001               	movlw	01h
   808                           	
   809  0040                     u2395:
   810  0040  1003               	clrc
   811  0041  0DBC               	rlf	(___awdiv@divisor),f
   812  0042  0DBD               	rlf	(___awdiv@divisor+1),f
   813  0043  3EFF               	addlw	-1
   814  0044  1D03               	skipz
   815  0045  2840               	goto	u2395
   816                           	line	23
   817                           	
   818  0046                     l5890:	
   819  0046  3001               	movlw	(01h)
   820  0047  00C0               	movwf	(??___awdiv+0)+0
   821  0048  0840               	movf	(??___awdiv+0)+0,w
   822  0049  07C1               	addwf	(___awdiv@counter),f
   823  004A  284B               	goto	l5892
   824                           	line	24
   825                           	
   826  004B                     l4617:	
   827                           	line	21
   828                           	
   829  004B                     l5892:	
   830  004B  1FBD               	btfss	(___awdiv@divisor+1),(15)&7
   831  004C  284E               	goto	u2401
   832  004D  284F               	goto	u2400
   833  004E                     u2401:
   834  004E  283F               	goto	l5888
   835  004F                     u2400:
   836  004F  2851               	goto	l5894
   837                           	
   838  0050                     l4619:	
   839  0050  2851               	goto	l5894
   840                           	line	25
   841                           	
   842  0051                     l4620:	
   843                           	line	26
   844                           	
   845  0051                     l5894:	
   846  0051  3001               	movlw	01h
   847                           	
   848  0052                     u2415:
   849  0052  1003               	clrc
   850  0053  0DC3               	rlf	(___awdiv@quotient),f
   851  0054  0DC4               	rlf	(___awdiv@quotient+1),f
   852  0055  3EFF               	addlw	-1
   853  0056  1D03               	skipz
   854  0057  2852               	goto	u2415
   855                           	line	27
   856  0058  083D               	movf	(___awdiv@divisor+1),w
   857  0059  023F               	subwf	(___awdiv@dividend+1),w
   858  005A  1D03               	skipz
   859  005B  285E               	goto	u2425
   860  005C  083C               	movf	(___awdiv@divisor),w
   861  005D  023E               	subwf	(___awdiv@dividend),w
   862  005E                     u2425:
   863  005E  1C03               	skipc
   864  005F  2861               	goto	u2421
   865  0060  2862               	goto	u2420
   866  0061                     u2421:
   867  0061  286A               	goto	l5900
   868  0062                     u2420:
   869                           	line	28
   870                           	
   871  0062                     l5896:	
   872  0062  083C               	movf	(___awdiv@divisor),w
   873  0063  02BE               	subwf	(___awdiv@dividend),f
   874  0064  083D               	movf	(___awdiv@divisor+1),w
   875  0065  1C03               	skipc
   876  0066  03BF               	decf	(___awdiv@dividend+1),f
   877  0067  02BF               	subwf	(___awdiv@dividend+1),f
   878                           	line	29
   879                           	
   880  0068                     l5898:	
   881  0068  1443               	bsf	(___awdiv@quotient)+(0/8),(0)&7
   882  0069  286A               	goto	l5900
   883                           	line	30
   884                           	
   885  006A                     l4621:	
   886                           	line	31
   887                           	
   888  006A                     l5900:	
   889  006A  3001               	movlw	01h
   890                           	
   891  006B                     u2435:
   892  006B  1003               	clrc
   893  006C  0CBD               	rrf	(___awdiv@divisor+1),f
   894  006D  0CBC               	rrf	(___awdiv@divisor),f
   895  006E  3EFF               	addlw	-1
   896  006F  1D03               	skipz
   897  0070  286B               	goto	u2435
   898                           	line	32
   899                           	
   900  0071                     l5902:	
   901  0071  3001               	movlw	low(01h)
   902  0072  02C1               	subwf	(___awdiv@counter),f
   903  0073  1D03               	btfss	status,2
   904  0074  2876               	goto	u2441
   905  0075  2877               	goto	u2440
   906  0076                     u2441:
   907  0076  2851               	goto	l5894
   908  0077                     u2440:
   909  0077  2879               	goto	l5904
   910                           	
   911  0078                     l4622:	
   912  0078  2879               	goto	l5904
   913                           	line	33
   914                           	
   915  0079                     l4616:	
   916                           	line	34
   917                           	
   918  0079                     l5904:	
   919  0079  0842               	movf	(___awdiv@sign),w
   920  007A  1D03               	skipz
   921  007B  287D               	goto	u2450
   922  007C  2883               	goto	l5908
   923  007D                     u2450:
   924                           	line	35
   925                           	
   926  007D                     l5906:	
   927  007D  09C3               	comf	(___awdiv@quotient),f
   928  007E  09C4               	comf	(___awdiv@quotient+1),f
   929  007F  0AC3               	incf	(___awdiv@quotient),f
   930  0080  1903               	skipnz
   931  0081  0AC4               	incf	(___awdiv@quotient+1),f
   932  0082  2883               	goto	l5908
   933                           	
   934  0083                     l4623:	
   935                           	line	36
   936                           	
   937  0083                     l5908:	
   938  0083  0844               	movf	(___awdiv@quotient+1),w
   939  0084  01BD               	clrf	(?___awdiv+1)
   940  0085  07BD               	addwf	(?___awdiv+1)
   941  0086  0843               	movf	(___awdiv@quotient),w
   942  0087  01BC               	clrf	(?___awdiv)
   943  0088  07BC               	addwf	(?___awdiv)
   944                           
   945  0089  288A               	goto	l4624
   946                           	
   947  008A                     l5910:	
   948                           	line	37
   949                           	
   950  008A                     l4624:	
   951  008A  0008               	return
   952                           	opt stack 0
   953                           GLOBAL	__end_of___awdiv
   954  008B                     	__end_of___awdiv:
   955 ;; =============== function ___awdiv ends ============
   956                           
   957                           	signat	___awdiv,8314
   958                           	global	___wmul
   959                           psect	text331,local,class=CODE,delta=2
   960                           global __ptext331
   961  00FD                     __ptext331:
   962                           
   963 ;; *************** function ___wmul *****************
   964 ;; Defined at:
   965 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
   966 ;; Parameters:    Size  Location     Type
   967 ;;  multiplier      2    0[BANK0 ] unsigned int 
   968 ;;  multiplicand    2    2[BANK0 ] unsigned int 
   969 ;; Auto vars:     Size  Location     Type
   970 ;;  product         2    4[BANK0 ] unsigned int 
   971 ;; Return value:  Size  Location     Type
   972 ;;                  2    0[BANK0 ] unsigned int 
   973 ;; Registers used:
   974 ;;		wreg, status,2, status,0
   975 ;; Tracked objects:
   976 ;;		On entry : 0/0
   977 ;;		On exit  : 0/0
   978 ;;		Unchanged: 0/0
   979 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   980 ;;      Params:         0       4       0       0       0
   981 ;;      Locals:         0       2       0       0       0
   982 ;;      Temps:          0       0       0       0       0
   983 ;;      Totals:         0       6       0       0       0
   984 ;;Total ram usage:        6 bytes
   985 ;; Hardware stack levels used:    1
   986 ;; Hardware stack levels required when called:    1
   987 ;; This function calls:
   988 ;;		Nothing
   989 ;; This function is called by:
   990 ;;		_CalcPulse
   991 ;; This function uses a non-reentrant model
   992 ;;
   993                           psect	text331
   994                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
   995                           	line	3
   996                           	global	__size_of___wmul
   997  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
   998                           	
   999  00FD                     ___wmul:	
  1000                           	opt	stack 5
  1001                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1002                           	line	4
  1003                           	
  1004  00FD                     l5962:	
  1005  00FD  1283               	bcf	status, 5	;RP0=0, select bank0
  1006  00FE  1303               	bcf	status, 6	;RP1=0, select bank0
  1007  00FF  01BA               	clrf	(___wmul@product)
  1008  0100  01BB               	clrf	(___wmul@product+1)
  1009  0101  2902               	goto	l5964
  1010                           	line	6
  1011                           	
  1012  0102                     l4474:	
  1013                           	line	7
  1014                           	
  1015  0102                     l5964:	
  1016  0102  1C36               	btfss	(___wmul@multiplier),(0)&7
  1017  0103  2905               	goto	u2481
  1018  0104  2906               	goto	u2480
  1019  0105                     u2481:
  1020  0105  290C               	goto	l4475
  1021  0106                     u2480:
  1022                           	line	8
  1023                           	
  1024  0106                     l5966:	
  1025  0106  0838               	movf	(___wmul@multiplicand),w
  1026  0107  07BA               	addwf	(___wmul@product),f
  1027  0108  1803               	skipnc
  1028  0109  0ABB               	incf	(___wmul@product+1),f
  1029  010A  0839               	movf	(___wmul@multiplicand+1),w
  1030  010B  07BB               	addwf	(___wmul@product+1),f
  1031                           	
  1032  010C                     l4475:	
  1033                           	line	9
  1034  010C  3001               	movlw	01h
  1035                           	
  1036  010D                     u2495:
  1037  010D  1003               	clrc
  1038  010E  0DB8               	rlf	(___wmul@multiplicand),f
  1039  010F  0DB9               	rlf	(___wmul@multiplicand+1),f
  1040  0110  3EFF               	addlw	-1
  1041  0111  1D03               	skipz
  1042  0112  290D               	goto	u2495
  1043                           	line	10
  1044                           	
  1045  0113                     l5968:	
  1046  0113  3001               	movlw	01h
  1047                           	
  1048  0114                     u2505:
  1049  0114  1003               	clrc
  1050  0115  0CB7               	rrf	(___wmul@multiplier+1),f
  1051  0116  0CB6               	rrf	(___wmul@multiplier),f
  1052  0117  3EFF               	addlw	-1
  1053  0118  1D03               	skipz
  1054  0119  2914               	goto	u2505
  1055                           	line	11
  1056  011A  0837               	movf	((___wmul@multiplier+1)),w
  1057  011B  0436               	iorwf	((___wmul@multiplier)),w
  1058  011C  1D03               	skipz
  1059  011D  291F               	goto	u2511
  1060  011E  2920               	goto	u2510
  1061  011F                     u2511:
  1062  011F  2902               	goto	l5964
  1063  0120                     u2510:
  1064  0120  2921               	goto	l5970
  1065                           	
  1066  0121                     l4476:	
  1067                           	line	12
  1068                           	
  1069  0121                     l5970:	
  1070  0121  083B               	movf	(___wmul@product+1),w
  1071  0122  01B7               	clrf	(?___wmul+1)
  1072  0123  07B7               	addwf	(?___wmul+1)
  1073  0124  083A               	movf	(___wmul@product),w
  1074  0125  01B6               	clrf	(?___wmul)
  1075  0126  07B6               	addwf	(?___wmul)
  1076                           
  1077  0127  2928               	goto	l4477
  1078                           	
  1079  0128                     l5972:	
  1080                           	line	13
  1081                           	
  1082  0128                     l4477:	
  1083  0128  0008               	return
  1084                           	opt stack 0
  1085                           GLOBAL	__end_of___wmul
  1086  0129                     	__end_of___wmul:
  1087 ;; =============== function ___wmul ends ============
  1088                           
  1089                           	signat	___wmul,8314
  1090                           	global	_SetPulse
  1091                           psect	text332,local,class=CODE,delta=2
  1092                           global __ptext332
  1093  0129                     __ptext332:
  1094                           
  1095 ;; *************** function _SetPulse *****************
  1096 ;; Defined at:
  1097 ;;		line 105 in file "pwmlib.c"
  1098 ;; Parameters:    Size  Location     Type
  1099 ;;  length          2    0[BANK0 ] int 
  1100 ;; Auto vars:     Size  Location     Type
  1101 ;;  temp            2    2[BANK0 ] int 
  1102 ;; Return value:  Size  Location     Type
  1103 ;;		None               void
  1104 ;; Registers used:
  1105 ;;		wreg, status,2, status,0, btemp+1
  1106 ;; Tracked objects:
  1107 ;;		On entry : 0/0
  1108 ;;		On exit  : 0/0
  1109 ;;		Unchanged: 0/0
  1110 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1111 ;;      Params:         0       2       0       0       0
  1112 ;;      Locals:         0       2       0       0       0
  1113 ;;      Temps:          0       0       0       0       0
  1114 ;;      Totals:         0       4       0       0       0
  1115 ;;Total ram usage:        4 bytes
  1116 ;; Hardware stack levels used:    1
  1117 ;; Hardware stack levels required when called:    1
  1118 ;; This function calls:
  1119 ;;		Nothing
  1120 ;; This function is called by:
  1121 ;;		_CalcPulse
  1122 ;; This function uses a non-reentrant model
  1123 ;;
  1124                           psect	text332
  1125                           	file	"pwmlib.c"
  1126                           	line	105
  1127                           	global	__size_of_SetPulse
  1128  0020                     	__size_of_SetPulse	equ	__end_of_SetPulse-_SetPulse
  1129                           	
  1130  0129                     _SetPulse:	
  1131                           	opt	stack 5
  1132                           ; Regs used in _SetPulse: [wreg+status,2+status,0+btemp+1]
  1133                           	line	106
  1134                           	
  1135  0129                     l5956:	
  1136                           ;pwmlib.c: 106: int temp = length;
  1137  0129  1283               	bcf	status, 5	;RP0=0, select bank0
  1138  012A  1303               	bcf	status, 6	;RP1=0, select bank0
  1139  012B  0837               	movf	(SetPulse@length+1),w
  1140  012C  01B9               	clrf	(SetPulse@temp+1)
  1141  012D  07B9               	addwf	(SetPulse@temp+1)
  1142  012E  0836               	movf	(SetPulse@length),w
  1143  012F  01B8               	clrf	(SetPulse@temp)
  1144  0130  07B8               	addwf	(SetPulse@temp)
  1145                           
  1146                           	line	107
  1147                           	
  1148  0131                     l5958:	
  1149                           ;pwmlib.c: 107: if (temp > 255)
  1150  0131  0839               	movf	(SetPulse@temp+1),w
  1151  0132  3A80               	xorlw	80h
  1152  0133  00FF               	movwf	btemp+1
  1153  0134  3081               	movlw	(high(0100h))^80h
  1154  0135  027F               	subwf	btemp+1,w
  1155  0136  1D03               	skipz
  1156  0137  293A               	goto	u2475
  1157  0138  3000               	movlw	low(0100h)
  1158  0139  0238               	subwf	(SetPulse@temp),w
  1159  013A                     u2475:
  1160                           
  1161  013A  1C03               	skipc
  1162  013B  293D               	goto	u2471
  1163  013C  293E               	goto	u2470
  1164  013D                     u2471:
  1165  013D  2944               	goto	l3033
  1166  013E                     u2470:
  1167                           	line	108
  1168                           	
  1169  013E                     l5960:	
  1170                           ;pwmlib.c: 108: temp = 255;
  1171  013E  30FF               	movlw	low(0FFh)
  1172  013F  1283               	bcf	status, 5	;RP0=0, select bank0
  1173  0140  1303               	bcf	status, 6	;RP1=0, select bank0
  1174  0141  00B8               	movwf	(SetPulse@temp)
  1175  0142  3000               	movlw	high(0FFh)
  1176  0143  00B9               	movwf	((SetPulse@temp))+1
  1177                           	
  1178  0144                     l3033:	
  1179                           	line	109
  1180                           ;pwmlib.c: 109: CCPR1L = temp;
  1181  0144  1283               	bcf	status, 5	;RP0=0, select bank0
  1182  0145  1303               	bcf	status, 6	;RP1=0, select bank0
  1183  0146  0838               	movf	(SetPulse@temp),w
  1184  0147  0095               	movwf	(21)	;volatile
  1185                           	line	113
  1186                           	
  1187  0148                     l3034:	
  1188  0148  0008               	return
  1189                           	opt stack 0
  1190                           GLOBAL	__end_of_SetPulse
  1191  0149                     	__end_of_SetPulse:
  1192 ;; =============== function _SetPulse ends ============
  1193                           
  1194                           	signat	_SetPulse,4216
  1195                           	global	_i2c_init
  1196                           psect	text333,local,class=CODE,delta=2
  1197                           global __ptext333
  1198  0149                     __ptext333:
  1199                           
  1200 ;; *************** function _i2c_init *****************
  1201 ;; Defined at:
  1202 ;;		line 92 in file "PWMmain.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;		None               void
  1209 ;; Registers used:
  1210 ;;		wreg, status,2
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0
  1219 ;;      Totals:         0       0       0       0       0
  1220 ;;Total ram usage:        0 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    1
  1223 ;; This function calls:
  1224 ;;		Nothing
  1225 ;; This function is called by:
  1226 ;;		_Initialise
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           psect	text333
  1230                           	file	"PWMmain.c"
  1231                           	line	92
  1232                           	global	__size_of_i2c_init
  1233  001F                     	__size_of_i2c_init	equ	__end_of_i2c_init-_i2c_init
  1234                           	
  1235  0149                     _i2c_init:	
  1236                           	opt	stack 5
  1237                           ; Regs used in _i2c_init: [wreg+status,2]
  1238                           	line	93
  1239                           	
  1240  0149                     l5944:	
  1241                           ;PWMmain.c: 93: TRISC6 = 1;
  1242  0149  1683               	bsf	status, 5	;RP0=1, select bank1
  1243  014A  1303               	bcf	status, 6	;RP1=0, select bank1
  1244  014B  1707               	bsf	(1086/8)^080h,(1086)&7
  1245                           	line	94
  1246                           ;PWMmain.c: 94: TRISC7 = 1;
  1247  014C  1787               	bsf	(1087/8)^080h,(1087)&7
  1248                           	line	95
  1249                           ;PWMmain.c: 95: SSPEN = 1;
  1250  014D  1283               	bcf	status, 5	;RP0=0, select bank0
  1251  014E  1303               	bcf	status, 6	;RP1=0, select bank0
  1252  014F  1694               	bsf	(165/8),(165)&7
  1253                           	line	96
  1254                           ;PWMmain.c: 96: CKE = 0;
  1255  0150  1683               	bsf	status, 5	;RP0=1, select bank1
  1256  0151  1303               	bcf	status, 6	;RP1=0, select bank1
  1257  0152  1314               	bcf	(1190/8)^080h,(1190)&7
  1258                           	line	97
  1259                           ;PWMmain.c: 97: SMP = 0;
  1260  0153  1394               	bcf	(1191/8)^080h,(1191)&7
  1261                           	line	98
  1262                           ;PWMmain.c: 98: CKP = 1;
  1263  0154  1283               	bcf	status, 5	;RP0=0, select bank0
  1264  0155  1303               	bcf	status, 6	;RP1=0, select bank0
  1265  0156  1614               	bsf	(164/8),(164)&7
  1266                           	line	100
  1267                           ;PWMmain.c: 100: SSPM0 = 0;
  1268  0157  1014               	bcf	(160/8),(160)&7
  1269                           	line	101
  1270                           ;PWMmain.c: 101: SSPM1 = 1;
  1271  0158  1494               	bsf	(161/8),(161)&7
  1272                           	line	102
  1273                           ;PWMmain.c: 102: SSPM2 = 1;
  1274  0159  1514               	bsf	(162/8),(162)&7
  1275                           	line	103
  1276                           ;PWMmain.c: 103: SSPM3 = 0;
  1277  015A  1194               	bcf	(163/8),(163)&7
  1278                           	line	105
  1279                           ;PWMmain.c: 105: SSPIE =1;
  1280  015B  1683               	bsf	status, 5	;RP0=1, select bank1
  1281  015C  1303               	bcf	status, 6	;RP1=0, select bank1
  1282  015D  158C               	bsf	(1123/8)^080h,(1123)&7
  1283                           	line	107
  1284                           	
  1285  015E                     l5946:	
  1286                           ;PWMmain.c: 107: SSPADD = 0b10100100;
  1287  015E  30A4               	movlw	(0A4h)
  1288  015F  0093               	movwf	(147)^080h	;volatile
  1289                           	line	108
  1290                           	
  1291  0160                     l5948:	
  1292                           ;PWMmain.c: 108: PEIE = 1;
  1293  0160  170B               	bsf	(94/8),(94)&7
  1294                           	line	109
  1295                           	
  1296  0161                     l5950:	
  1297                           ;PWMmain.c: 109: GIE = 1;
  1298  0161  178B               	bsf	(95/8),(95)&7
  1299                           	line	110
  1300                           	
  1301  0162                     l5952:	
  1302                           ;PWMmain.c: 110: INTE = 1;
  1303  0162  160B               	bsf	(92/8),(92)&7
  1304                           	line	111
  1305                           	
  1306  0163                     l5954:	
  1307                           ;PWMmain.c: 111: i2cBuffer[1] = 0;
  1308  0163  1283               	bcf	status, 5	;RP0=0, select bank0
  1309  0164  1303               	bcf	status, 6	;RP1=0, select bank0
  1310  0165  01A2               	clrf	0+(_i2cBuffer)+02h
  1311  0166  01A3               	clrf	1+(_i2cBuffer)+02h
  1312                           	line	112
  1313                           	
  1314  0167                     l1525:	
  1315  0167  0008               	return
  1316                           	opt stack 0
  1317                           GLOBAL	__end_of_i2c_init
  1318  0168                     	__end_of_i2c_init:
  1319 ;; =============== function _i2c_init ends ============
  1320                           
  1321                           	signat	_i2c_init,88
  1322                           	global	_BeginPWM
  1323                           psect	text334,local,class=CODE,delta=2
  1324                           global __ptext334
  1325  0168                     __ptext334:
  1326                           
  1327 ;; *************** function _BeginPWM *****************
  1328 ;; Defined at:
  1329 ;;		line 41 in file "pwmlib.c"
  1330 ;; Parameters:    Size  Location     Type
  1331 ;;		None
  1332 ;; Auto vars:     Size  Location     Type
  1333 ;;		None
  1334 ;; Return value:  Size  Location     Type
  1335 ;;		None               void
  1336 ;; Registers used:
  1337 ;;		wreg, status,2
  1338 ;; Tracked objects:
  1339 ;;		On entry : 0/0
  1340 ;;		On exit  : 0/0
  1341 ;;		Unchanged: 0/0
  1342 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1343 ;;      Params:         0       0       0       0       0
  1344 ;;      Locals:         0       0       0       0       0
  1345 ;;      Temps:          0       0       0       0       0
  1346 ;;      Totals:         0       0       0       0       0
  1347 ;;Total ram usage:        0 bytes
  1348 ;; Hardware stack levels used:    1
  1349 ;; Hardware stack levels required when called:    1
  1350 ;; This function calls:
  1351 ;;		Nothing
  1352 ;; This function is called by:
  1353 ;;		_Initialise
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           psect	text334
  1357                           	file	"pwmlib.c"
  1358                           	line	41
  1359                           	global	__size_of_BeginPWM
  1360  001E                     	__size_of_BeginPWM	equ	__end_of_BeginPWM-_BeginPWM
  1361                           	
  1362  0168                     _BeginPWM:	
  1363                           	opt	stack 5
  1364                           ; Regs used in _BeginPWM: [wreg+status,2]
  1365                           	line	44
  1366                           	
  1367  0168                     l5926:	
  1368                           ;pwmlib.c: 44: TRISCbits.TRISC5 = 1;
  1369  0168  1683               	bsf	status, 5	;RP0=1, select bank1
  1370  0169  1303               	bcf	status, 6	;RP1=0, select bank1
  1371  016A  1687               	bsf	(135)^080h,5	;volatile
  1372                           	line	47
  1373                           ;pwmlib.c: 47: PIE1bits.TMR2IE = 0;
  1374  016B  108C               	bcf	(140)^080h,1	;volatile
  1375                           	line	51
  1376                           	
  1377  016C                     l5928:	
  1378                           ;pwmlib.c: 51: PR2 = 0xFF;
  1379  016C  30FF               	movlw	(0FFh)
  1380  016D  0092               	movwf	(146)^080h	;volatile
  1381                           	line	55
  1382                           ;pwmlib.c: 55: CCP1CON = 0b00001100;
  1383  016E  300C               	movlw	(0Ch)
  1384  016F  1283               	bcf	status, 5	;RP0=0, select bank0
  1385  0170  1303               	bcf	status, 6	;RP1=0, select bank0
  1386  0171  0097               	movwf	(23)	;volatile
  1387                           	line	59
  1388                           	
  1389  0172                     l5930:	
  1390                           ;pwmlib.c: 59: CCPR1L = 0;
  1391  0172  0195               	clrf	(21)	;volatile
  1392                           	line	60
  1393                           	
  1394  0173                     l5932:	
  1395                           ;pwmlib.c: 60: CCP1CONbits.CCP1X = 0;
  1396  0173  1297               	bcf	(23),5	;volatile
  1397                           	line	61
  1398                           	
  1399  0174                     l5934:	
  1400                           ;pwmlib.c: 61: CCP1CONbits.CCP1Y = 0;
  1401  0174  1217               	bcf	(23),4	;volatile
  1402                           	line	66
  1403                           	
  1404  0175                     l5936:	
  1405                           ;pwmlib.c: 66: PIR1bits.TMR2IF = 0;
  1406  0175  108C               	bcf	(12),1	;volatile
  1407                           	line	70
  1408                           	
  1409  0176                     l5938:	
  1410                           ;pwmlib.c: 70: T2CON = 0b00000100;
  1411  0176  3004               	movlw	(04h)
  1412  0177  0092               	movwf	(18)	;volatile
  1413  0178  2979               	goto	l5940
  1414                           	line	75
  1415                           ;pwmlib.c: 75: while(1)
  1416                           	
  1417  0179                     l3022:	
  1418                           	line	77
  1419                           	
  1420  0179                     l5940:	
  1421                           ;pwmlib.c: 76: {
  1422                           ;pwmlib.c: 77: if(PIR1bits.TMR2IF == 1)
  1423  0179  1283               	bcf	status, 5	;RP0=0, select bank0
  1424  017A  1C8C               	btfss	(12),1	;volatile
  1425  017B  297D               	goto	u2461
  1426  017C  297E               	goto	u2460
  1427  017D                     u2461:
  1428  017D  2979               	goto	l5940
  1429  017E                     u2460:
  1430                           	line	79
  1431                           	
  1432  017E                     l5942:	
  1433                           ;pwmlib.c: 78: {
  1434                           ;pwmlib.c: 79: TMR2IF = 0;
  1435  017E  108C               	bcf	(97/8),(97)&7
  1436                           	line	80
  1437                           ;pwmlib.c: 80: TRISCbits.TRISC5 = 0;
  1438  017F  1683               	bsf	status, 5	;RP0=1, select bank1
  1439  0180  1303               	bcf	status, 6	;RP1=0, select bank1
  1440  0181  1287               	bcf	(135)^080h,5	;volatile
  1441                           	line	81
  1442                           ;pwmlib.c: 81: break;
  1443  0182  2985               	goto	l3026
  1444                           	line	82
  1445                           	
  1446  0183                     l3023:	
  1447  0183  2979               	goto	l5940
  1448                           	line	83
  1449                           	
  1450  0184                     l3025:	
  1451                           	line	75
  1452  0184  2979               	goto	l5940
  1453                           	
  1454  0185                     l3024:	
  1455                           	line	84
  1456                           	
  1457  0185                     l3026:	
  1458  0185  0008               	return
  1459                           	opt stack 0
  1460                           GLOBAL	__end_of_BeginPWM
  1461  0186                     	__end_of_BeginPWM:
  1462 ;; =============== function _BeginPWM ends ============
  1463                           
  1464                           	signat	_BeginPWM,88
  1465                           	global	_isr
  1466                           psect	text335,local,class=CODE,delta=2
  1467                           global __ptext335
  1468  008B                     __ptext335:
  1469                           
  1470 ;; *************** function _isr *****************
  1471 ;; Defined at:
  1472 ;;		line 118 in file "PWMmain.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;		None               void
  1479 ;; Registers used:
  1480 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1486 ;;      Params:         0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0
  1488 ;;      Temps:          7       0       0       0       0
  1489 ;;      Totals:         7       0       0       0       0
  1490 ;;Total ram usage:        7 bytes
  1491 ;; Hardware stack levels used:    1
  1492 ;; This function calls:
  1493 ;;		Nothing
  1494 ;; This function is called by:
  1495 ;;		Interrupt level 1
  1496 ;; This function uses a non-reentrant model
  1497 ;;
  1498                           psect	text335
  1499                           	file	"PWMmain.c"
  1500                           	line	118
  1501                           	global	__size_of_isr
  1502  003C                     	__size_of_isr	equ	__end_of_isr-_isr
  1503                           	
  1504  008B                     _isr:	
  1505                           	opt	stack 5
  1506                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1507                           psect	intentry,class=CODE,delta=2
  1508                           global __pintentry
  1509  0004                     __pintentry:
  1510                           global interrupt_function
  1511  0004                     interrupt_function:
  1512                           	global saved_w
  1513  007E                     	saved_w	set	btemp+0
  1514  0004  00FE               	movwf	saved_w
  1515  0005  0E03               	swapf	status,w
  1516  0006  00F3               	movwf	(??_isr+3)
  1517  0007  0804               	movf	fsr0,w
  1518  0008  00F4               	movwf	(??_isr+4)
  1519  0009  080A               	movf	pclath,w
  1520  000A  00F5               	movwf	(??_isr+5)
  1521  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1522  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1523  000D  087F               	movf	btemp+1,w
  1524  000E  00F6               	movwf	(??_isr+6)
  1525  000F  120A  118A  288B   	ljmp	_isr
  1526                           psect	text335
  1527                           	line	143
  1528                           	
  1529  008B                     i1l5844:	
  1530                           ;PWMmain.c: 143: if (val == 2)
  1531  008B  3002               	movlw	02h
  1532  008C  0677               	xorwf	(_val),w
  1533  008D  0478               	iorwf	(_val+1),w
  1534  008E  1D03               	skipz
  1535  008F  2891               	goto	u230_21
  1536  0090  2892               	goto	u230_20
  1537  0091                     u230_21:
  1538  0091  2895               	goto	i1l5848
  1539  0092                     u230_20:
  1540                           	line	144
  1541                           	
  1542  0092                     i1l5846:	
  1543                           ;PWMmain.c: 144: val = 0;
  1544  0092  01F7               	clrf	(_val)
  1545  0093  01F8               	clrf	(_val+1)
  1546  0094  2895               	goto	i1l5848
  1547                           	
  1548  0095                     i1l1528:	
  1549                           	line	146
  1550                           	
  1551  0095                     i1l5848:	
  1552                           ;PWMmain.c: 146: if ((SSPSTAT & 0b00100000) == 0b00100000){
  1553  0095  1683               	bsf	status, 5	;RP0=1, select bank1
  1554  0096  1303               	bcf	status, 6	;RP1=0, select bank1
  1555  0097  1E94               	btfss	(148)^080h,(5)&7
  1556  0098  289A               	goto	u231_21
  1557  0099  289B               	goto	u231_20
  1558  009A                     u231_21:
  1559  009A  28B8               	goto	i1l5856
  1560  009B                     u231_20:
  1561                           	line	150
  1562                           	
  1563  009B                     i1l5850:	
  1564                           ;PWMmain.c: 150: i2cBuffer[val] = SSPBUF;
  1565  009B  1283               	bcf	status, 5	;RP0=0, select bank0
  1566  009C  1303               	bcf	status, 6	;RP1=0, select bank0
  1567  009D  0813               	movf	(19),w	;volatile
  1568  009E  00F0               	movwf	(??_isr+0)+0
  1569  009F  01F1               	clrf	(??_isr+0)+0+1
  1570  00A0  0877               	movf	(_val),w
  1571  00A1  00F2               	movwf	(??_isr+2)+0
  1572  00A2  0772               	addwf	(??_isr+2)+0,w
  1573  00A3  3E20               	addlw	_i2cBuffer&0ffh
  1574  00A4  0084               	movwf	fsr0
  1575  00A5  0870               	movf	0+(??_isr+0)+0,w
  1576  00A6  1383               	bcf	status, 7	;select IRP bank0
  1577  00A7  0080               	movwf	indf
  1578  00A8  0A84               	incf	fsr0,f
  1579  00A9  0871               	movf	1+(??_isr+0)+0,w
  1580  00AA  0080               	movwf	indf
  1581                           	line	151
  1582                           	
  1583  00AB                     i1l5852:	
  1584                           ;PWMmain.c: 151: val++;
  1585  00AB  3001               	movlw	low(01h)
  1586  00AC  07F7               	addwf	(_val),f
  1587  00AD  1803               	skipnc
  1588  00AE  0AF8               	incf	(_val+1),f
  1589  00AF  3000               	movlw	high(01h)
  1590  00B0  07F8               	addwf	(_val+1),f
  1591                           	line	152
  1592                           	
  1593  00B1                     i1l5854:	
  1594                           ;PWMmain.c: 152: setSpeed = i2cBuffer[1];
  1595  00B1  0823               	movf	1+(_i2cBuffer)+02h,w
  1596  00B2  01B5               	clrf	(_setSpeed+1)
  1597  00B3  07B5               	addwf	(_setSpeed+1)
  1598  00B4  0822               	movf	0+(_i2cBuffer)+02h,w
  1599  00B5  01B4               	clrf	(_setSpeed)
  1600  00B6  07B4               	addwf	(_setSpeed)
  1601                           
  1602                           	line	153
  1603                           ;PWMmain.c: 153: }
  1604  00B7  28BB               	goto	i1l5858
  1605                           	line	154
  1606                           	
  1607  00B8                     i1l1529:	
  1608                           	line	155
  1609                           	
  1610  00B8                     i1l5856:	
  1611                           ;PWMmain.c: 154: else{
  1612                           ;PWMmain.c: 155: SSPBUF = 0;
  1613  00B8  1283               	bcf	status, 5	;RP0=0, select bank0
  1614  00B9  0193               	clrf	(19)	;volatile
  1615  00BA  28BB               	goto	i1l5858
  1616                           	line	156
  1617                           	
  1618  00BB                     i1l1530:	
  1619                           	line	159
  1620                           	
  1621  00BB                     i1l5858:	
  1622                           ;PWMmain.c: 156: }
  1623                           ;PWMmain.c: 159: SSPIF = 0;
  1624  00BB  118C               	bcf	(99/8),(99)&7
  1625                           	line	162
  1626                           	
  1627  00BC                     i1l1531:	
  1628  00BC  0876               	movf	(??_isr+6),w
  1629  00BD  00FF               	movwf	btemp+1
  1630  00BE  0875               	movf	(??_isr+5),w
  1631  00BF  008A               	movwf	pclath
  1632  00C0  0874               	movf	(??_isr+4),w
  1633  00C1  0084               	movwf	fsr0
  1634  00C2  0E73               	swapf	(??_isr+3)^0FFFFFF80h,w
  1635  00C3  0083               	movwf	status
  1636  00C4  0EFE               	swapf	saved_w,f
  1637  00C5  0E7E               	swapf	saved_w,w
  1638  00C6  0009               	retfie
  1639                           	opt stack 0
  1640                           GLOBAL	__end_of_isr
  1641  00C7                     	__end_of_isr:
  1642 ;; =============== function _isr ends ============
  1643                           
  1644                           	signat	_isr,88
  1645                           psect	text336,local,class=CODE,delta=2
  1646                           global __ptext336
  1647  0000                     __ptext336:
  1648                           	global	btemp
  1649  007E                     	btemp set 07Eh
  1650                           
  1651                           	DABS	1,126,2	;btemp
  1652                           	global	wtemp0
  1653  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Dec 12 22:00:34 2012

                  _RD 0C60                    _WR 0C61          ___awdiv@sign 0042                    fsr 0004  
 ___wmul@multiplicand 0038                   _CKE 04A6                   _CKP 00A4                   _GIE 005F  
                 _PR2 0092                   _SMP 04A7                   _isr 008B                   _val 0077  
                 fsr0 0004                   indf 0000                  l3022 0179                  l1510 019B  
                l3023 0183                  l3024 0185                  l3025 0184                  l3033 0144  
                l3026 0185                  l3034 0148                  l1522 00FC                  l1507 018C  
                l1508 019A                  l1525 0167                  l1509 019B                  l1519 01B7  
                l4620 0051                  l4621 006A                  l4622 0078                  l4614 0025  
                l4623 0083                  l4615 0033                  l4624 008A                  l4616 0079  
                l4617 004B                  l4474 0102                  l4618 003F                  l4475 010C  
                l4619 0050                  l4476 0121                  l4477 0128                  l5900 006A  
                l5910 008A                  l5902 0071                  l5904 0079                  l5930 0172  
                l5906 007D                  l5940 0179                  l5932 0173                  l5908 0083  
                ?_isr 0070                  l5942 017E                  l5934 0174                  l5926 0168  
                l5950 0161                  l5936 0175                  l5928 016C                  l5952 0162  
                l5944 0149                  l5960 013E                  l5880 002E                  l5872 0015  
                l5938 0176                  l5954 0163                  l5946 015E                  l5970 0121  
                l5962 00FD                  l5890 0046                  l5882 0033                  l5874 001C  
                l5948 0160                  l5956 0129                  l5972 0128                  l5964 0102  
                l5892 004B                  l5884 0035                  l5876 0025                  l5980 0186  
                l5958 0131                  l5966 0106                  l5894 0051                  l5886 003B  
                l5878 0029                  l5974 01AD                  l5982 018C                  l5968 0113  
                l5896 0062                  l5888 003F                  l5976 00C7                  l5898 0068  
                l5978 00F1                  u2400 004F                  u2401 004E                  u2420 0062  
                u2421 0061                  u2510 0120                  u2511 011F                  u2415 0052  
                u2440 0077                  u2360 001C                  u2505 0114                  u2441 0076  
                u2425 005E                  u2361 001B                  u2450 007D                  u2370 0029  
                u2435 006B                  u2371 0028                  u2460 017E                  u2380 003B  
                u2461 017D                  u2381 003A                  u2470 013E                  u2471 013D  
                u2480 0106                  u2481 0105                  u2475 013A                  u2395 0040  
                u2495 010D                  _PEIE 005E                  _INTE 005C                  _WREN 0C62  
                _main 0186                  btemp 007E                  start 0012                 ??_isr 0070  
               ?_main 0070       __end_of___awdiv 008B                 _EEADR 010D                 _CARRY 0018  
     ___awdiv@divisor 003C                 _T2CON 0012       ___awdiv@counter 0041                 _SSPM0 00A0  
               _SSPM1 00A1                 _SSPM2 00A2                 _SSPM3 00A3                 _SSPIE 0463  
               _SSPIF 0063                 _SSPEN 00A5                 pclath 000A      __end_of_BeginPWM 0186  
               status 0003                 wtemp0 007E    __size_of_CalcPulse 0036          __end_of_main 019E  
    __end_of_i2c_init 0168            _Initialise 01AD                ??_main 0049      __end_of_SetPulse 0149  
              _EEDATA 010C                _CCPR1L 0015                _EECON1 018C                _EECON2 018D  
    ___awdiv@dividend 003E                i1l1530 00BB                i1l1531 00BC                i1l1528 0095  
              i1l1529 00B8                u230_20 0092                u230_21 0091                i1l5850 009B  
              i1l5852 00AB                i1l5844 008B                i1l5854 00B1                i1l5846 0092  
              i1l5856 00B8                u231_20 009B                i1l5848 0095                u231_21 009A  
              i1l5858 00BB                _TMR2IF 0061                _SSPADD 0093                _TRISC6 043E  
              _TRISC7 043F                _SSPBUF 0013        CalcPulse@speed 0045        CalcPulse@pulse 0047  
              ___wmul 00FD             ??___awdiv 0040      ___awdiv@quotient 0043                clrloop 01B9  
              saved_w 007E     __end_of_CalcPulse 00FD        __pcstackCOMMON 0070           ?_Initialise 0070  
           ?_BeginPWM 0070            __pbssBANK0 0020             ?_i2c_init 0070             ?_SetPulse 0036  
          __pmaintext 0186               ?___wmul 0036            __pintentry 0004               _CCP1CON 0017  
          ??_BeginPWM 0036               _SSPSTAT 0094            ??_i2c_init 0036   __size_of_Initialise 000B  
          ??_SetPulse 0038               ___awdiv 0015       __size_of___wmul 002C             _T2CONbits 0012  
        __size_of_isr 003C  end_of_initialization 01A9        SetPulse@length 0036             _TRISCbits 0087  
           _CalcPulse 00C7           _CCP1CONbits 0017          ??_Initialise 0036        __end_of___wmul 0129  
           _i2cBuffer 0020   start_initialization 019E     __size_of_BeginPWM 001E           __end_of_isr 00C7  
          ?_CalcPulse 0045    __end_of_Initialise 01B8     __size_of_i2c_init 001F              ??___wmul 003A  
   __size_of_SetPulse 0020          SetPulse@temp 0038           __pbssCOMMON 0077         __pcstackBANK0 0036  
            ?___awdiv 003C             __ptext330 0015             __ptext331 00FD             __ptext332 0129  
           __ptext333 0149             __ptext334 0168             __ptext335 008B             __ptext327 0000  
           __ptext336 0000             __ptext328 00C7             __ptext329 01AD           ??_CalcPulse 0047  
   interrupt_function 0004        ___wmul@product 003A              _PIE1bits 008C              _PIR1bits 000C  
   ___wmul@multiplier 0036              _BeginPWM 0168              _i2c_init 0149              _SetPulse 0129  
    __size_of___awdiv 0076         __size_of_main 0018              clear_ram 01B8              _setSpeed 0034  
            intlevel1 0000  
