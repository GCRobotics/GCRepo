

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Wed Jan 09 10:38:38 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 18 "PWMmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 18 "PWMmain.c"
    45  2007  F4F4               	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFFFF & 0xF7FF ;#
    46                           	FNCALL	_main,_Initialise
    47                           	FNCALL	_main,_setDirection
    48                           	FNCALL	_main,_SetPulse
    49                           	FNCALL	_Initialise,_BeginPWM
    50                           	FNCALL	_Initialise,_directionInit
    51                           	FNROOT	_main
    52                           	FNCALL	_isr,_i2cIsrHandler
    53                           	FNCALL	_i2cIsrHandler,_i2cSend
    54                           	FNCALL	_i2cIsrHandler,_i2cDataUpdate
    55                           	FNCALL	intlevel1,_isr
    56                           	global	intlevel1
    57                           	FNROOT	intlevel1
    58                           	global	_setSpeed
    59                           	global	_i2cDirection
    60                           	global	_i2cSpeed
    61                           	global	_i2cBuffer
    62                           	global	_val
    63                           	global	_i2cRequest
    64                           	global	_CCP1CON
    65                           psect	text393,local,class=CODE,delta=2
    66                           global __ptext393
    67  0000                     __ptext393:
    68  0017                     _CCP1CON	set	23
    69                           	global	_CCP1CONbits
    70  0017                     _CCP1CONbits	set	23
    71                           	global	_CCPR1L
    72  0015                     _CCPR1L	set	21
    73                           	global	_PIR1bits
    74  000C                     _PIR1bits	set	12
    75                           	global	_PORTBbits
    76  0006                     _PORTBbits	set	6
    77                           	global	_PORTD
    78  0008                     _PORTD	set	8
    79                           	global	_SSPBUF
    80  0013                     _SSPBUF	set	19
    81                           	global	_T2CON
    82  0012                     _T2CON	set	18
    83                           	global	_T2CONbits
    84  0012                     _T2CONbits	set	18
    85                           	global	_CARRY
    86  0018                     _CARRY	set	24
    87                           	global	_CKP
    88  00A4                     _CKP	set	164
    89                           	global	_GIE
    90  005F                     _GIE	set	95
    91                           	global	_INTE
    92  005C                     _INTE	set	92
    93                           	global	_PEIE
    94  005E                     _PEIE	set	94
    95                           	global	_SSPEN
    96  00A5                     _SSPEN	set	165
    97                           	global	_SSPIF
    98  0063                     _SSPIF	set	99
    99                           	global	_SSPM0
   100  00A0                     _SSPM0	set	160
   101                           	global	_SSPM1
   102  00A1                     _SSPM1	set	161
   103                           	global	_SSPM2
   104  00A2                     _SSPM2	set	162
   105                           	global	_SSPM3
   106  00A3                     _SSPM3	set	163
   107                           	global	_TMR2IF
   108  0061                     _TMR2IF	set	97
   109                           	global	_PIE1bits
   110  008C                     _PIE1bits	set	140
   111                           	global	_PR2
   112  0092                     _PR2	set	146
   113                           	global	_SSPADD
   114  0093                     _SSPADD	set	147
   115                           	global	_SSPSTAT
   116  0094                     _SSPSTAT	set	148
   117                           	global	_TRISCbits
   118  0087                     _TRISCbits	set	135
   119                           	global	_TRISD
   120  0088                     _TRISD	set	136
   121                           	global	_CKE
   122  04A6                     _CKE	set	1190
   123                           	global	_SMP
   124  04A7                     _SMP	set	1191
   125                           	global	_SSPIE
   126  0463                     _SSPIE	set	1123
   127                           	global	_TRISB3
   128  0433                     _TRISB3	set	1075
   129                           	global	_TRISC6
   130  043E                     _TRISC6	set	1086
   131                           	global	_TRISC7
   132  043F                     _TRISC7	set	1087
   133                           	global	_EEADR
   134  010D                     _EEADR	set	269
   135                           	global	_EEDATA
   136  010C                     _EEDATA	set	268
   137                           	global	_EECON1
   138  018C                     _EECON1	set	396
   139                           	global	_EECON2
   140  018D                     _EECON2	set	397
   141                           	global	_RD
   142  0C60                     _RD	set	3168
   143                           	global	_WR
   144  0C61                     _WR	set	3169
   145                           	global	_WREN
   146  0C62                     _WREN	set	3170
   147                           	file	"C:\Users\Josh\AppData\Local\Temp\s54k."
   148                           	line	#
   149                           psect cinit,class=CODE,delta=2
   150                           global start_initialization
   151  0142                     start_initialization:
   152                           
   153                           psect	bssCOMMON,class=COMMON,space=1
   154                           global __pbssCOMMON
   155  0077                     __pbssCOMMON:
   156  0077                     _i2cBuffer:
   157  0077                            ds      2
   158                           
   159  0079                     _val:
   160  0079                            ds      2
   161                           
   162  007B                     _i2cRequest:
   163  007B                            ds      1
   164                           
   165                           psect	bssBANK0,class=BANK0,space=1
   166                           global __pbssBANK0
   167  0026                     __pbssBANK0:
   168  0026                     _setSpeed:
   169  0026                            ds      2
   170                           
   171  0028                     _i2cDirection:
   172  0028                            ds      1
   173                           
   174  0029                     _i2cSpeed:
   175  0029                            ds      1
   176                           
   177                           ; Clear objects allocated to COMMON
   178                           psect cinit,class=CODE,delta=2
   179  0142  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
   180  0143  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
   181  0144  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
   182  0145  01FA               	clrf	((__pbssCOMMON)+3)&07Fh
   183  0146  01FB               	clrf	((__pbssCOMMON)+4)&07Fh
   184                           ; Clear objects allocated to BANK0
   185                           psect cinit,class=CODE,delta=2
   186  0147  01A6               	clrf	((__pbssBANK0)+0)&07Fh
   187  0148  01A7               	clrf	((__pbssBANK0)+1)&07Fh
   188  0149  01A8               	clrf	((__pbssBANK0)+2)&07Fh
   189  014A  01A9               	clrf	((__pbssBANK0)+3)&07Fh
   190                           psect cinit,class=CODE,delta=2
   191                           global end_of_initialization
   192                           
   193                           ;End of C runtime variable initialization code
   194                           
   195  014B                     end_of_initialization:
   196  014B  0183               clrf status
   197  014C  120A  118A  2884   ljmp _main	;jump to C main() function
   198                           psect	cstackCOMMON,class=COMMON,space=1
   199                           global __pcstackCOMMON
   200  0070                     __pcstackCOMMON:
   201                           	global	?_Initialise
   202  0070                     ?_Initialise:	; 0 bytes @ 0x0
   203                           	global	?_BeginPWM
   204  0070                     ?_BeginPWM:	; 0 bytes @ 0x0
   205                           	global	?_directionInit
   206  0070                     ?_directionInit:	; 0 bytes @ 0x0
   207                           	global	?_i2cIsrHandler
   208  0070                     ?_i2cIsrHandler:	; 0 bytes @ 0x0
   209                           	global	?_i2cSend
   210  0070                     ?_i2cSend:	; 0 bytes @ 0x0
   211                           	global	??_i2cSend
   212  0070                     ??_i2cSend:	; 0 bytes @ 0x0
   213                           	global	?_i2cDataUpdate
   214  0070                     ?_i2cDataUpdate:	; 0 bytes @ 0x0
   215                           	global	??_i2cDataUpdate
   216  0070                     ??_i2cDataUpdate:	; 0 bytes @ 0x0
   217                           	global	?_main
   218  0070                     ?_main:	; 0 bytes @ 0x0
   219                           	global	?_isr
   220  0070                     ?_isr:	; 0 bytes @ 0x0
   221  0070                     	ds	2
   222                           	global	??_i2cIsrHandler
   223  0072                     ??_i2cIsrHandler:	; 0 bytes @ 0x2
   224  0072                     	ds	1
   225                           	global	??_isr
   226  0073                     ??_isr:	; 0 bytes @ 0x3
   227  0073                     	ds	4
   228                           psect	cstackBANK0,class=BANK0,space=1
   229                           global __pcstackBANK0
   230  0020                     __pcstackBANK0:
   231                           	global	??_Initialise
   232  0020                     ??_Initialise:	; 0 bytes @ 0x0
   233                           	global	?_setDirection
   234  0020                     ?_setDirection:	; 0 bytes @ 0x0
   235                           	global	?_SetPulse
   236  0020                     ?_SetPulse:	; 0 bytes @ 0x0
   237                           	global	??_BeginPWM
   238  0020                     ??_BeginPWM:	; 0 bytes @ 0x0
   239                           	global	??_directionInit
   240  0020                     ??_directionInit:	; 0 bytes @ 0x0
   241                           	global	setDirection@dir
   242  0020                     setDirection@dir:	; 2 bytes @ 0x0
   243                           	global	SetPulse@length
   244  0020                     SetPulse@length:	; 2 bytes @ 0x0
   245  0020                     	ds	2
   246                           	global	??_setDirection
   247  0022                     ??_setDirection:	; 0 bytes @ 0x2
   248                           	global	??_SetPulse
   249  0022                     ??_SetPulse:	; 0 bytes @ 0x2
   250                           	global	SetPulse@temp
   251  0022                     SetPulse@temp:	; 2 bytes @ 0x2
   252  0022                     	ds	2
   253                           	global	??_main
   254  0024                     ??_main:	; 0 bytes @ 0x4
   255  0024                     	ds	2
   256 ;;Data sizes: Strings 0, constant 0, data 0, bss 9, persistent 0 stack 0
   257 ;;Auto spaces:   Size  Autos    Used
   258 ;; COMMON          14      7      12
   259 ;; BANK0           80      6      10
   260 ;; BANK1           80      0       0
   261 ;; BANK3           96      0       0
   262 ;; BANK2           80      0       0
   263                           
   264 ;;
   265 ;; Pointer list with targets:
   266                           
   267                           
   268                           
   269 ;;
   270 ;; Critical Paths under _main in COMMON
   271 ;;
   272 ;;   None.
   273 ;;
   274 ;; Critical Paths under _isr in COMMON
   275 ;;
   276 ;;   _isr->_i2cIsrHandler
   277 ;;   _i2cIsrHandler->_i2cDataUpdate
   278 ;;
   279 ;; Critical Paths under _main in BANK0
   280 ;;
   281 ;;   _main->_SetPulse
   282 ;;
   283 ;; Critical Paths under _isr in BANK0
   284 ;;
   285 ;;   None.
   286 ;;
   287 ;; Critical Paths under _main in BANK1
   288 ;;
   289 ;;   None.
   290 ;;
   291 ;; Critical Paths under _isr in BANK1
   292 ;;
   293 ;;   None.
   294 ;;
   295 ;; Critical Paths under _main in BANK3
   296 ;;
   297 ;;   None.
   298 ;;
   299 ;; Critical Paths under _isr in BANK3
   300 ;;
   301 ;;   None.
   302 ;;
   303 ;; Critical Paths under _main in BANK2
   304 ;;
   305 ;;   None.
   306 ;;
   307 ;; Critical Paths under _isr in BANK2
   308 ;;
   309 ;;   None.
   310                           
   311 ;;
   312 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   313 ;;
   314                           
   315 ;;
   316 ;;Call Graph Tables:
   317 ;;
   318 ;; ---------------------------------------------------------------------------------
   319 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   320 ;; ---------------------------------------------------------------------------------
   321 ;; (0) _main                                                 4     4      0     161
   322 ;;                                              4 BANK0      2     2      0
   323 ;;                         _Initialise
   324 ;;                       _setDirection
   325 ;;                           _SetPulse
   326 ;; ---------------------------------------------------------------------------------
   327 ;; (1) _Initialise                                           0     0      0       0
   328 ;;                           _BeginPWM
   329 ;;                      _directionInit
   330 ;; ---------------------------------------------------------------------------------
   331 ;; (2) _directionInit                                        0     0      0       0
   332 ;; ---------------------------------------------------------------------------------
   333 ;; (2) _BeginPWM                                             0     0      0       0
   334 ;; ---------------------------------------------------------------------------------
   335 ;; (1) _SetPulse                                             4     2      2      99
   336 ;;                                              0 BANK0      4     2      2
   337 ;; ---------------------------------------------------------------------------------
   338 ;; (1) _setDirection                                         2     0      2      62
   339 ;;                                              0 BANK0      2     0      2
   340 ;; ---------------------------------------------------------------------------------
   341 ;; Estimated maximum stack depth 2
   342 ;; ---------------------------------------------------------------------------------
   343 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   344 ;; ---------------------------------------------------------------------------------
   345 ;; (3) _isr                                                  4     4      0       0
   346 ;;                                              3 COMMON     4     4      0
   347 ;;                      _i2cIsrHandler
   348 ;; ---------------------------------------------------------------------------------
   349 ;; (4) _i2cIsrHandler                                        1     1      0       0
   350 ;;                                              2 COMMON     1     1      0
   351 ;;                            _i2cSend
   352 ;;                      _i2cDataUpdate
   353 ;; ---------------------------------------------------------------------------------
   354 ;; (5) _i2cDataUpdate                                        2     2      0       0
   355 ;;                                              0 COMMON     2     2      0
   356 ;; ---------------------------------------------------------------------------------
   357 ;; (5) _i2cSend                                              0     0      0       0
   358 ;; ---------------------------------------------------------------------------------
   359 ;; Estimated maximum stack depth 5
   360 ;; ---------------------------------------------------------------------------------
   361                           
   362 ;; Call Graph Graphs:
   363                           
   364 ;; _main (ROOT)
   365 ;;   _Initialise
   366 ;;     _BeginPWM
   367 ;;     _directionInit
   368 ;;   _setDirection
   369 ;;   _SetPulse
   370 ;;
   371 ;; _isr (ROOT)
   372 ;;   _i2cIsrHandler
   373 ;;     _i2cSend
   374 ;;     _i2cDataUpdate
   375 ;;
   376                           
   377 ;; Address spaces:
   378                           
   379 ;;Name               Size   Autos  Total    Cost      Usage
   380 ;;BITCOMMON            E      0       0       0        0.0%
   381 ;;EEDATA             100      0       0       0        0.0%
   382 ;;NULL                 0      0       0       0        0.0%
   383 ;;CODE                 0      0       0       0        0.0%
   384 ;;COMMON               E      7       C       1       85.7%
   385 ;;BITSFR0              0      0       0       1        0.0%
   386 ;;SFR0                 0      0       0       1        0.0%
   387 ;;BITSFR1              0      0       0       2        0.0%
   388 ;;SFR1                 0      0       0       2        0.0%
   389 ;;STACK                0      0       8       2        0.0%
   390 ;;BITBANK0            50      0       0       3        0.0%
   391 ;;BANK0               50      6       A       4       12.5%
   392 ;;BITSFR3              0      0       0       4        0.0%
   393 ;;SFR3                 0      0       0       4        0.0%
   394 ;;BITBANK1            50      0       0       5        0.0%
   395 ;;BITSFR2              0      0       0       5        0.0%
   396 ;;SFR2                 0      0       0       5        0.0%
   397 ;;BANK1               50      0       0       6        0.0%
   398 ;;BITBANK3            60      0       0       7        0.0%
   399 ;;BANK3               60      0       0       8        0.0%
   400 ;;BANK2               50      0       0       9        0.0%
   401 ;;ABS                  0      0      16      10        0.0%
   402 ;;BITBANK2            50      0       0      11        0.0%
   403 ;;DATA                 0      0      1E      12        0.0%
   404                           
   405                           	global	_main
   406                           psect	maintext,global,class=CODE,delta=2
   407                           global __pmaintext
   408  0084                     __pmaintext:
   409                           
   410 ;; *************** function _main *****************
   411 ;; Defined at:
   412 ;;		line 38 in file "PWMmain.c"
   413 ;; Parameters:    Size  Location     Type
   414 ;;		None
   415 ;; Auto vars:     Size  Location     Type
   416 ;;  direction       2    0        int 
   417 ;; Return value:  Size  Location     Type
   418 ;;		None               void
   419 ;; Registers used:
   420 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   421 ;; Tracked objects:
   422 ;;		On entry : 17F/0
   423 ;;		On exit  : 0/0
   424 ;;		Unchanged: 0/0
   425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   426 ;;      Params:         0       0       0       0       0
   427 ;;      Locals:         0       0       0       0       0
   428 ;;      Temps:          0       2       0       0       0
   429 ;;      Totals:         0       2       0       0       0
   430 ;;Total ram usage:        2 bytes
   431 ;; Hardware stack levels required when called:    5
   432 ;; This function calls:
   433 ;;		_Initialise
   434 ;;		_setDirection
   435 ;;		_SetPulse
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           psect	maintext
   441                           	file	"PWMmain.c"
   442                           	line	38
   443                           	global	__size_of_main
   444  002A                     	__size_of_main	equ	__end_of_main-_main
   445                           	
   446  0084                     _main:	
   447                           	opt	stack 3
   448                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   449                           	line	41
   450                           	
   451  0084                     l7561:	
   452                           ;PWMmain.c: 40: int direction;
   453                           ;PWMmain.c: 41: Initialise();
   454  0084  120A  118A  2131   	fcall	_Initialise
              120A  118A         
   455                           	line	62
   456                           ;PWMmain.c: 62: while (1)
   457                           	
   458  0089                     l1515:	
   459                           	line	64
   460                           ;PWMmain.c: 63: {
   461                           ;PWMmain.c: 64: setDirection(i2cDirection);
   462  0089  1283               	bcf	status, 5	;RP0=0, select bank0
   463  008A  1303               	bcf	status, 6	;RP1=0, select bank0
   464  008B  0828               	movf	(_i2cDirection),w
   465  008C  00A4               	movwf	(??_main+0)+0
   466  008D  01A5               	clrf	(??_main+0)+0+1
   467  008E  0824               	movf	0+(??_main+0)+0,w
   468  008F  00A0               	movwf	(?_setDirection)
   469  0090  0825               	movf	1+(??_main+0)+0,w
   470  0091  00A1               	movwf	(?_setDirection+1)
   471  0092  120A  118A  2108   	fcall	_setDirection
              120A  118A         
   472                           	line	65
   473                           	
   474  0097                     l7563:	
   475                           ;PWMmain.c: 65: SetPulse(i2cSpeed);
   476  0097  1283               	bcf	status, 5	;RP0=0, select bank0
   477  0098  1303               	bcf	status, 6	;RP1=0, select bank0
   478  0099  0829               	movf	(_i2cSpeed),w
   479  009A  00A4               	movwf	(??_main+0)+0
   480  009B  01A5               	clrf	(??_main+0)+0+1
   481  009C  0824               	movf	0+(??_main+0)+0,w
   482  009D  00A0               	movwf	(?_SetPulse)
   483  009E  0825               	movf	1+(??_main+0)+0,w
   484  009F  00A1               	movwf	(?_SetPulse+1)
   485  00A0  120A  118A  20AE   	fcall	_SetPulse
              120A  118A         
   486                           	line	66
   487                           	
   488  00A5                     l7565:	
   489                           ;PWMmain.c: 66: PORTD = setSpeed;
   490  00A5  1283               	bcf	status, 5	;RP0=0, select bank0
   491  00A6  1303               	bcf	status, 6	;RP1=0, select bank0
   492  00A7  0826               	movf	(_setSpeed),w
   493  00A8  0088               	movwf	(8)	;volatile
   494  00A9  2889               	goto	l1515
   495                           	line	67
   496                           	
   497  00AA                     l1516:	
   498                           	line	62
   499  00AA  2889               	goto	l1515
   500                           	
   501  00AB                     l1517:	
   502                           	line	70
   503                           	
   504  00AB                     l1518:	
   505                           	global	start
   506  00AB  120A  118A  2812   	ljmp	start
   507                           	opt stack 0
   508                           GLOBAL	__end_of_main
   509  00AE                     	__end_of_main:
   510 ;; =============== function _main ends ============
   511                           
   512                           	signat	_main,88
   513                           	global	_Initialise
   514                           psect	text394,local,class=CODE,delta=2
   515                           global __ptext394
   516  0131                     __ptext394:
   517                           
   518 ;; *************** function _Initialise *****************
   519 ;; Defined at:
   520 ;;		line 86 in file "PWMmain.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;		None
   523 ;; Auto vars:     Size  Location     Type
   524 ;;		None
   525 ;; Return value:  Size  Location     Type
   526 ;;		None               void
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0, pclath, cstack
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         0       0       0       0       0
   535 ;;      Locals:         0       0       0       0       0
   536 ;;      Temps:          0       0       0       0       0
   537 ;;      Totals:         0       0       0       0       0
   538 ;;Total ram usage:        0 bytes
   539 ;; Hardware stack levels used:    1
   540 ;; Hardware stack levels required when called:    4
   541 ;; This function calls:
   542 ;;		_BeginPWM
   543 ;;		_directionInit
   544 ;; This function is called by:
   545 ;;		_main
   546 ;; This function uses a non-reentrant model
   547 ;;
   548                           psect	text394
   549                           	file	"PWMmain.c"
   550                           	line	86
   551                           	global	__size_of_Initialise
   552  0011                     	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   553                           	
   554  0131                     _Initialise:	
   555                           	opt	stack 3
   556                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   557                           	line	87
   558                           	
   559  0131                     l7553:	
   560                           ;PWMmain.c: 87: BeginPWM();
   561  0131  120A  118A  20CE   	fcall	_BeginPWM
              120A  118A         
   562                           	line	89
   563                           	
   564  0136                     l7555:	
   565                           ;PWMmain.c: 89: directionInit();
   566  0136  120A  118A  214F   	fcall	_directionInit
              120A  118A         
   567                           	line	91
   568                           	
   569  013B                     l7557:	
   570                           ;PWMmain.c: 91: TRISD = 0;
   571  013B  1683               	bsf	status, 5	;RP0=1, select bank1
   572  013C  1303               	bcf	status, 6	;RP1=0, select bank1
   573  013D  0188               	clrf	(136)^080h	;volatile
   574                           	line	92
   575                           	
   576  013E                     l7559:	
   577                           ;PWMmain.c: 92: PORTD = 0;
   578  013E  1283               	bcf	status, 5	;RP0=0, select bank0
   579  013F  1303               	bcf	status, 6	;RP1=0, select bank0
   580  0140  0188               	clrf	(8)	;volatile
   581                           	line	93
   582                           	
   583  0141                     l1527:	
   584  0141  0008               	return
   585                           	opt stack 0
   586                           GLOBAL	__end_of_Initialise
   587  0142                     	__end_of_Initialise:
   588 ;; =============== function _Initialise ends ============
   589                           
   590                           	signat	_Initialise,88
   591                           	global	_directionInit
   592                           psect	text395,local,class=CODE,delta=2
   593                           global __ptext395
   594  014F                     __ptext395:
   595                           
   596 ;; *************** function _directionInit *****************
   597 ;; Defined at:
   598 ;;		line 123 in file "PWMmain.c"
   599 ;; Parameters:    Size  Location     Type
   600 ;;		None
   601 ;; Auto vars:     Size  Location     Type
   602 ;;		None
   603 ;; Return value:  Size  Location     Type
   604 ;;		None               void
   605 ;; Registers used:
   606 ;;		None
   607 ;; Tracked objects:
   608 ;;		On entry : 0/0
   609 ;;		On exit  : 0/0
   610 ;;		Unchanged: 0/0
   611 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   612 ;;      Params:         0       0       0       0       0
   613 ;;      Locals:         0       0       0       0       0
   614 ;;      Temps:          0       0       0       0       0
   615 ;;      Totals:         0       0       0       0       0
   616 ;;Total ram usage:        0 bytes
   617 ;; Hardware stack levels used:    1
   618 ;; Hardware stack levels required when called:    3
   619 ;; This function calls:
   620 ;;		Nothing
   621 ;; This function is called by:
   622 ;;		_Initialise
   623 ;; This function uses a non-reentrant model
   624 ;;
   625                           psect	text395
   626                           	file	"PWMmain.c"
   627                           	line	123
   628                           	global	__size_of_directionInit
   629  0007                     	__size_of_directionInit	equ	__end_of_directionInit-_directionInit
   630                           	
   631  014F                     _directionInit:	
   632                           	opt	stack 3
   633                           ; Regs used in _directionInit: []
   634                           	line	124
   635                           	
   636  014F                     l7547:	
   637                           ;PWMmain.c: 124: TRISB3 = 0;
   638  014F  1683               	bsf	status, 5	;RP0=1, select bank1
   639  0150  1303               	bcf	status, 6	;RP1=0, select bank1
   640  0151  1186               	bcf	(1075/8)^080h,(1075)&7
   641                           	line	125
   642                           ;PWMmain.c: 125: PORTBbits.RB3 = 0;
   643  0152  1283               	bcf	status, 5	;RP0=0, select bank0
   644  0153  1303               	bcf	status, 6	;RP1=0, select bank0
   645  0154  1186               	bcf	(6),3	;volatile
   646                           	line	126
   647                           	
   648  0155                     l1536:	
   649  0155  0008               	return
   650                           	opt stack 0
   651                           GLOBAL	__end_of_directionInit
   652  0156                     	__end_of_directionInit:
   653 ;; =============== function _directionInit ends ============
   654                           
   655                           	signat	_directionInit,88
   656                           	global	_BeginPWM
   657                           psect	text396,local,class=CODE,delta=2
   658                           global __ptext396
   659  00CE                     __ptext396:
   660                           
   661 ;; *************** function _BeginPWM *****************
   662 ;; Defined at:
   663 ;;		line 41 in file "pwmlib.c"
   664 ;; Parameters:    Size  Location     Type
   665 ;;		None
   666 ;; Auto vars:     Size  Location     Type
   667 ;;		None
   668 ;; Return value:  Size  Location     Type
   669 ;;		None               void
   670 ;; Registers used:
   671 ;;		wreg, status,2
   672 ;; Tracked objects:
   673 ;;		On entry : 0/0
   674 ;;		On exit  : 0/0
   675 ;;		Unchanged: 0/0
   676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   677 ;;      Params:         0       0       0       0       0
   678 ;;      Locals:         0       0       0       0       0
   679 ;;      Temps:          0       0       0       0       0
   680 ;;      Totals:         0       0       0       0       0
   681 ;;Total ram usage:        0 bytes
   682 ;; Hardware stack levels used:    1
   683 ;; Hardware stack levels required when called:    3
   684 ;; This function calls:
   685 ;;		Nothing
   686 ;; This function is called by:
   687 ;;		_Initialise
   688 ;; This function uses a non-reentrant model
   689 ;;
   690                           psect	text396
   691                           	file	"pwmlib.c"
   692                           	line	41
   693                           	global	__size_of_BeginPWM
   694  001E                     	__size_of_BeginPWM	equ	__end_of_BeginPWM-_BeginPWM
   695                           	
   696  00CE                     _BeginPWM:	
   697                           	opt	stack 3
   698                           ; Regs used in _BeginPWM: [wreg+status,2]
   699                           	line	44
   700                           	
   701  00CE                     l7529:	
   702                           ;pwmlib.c: 44: TRISCbits.TRISC5 = 1;
   703  00CE  1683               	bsf	status, 5	;RP0=1, select bank1
   704  00CF  1303               	bcf	status, 6	;RP1=0, select bank1
   705  00D0  1687               	bsf	(135)^080h,5	;volatile
   706                           	line	47
   707                           ;pwmlib.c: 47: PIE1bits.TMR2IE = 0;
   708  00D1  108C               	bcf	(140)^080h,1	;volatile
   709                           	line	51
   710                           	
   711  00D2                     l7531:	
   712                           ;pwmlib.c: 51: PR2 = 0xFF;
   713  00D2  30FF               	movlw	(0FFh)
   714  00D3  0092               	movwf	(146)^080h	;volatile
   715                           	line	55
   716                           ;pwmlib.c: 55: CCP1CON = 0b00001100;
   717  00D4  300C               	movlw	(0Ch)
   718  00D5  1283               	bcf	status, 5	;RP0=0, select bank0
   719  00D6  1303               	bcf	status, 6	;RP1=0, select bank0
   720  00D7  0097               	movwf	(23)	;volatile
   721                           	line	59
   722                           	
   723  00D8                     l7533:	
   724                           ;pwmlib.c: 59: CCPR1L = 0;
   725  00D8  0195               	clrf	(21)	;volatile
   726                           	line	60
   727                           	
   728  00D9                     l7535:	
   729                           ;pwmlib.c: 60: CCP1CONbits.CCP1X = 0;
   730  00D9  1297               	bcf	(23),5	;volatile
   731                           	line	61
   732                           	
   733  00DA                     l7537:	
   734                           ;pwmlib.c: 61: CCP1CONbits.CCP1Y = 0;
   735  00DA  1217               	bcf	(23),4	;volatile
   736                           	line	66
   737                           	
   738  00DB                     l7539:	
   739                           ;pwmlib.c: 66: PIR1bits.TMR2IF = 0;
   740  00DB  108C               	bcf	(12),1	;volatile
   741                           	line	70
   742                           	
   743  00DC                     l7541:	
   744                           ;pwmlib.c: 70: T2CON = 0b00000100;
   745  00DC  3004               	movlw	(04h)
   746  00DD  0092               	movwf	(18)	;volatile
   747  00DE  28DF               	goto	l7543
   748                           	line	75
   749                           ;pwmlib.c: 75: while(1)
   750                           	
   751  00DF                     l3039:	
   752                           	line	77
   753                           	
   754  00DF                     l7543:	
   755                           ;pwmlib.c: 76: {
   756                           ;pwmlib.c: 77: if(PIR1bits.TMR2IF == 1)
   757  00DF  1283               	bcf	status, 5	;RP0=0, select bank0
   758  00E0  1C8C               	btfss	(12),1	;volatile
   759  00E1  28E3               	goto	u2511
   760  00E2  28E4               	goto	u2510
   761  00E3                     u2511:
   762  00E3  28DF               	goto	l7543
   763  00E4                     u2510:
   764                           	line	79
   765                           	
   766  00E4                     l7545:	
   767                           ;pwmlib.c: 78: {
   768                           ;pwmlib.c: 79: TMR2IF = 0;
   769  00E4  108C               	bcf	(97/8),(97)&7
   770                           	line	80
   771                           ;pwmlib.c: 80: TRISCbits.TRISC5 = 0;
   772  00E5  1683               	bsf	status, 5	;RP0=1, select bank1
   773  00E6  1303               	bcf	status, 6	;RP1=0, select bank1
   774  00E7  1287               	bcf	(135)^080h,5	;volatile
   775                           	line	81
   776                           ;pwmlib.c: 81: break;
   777  00E8  28EB               	goto	l3043
   778                           	line	82
   779                           	
   780  00E9                     l3040:	
   781  00E9  28DF               	goto	l7543
   782                           	line	83
   783                           	
   784  00EA                     l3042:	
   785                           	line	75
   786  00EA  28DF               	goto	l7543
   787                           	
   788  00EB                     l3041:	
   789                           	line	84
   790                           	
   791  00EB                     l3043:	
   792  00EB  0008               	return
   793                           	opt stack 0
   794                           GLOBAL	__end_of_BeginPWM
   795  00EC                     	__end_of_BeginPWM:
   796 ;; =============== function _BeginPWM ends ============
   797                           
   798                           	signat	_BeginPWM,88
   799                           	global	_SetPulse
   800                           psect	text397,local,class=CODE,delta=2
   801                           global __ptext397
   802  00AE                     __ptext397:
   803                           
   804 ;; *************** function _SetPulse *****************
   805 ;; Defined at:
   806 ;;		line 105 in file "pwmlib.c"
   807 ;; Parameters:    Size  Location     Type
   808 ;;  length          2    0[BANK0 ] int 
   809 ;; Auto vars:     Size  Location     Type
   810 ;;  temp            2    2[BANK0 ] int 
   811 ;; Return value:  Size  Location     Type
   812 ;;		None               void
   813 ;; Registers used:
   814 ;;		wreg, status,2, status,0, btemp+1
   815 ;; Tracked objects:
   816 ;;		On entry : 0/0
   817 ;;		On exit  : 0/0
   818 ;;		Unchanged: 0/0
   819 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   820 ;;      Params:         0       2       0       0       0
   821 ;;      Locals:         0       2       0       0       0
   822 ;;      Temps:          0       0       0       0       0
   823 ;;      Totals:         0       4       0       0       0
   824 ;;Total ram usage:        4 bytes
   825 ;; Hardware stack levels used:    1
   826 ;; Hardware stack levels required when called:    3
   827 ;; This function calls:
   828 ;;		Nothing
   829 ;; This function is called by:
   830 ;;		_main
   831 ;;		_CalcPulse
   832 ;; This function uses a non-reentrant model
   833 ;;
   834                           psect	text397
   835                           	file	"pwmlib.c"
   836                           	line	105
   837                           	global	__size_of_SetPulse
   838  0020                     	__size_of_SetPulse	equ	__end_of_SetPulse-_SetPulse
   839                           	
   840  00AE                     _SetPulse:	
   841                           	opt	stack 4
   842                           ; Regs used in _SetPulse: [wreg+status,2+status,0+btemp+1]
   843                           	line	106
   844                           	
   845  00AE                     l7523:	
   846                           ;pwmlib.c: 106: int temp = length;
   847  00AE  1283               	bcf	status, 5	;RP0=0, select bank0
   848  00AF  1303               	bcf	status, 6	;RP1=0, select bank0
   849  00B0  0821               	movf	(SetPulse@length+1),w
   850  00B1  01A3               	clrf	(SetPulse@temp+1)
   851  00B2  07A3               	addwf	(SetPulse@temp+1)
   852  00B3  0820               	movf	(SetPulse@length),w
   853  00B4  01A2               	clrf	(SetPulse@temp)
   854  00B5  07A2               	addwf	(SetPulse@temp)
   855                           
   856                           	line	107
   857                           	
   858  00B6                     l7525:	
   859                           ;pwmlib.c: 107: if (temp > 255)
   860  00B6  0823               	movf	(SetPulse@temp+1),w
   861  00B7  3A80               	xorlw	80h
   862  00B8  00FF               	movwf	btemp+1
   863  00B9  3081               	movlw	(high(0100h))^80h
   864  00BA  027F               	subwf	btemp+1,w
   865  00BB  1D03               	skipz
   866  00BC  28BF               	goto	u2505
   867  00BD  3000               	movlw	low(0100h)
   868  00BE  0222               	subwf	(SetPulse@temp),w
   869  00BF                     u2505:
   870                           
   871  00BF  1C03               	skipc
   872  00C0  28C2               	goto	u2501
   873  00C1  28C3               	goto	u2500
   874  00C2                     u2501:
   875  00C2  28C9               	goto	l3050
   876  00C3                     u2500:
   877                           	line	108
   878                           	
   879  00C3                     l7527:	
   880                           ;pwmlib.c: 108: temp = 255;
   881  00C3  30FF               	movlw	low(0FFh)
   882  00C4  1283               	bcf	status, 5	;RP0=0, select bank0
   883  00C5  1303               	bcf	status, 6	;RP1=0, select bank0
   884  00C6  00A2               	movwf	(SetPulse@temp)
   885  00C7  3000               	movlw	high(0FFh)
   886  00C8  00A3               	movwf	((SetPulse@temp))+1
   887                           	
   888  00C9                     l3050:	
   889                           	line	109
   890                           ;pwmlib.c: 109: CCPR1L = temp;
   891  00C9  1283               	bcf	status, 5	;RP0=0, select bank0
   892  00CA  1303               	bcf	status, 6	;RP1=0, select bank0
   893  00CB  0822               	movf	(SetPulse@temp),w
   894  00CC  0095               	movwf	(21)	;volatile
   895                           	line	113
   896                           	
   897  00CD                     l3051:	
   898  00CD  0008               	return
   899                           	opt stack 0
   900                           GLOBAL	__end_of_SetPulse
   901  00CE                     	__end_of_SetPulse:
   902 ;; =============== function _SetPulse ends ============
   903                           
   904                           	signat	_SetPulse,4216
   905                           	global	_setDirection
   906                           psect	text398,local,class=CODE,delta=2
   907                           global __ptext398
   908  0108                     __ptext398:
   909                           
   910 ;; *************** function _setDirection *****************
   911 ;; Defined at:
   912 ;;		line 149 in file "PWMmain.c"
   913 ;; Parameters:    Size  Location     Type
   914 ;;  dir             2    0[BANK0 ] int 
   915 ;; Auto vars:     Size  Location     Type
   916 ;;		None
   917 ;; Return value:  Size  Location     Type
   918 ;;		None               void
   919 ;; Registers used:
   920 ;;		wreg, status,2, status,0
   921 ;; Tracked objects:
   922 ;;		On entry : 0/0
   923 ;;		On exit  : 0/0
   924 ;;		Unchanged: 0/0
   925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   926 ;;      Params:         0       2       0       0       0
   927 ;;      Locals:         0       0       0       0       0
   928 ;;      Temps:          0       0       0       0       0
   929 ;;      Totals:         0       2       0       0       0
   930 ;;Total ram usage:        2 bytes
   931 ;; Hardware stack levels used:    1
   932 ;; Hardware stack levels required when called:    3
   933 ;; This function calls:
   934 ;;		Nothing
   935 ;; This function is called by:
   936 ;;		_main
   937 ;; This function uses a non-reentrant model
   938 ;;
   939                           psect	text398
   940                           	file	"PWMmain.c"
   941                           	line	149
   942                           	global	__size_of_setDirection
   943  0017                     	__size_of_setDirection	equ	__end_of_setDirection-_setDirection
   944                           	
   945  0108                     _setDirection:	
   946                           	opt	stack 4
   947                           ; Regs used in _setDirection: [wreg+status,2+status,0]
   948                           	line	150
   949                           	
   950  0108                     l7515:	
   951                           ;PWMmain.c: 150: if (dir == 0)
   952  0108  1283               	bcf	status, 5	;RP0=0, select bank0
   953  0109  1303               	bcf	status, 6	;RP1=0, select bank0
   954  010A  0821               	movf	((setDirection@dir+1)),w
   955  010B  0420               	iorwf	((setDirection@dir)),w
   956  010C  1D03               	skipz
   957  010D  290F               	goto	u2481
   958  010E  2910               	goto	u2480
   959  010F                     u2481:
   960  010F  2912               	goto	l7519
   961  0110                     u2480:
   962                           	line	151
   963                           	
   964  0110                     l7517:	
   965                           ;PWMmain.c: 151: PORTBbits.RB3 = 0;
   966  0110  1186               	bcf	(6),3	;volatile
   967  0111  291E               	goto	l1548
   968                           	line	152
   969                           	
   970  0112                     l1544:	
   971                           	
   972  0112                     l7519:	
   973                           ;PWMmain.c: 152: else if (dir == 1)
   974  0112  3001               	movlw	01h
   975  0113  0620               	xorwf	(setDirection@dir),w
   976  0114  0421               	iorwf	(setDirection@dir+1),w
   977  0115  1D03               	skipz
   978  0116  2918               	goto	u2491
   979  0117  2919               	goto	u2490
   980  0118                     u2491:
   981  0118  291B               	goto	l1546
   982  0119                     u2490:
   983                           	line	153
   984                           	
   985  0119                     l7521:	
   986                           ;PWMmain.c: 153: PORTBbits.RB3 = 1;
   987  0119  1586               	bsf	(6),3	;volatile
   988  011A  291E               	goto	l1548
   989                           	line	154
   990                           	
   991  011B                     l1546:	
   992                           	line	155
   993                           ;PWMmain.c: 154: else
   994                           ;PWMmain.c: 155: PORTBbits.RB3 = 0;
   995  011B  1186               	bcf	(6),3	;volatile
   996  011C  291E               	goto	l1548
   997                           	
   998  011D                     l1547:	
   999  011D  291E               	goto	l1548
  1000                           	
  1001  011E                     l1545:	
  1002                           	line	156
  1003                           	
  1004  011E                     l1548:	
  1005  011E  0008               	return
  1006                           	opt stack 0
  1007                           GLOBAL	__end_of_setDirection
  1008  011F                     	__end_of_setDirection:
  1009 ;; =============== function _setDirection ends ============
  1010                           
  1011                           	signat	_setDirection,4216
  1012                           	global	_isr
  1013                           psect	text399,local,class=CODE,delta=2
  1014                           global __ptext399
  1015  011F                     __ptext399:
  1016                           
  1017 ;; *************** function _isr *****************
  1018 ;; Defined at:
  1019 ;;		line 113 in file "PWMmain.c"
  1020 ;; Parameters:    Size  Location     Type
  1021 ;;		None
  1022 ;; Auto vars:     Size  Location     Type
  1023 ;;		None
  1024 ;; Return value:  Size  Location     Type
  1025 ;;		None               void
  1026 ;; Registers used:
  1027 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1028 ;; Tracked objects:
  1029 ;;		On entry : 0/0
  1030 ;;		On exit  : 0/0
  1031 ;;		Unchanged: 0/0
  1032 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1033 ;;      Params:         0       0       0       0       0
  1034 ;;      Locals:         0       0       0       0       0
  1035 ;;      Temps:          4       0       0       0       0
  1036 ;;      Totals:         4       0       0       0       0
  1037 ;;Total ram usage:        4 bytes
  1038 ;; Hardware stack levels used:    1
  1039 ;; Hardware stack levels required when called:    2
  1040 ;; This function calls:
  1041 ;;		_i2cIsrHandler
  1042 ;; This function is called by:
  1043 ;;		Interrupt level 1
  1044 ;; This function uses a non-reentrant model
  1045 ;;
  1046                           psect	text399
  1047                           	file	"PWMmain.c"
  1048                           	line	113
  1049                           	global	__size_of_isr
  1050  0012                     	__size_of_isr	equ	__end_of_isr-_isr
  1051                           	
  1052  011F                     _isr:	
  1053                           	opt	stack 3
  1054                           ; Regs used in _isr: [allreg]
  1055                           psect	intentry,class=CODE,delta=2
  1056                           global __pintentry
  1057  0004                     __pintentry:
  1058                           global interrupt_function
  1059  0004                     interrupt_function:
  1060                           	global saved_w
  1061  007E                     	saved_w	set	btemp+0
  1062  0004  00FE               	movwf	saved_w
  1063  0005  0E03               	swapf	status,w
  1064  0006  00F3               	movwf	(??_isr+0)
  1065  0007  0804               	movf	fsr0,w
  1066  0008  00F4               	movwf	(??_isr+1)
  1067  0009  080A               	movf	pclath,w
  1068  000A  00F5               	movwf	(??_isr+2)
  1069  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1070  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1071  000D  087F               	movf	btemp+1,w
  1072  000E  00F6               	movwf	(??_isr+3)
  1073  000F  120A  118A  291F   	ljmp	_isr
  1074                           psect	text399
  1075                           	line	114
  1076                           	
  1077  011F                     i1l7445:	
  1078                           ;PWMmain.c: 114: i2cIsrHandler();
  1079  011F  120A  118A  2015   	fcall	_i2cIsrHandler
              120A  118A         
  1080                           	line	116
  1081                           	
  1082  0124                     i1l1533:	
  1083  0124  0876               	movf	(??_isr+3),w
  1084  0125  1283               	bcf	status, 5	;RP0=0, select bank0
  1085  0126  1303               	bcf	status, 6	;RP1=0, select bank0
  1086  0127  00FF               	movwf	btemp+1
  1087  0128  0875               	movf	(??_isr+2),w
  1088  0129  008A               	movwf	pclath
  1089  012A  0874               	movf	(??_isr+1),w
  1090  012B  0084               	movwf	fsr0
  1091  012C  0E73               	swapf	(??_isr+0)^0FFFFFF80h,w
  1092  012D  0083               	movwf	status
  1093  012E  0EFE               	swapf	saved_w,f
  1094  012F  0E7E               	swapf	saved_w,w
  1095  0130  0009               	retfie
  1096                           	opt stack 0
  1097                           GLOBAL	__end_of_isr
  1098  0131                     	__end_of_isr:
  1099 ;; =============== function _isr ends ============
  1100                           
  1101                           	signat	_isr,88
  1102                           	global	_i2cIsrHandler
  1103                           psect	text400,local,class=CODE,delta=2
  1104                           global __ptext400
  1105  0015                     __ptext400:
  1106                           
  1107 ;; *************** function _i2cIsrHandler *****************
  1108 ;; Defined at:
  1109 ;;		line 30 in file "i2cSlave.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;		None               void
  1116 ;; Registers used:
  1117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0
  1125 ;;      Temps:          1       0       0       0       0
  1126 ;;      Totals:         1       0       0       0       0
  1127 ;;Total ram usage:        1 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    1
  1130 ;; This function calls:
  1131 ;;		_i2cSend
  1132 ;;		_i2cDataUpdate
  1133 ;; This function is called by:
  1134 ;;		_isr
  1135 ;; This function uses a non-reentrant model
  1136 ;;
  1137                           psect	text400
  1138                           	file	"i2cSlave.c"
  1139                           	line	30
  1140                           	global	__size_of_i2cIsrHandler
  1141  006F                     	__size_of_i2cIsrHandler	equ	__end_of_i2cIsrHandler-_i2cIsrHandler
  1142                           	
  1143  0015                     _i2cIsrHandler:	
  1144                           	opt	stack 3
  1145                           ; Regs used in _i2cIsrHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1146                           	line	40
  1147                           	
  1148  0015                     i1l7447:	
  1149                           ;i2cSlave.c: 40: if ((SSPSTAT & 0b00100100) == 0b00100000){
  1150  0015  1683               	bsf	status, 5	;RP0=1, select bank1
  1151  0016  1303               	bcf	status, 6	;RP1=0, select bank1
  1152  0017  0814               	movf	(148)^080h,w
  1153  0018  3924               	andlw	024h
  1154  0019  3A20               	xorlw	020h
  1155  001A  1D03               	skipz
  1156  001B  281D               	goto	u240_21
  1157  001C  281E               	goto	u240_20
  1158  001D                     u240_21:
  1159  001D  2828               	goto	i1l7451
  1160  001E                     u240_20:
  1161                           	line	41
  1162                           	
  1163  001E                     i1l7449:	
  1164                           ;i2cSlave.c: 41: i2cBuffer[val] = SSPBUF;
  1165  001E  1283               	bcf	status, 5	;RP0=0, select bank0
  1166  001F  1303               	bcf	status, 6	;RP1=0, select bank0
  1167  0020  0813               	movf	(19),w	;volatile
  1168  0021  00F2               	movwf	(??_i2cIsrHandler+0)+0
  1169  0022  0879               	movf	(_val),w
  1170  0023  3E77               	addlw	_i2cBuffer&0ffh
  1171  0024  0084               	movwf	fsr0
  1172  0025  0872               	movf	(??_i2cIsrHandler+0)+0,w
  1173  0026  0080               	movwf	indf
  1174                           	line	43
  1175                           ;i2cSlave.c: 43: } else if ((SSPSTAT & 0b00100100) == 0b0000000){
  1176  0027  286B               	goto	i1l7469
  1177                           	
  1178  0028                     i1l4562:	
  1179                           	
  1180  0028                     i1l7451:	
  1181  0028  1683               	bsf	status, 5	;RP0=1, select bank1
  1182  0029  1303               	bcf	status, 6	;RP1=0, select bank1
  1183  002A  0814               	movf	(148)^080h,w
  1184  002B  3924               	andlw	024h
  1185  002C  1D03               	btfss	status,2
  1186  002D  282F               	goto	u241_21
  1187  002E  2830               	goto	u241_20
  1188  002F                     u241_21:
  1189  002F  2834               	goto	i1l7455
  1190  0030                     u241_20:
  1191                           	line	45
  1192                           	
  1193  0030                     i1l7453:	
  1194                           ;i2cSlave.c: 45: SSPBUF = 0;
  1195  0030  1283               	bcf	status, 5	;RP0=0, select bank0
  1196  0031  1303               	bcf	status, 6	;RP1=0, select bank0
  1197  0032  0193               	clrf	(19)	;volatile
  1198                           	line	47
  1199                           ;i2cSlave.c: 47: } else if ((SSPSTAT & 0b00100100) == 0b0000100){
  1200  0033  286B               	goto	i1l7469
  1201                           	
  1202  0034                     i1l4564:	
  1203                           	
  1204  0034                     i1l7455:	
  1205  0034  1683               	bsf	status, 5	;RP0=1, select bank1
  1206  0035  1303               	bcf	status, 6	;RP1=0, select bank1
  1207  0036  0814               	movf	(148)^080h,w
  1208  0037  3924               	andlw	024h
  1209  0038  3A04               	xorlw	04h
  1210  0039  1D03               	skipz
  1211  003A  283C               	goto	u242_21
  1212  003B  283D               	goto	u242_20
  1213  003C                     u242_21:
  1214  003C  283F               	goto	i1l7459
  1215  003D                     u242_20:
  1216  003D  286B               	goto	i1l7469
  1217                           	line	50
  1218                           	
  1219  003E                     i1l7457:	
  1220                           ;i2cSlave.c: 50: } else if ((SSPSTAT & 0b00100100) == 0b0010100){
  1221  003E  286B               	goto	i1l7469
  1222                           	
  1223  003F                     i1l4566:	
  1224                           	
  1225  003F                     i1l7459:	
  1226  003F  0814               	movf	(148)^080h,w
  1227  0040  3924               	andlw	024h
  1228  0041  3A14               	xorlw	014h
  1229  0042  1D03               	skipz
  1230  0043  2845               	goto	u243_21
  1231  0044  2846               	goto	u243_20
  1232  0045                     u243_21:
  1233  0045  286B               	goto	i1l7469
  1234  0046                     u243_20:
  1235                           	line	52
  1236                           	
  1237  0046                     i1l7461:	
  1238                           ;i2cSlave.c: 52: i2cRequest = SSPBUF;
  1239  0046  1283               	bcf	status, 5	;RP0=0, select bank0
  1240  0047  1303               	bcf	status, 6	;RP1=0, select bank0
  1241  0048  0813               	movf	(19),w	;volatile
  1242  0049  00F2               	movwf	(??_i2cIsrHandler+0)+0
  1243  004A  0872               	movf	(??_i2cIsrHandler+0)+0,w
  1244  004B  00FB               	movwf	(_i2cRequest)
  1245                           	line	54
  1246                           ;i2cSlave.c: 54: if (i2cRequest == 1){
  1247  004C  087B               	movf	(_i2cRequest),w
  1248  004D  3A01               	xorlw	01h
  1249  004E  1D03               	skipz
  1250  004F  2851               	goto	u244_21
  1251  0050  2852               	goto	u244_20
  1252  0051                     u244_21:
  1253  0051  2859               	goto	i1l7465
  1254  0052                     u244_20:
  1255                           	line	55
  1256                           	
  1257  0052                     i1l7463:	
  1258                           ;i2cSlave.c: 55: i2cSend(0x00);
  1259  0052  3000               	movlw	(0)
  1260  0053  120A  118A  2156   	fcall	_i2cSend
              120A  118A         
  1261                           	line	56
  1262                           ;i2cSlave.c: 56: } else if (i2cRequest == 2){
  1263  0058  286B               	goto	i1l7469
  1264                           	
  1265  0059                     i1l4569:	
  1266                           	
  1267  0059                     i1l7465:	
  1268  0059  087B               	movf	(_i2cRequest),w
  1269  005A  3A02               	xorlw	02h
  1270  005B  1D03               	skipz
  1271  005C  285E               	goto	u245_21
  1272  005D  285F               	goto	u245_20
  1273  005E                     u245_21:
  1274  005E  286B               	goto	i1l7469
  1275  005F                     u245_20:
  1276                           	line	57
  1277                           	
  1278  005F                     i1l7467:	
  1279                           ;i2cSlave.c: 57: i2cSend(0x00);
  1280  005F  3000               	movlw	(0)
  1281  0060  120A  118A  2156   	fcall	_i2cSend
              120A  118A         
  1282  0065  286B               	goto	i1l7469
  1283                           	line	58
  1284                           	
  1285  0066                     i1l4571:	
  1286  0066  286B               	goto	i1l7469
  1287                           	line	59
  1288                           	
  1289  0067                     i1l4570:	
  1290  0067  286B               	goto	i1l7469
  1291                           	
  1292  0068                     i1l4568:	
  1293  0068  286B               	goto	i1l7469
  1294                           	line	61
  1295                           	
  1296  0069                     i1l4567:	
  1297  0069  286B               	goto	i1l7469
  1298                           	
  1299  006A                     i1l4565:	
  1300  006A  286B               	goto	i1l7469
  1301                           	
  1302  006B                     i1l4563:	
  1303                           	
  1304  006B                     i1l7469:	
  1305                           ;i2cSlave.c: 58: }
  1306                           ;i2cSlave.c: 59: }
  1307                           ;i2cSlave.c: 61: val++;
  1308  006B  3001               	movlw	low(01h)
  1309  006C  07F9               	addwf	(_val),f
  1310  006D  1803               	skipnc
  1311  006E  0AFA               	incf	(_val+1),f
  1312  006F  3000               	movlw	high(01h)
  1313  0070  07FA               	addwf	(_val+1),f
  1314                           	line	62
  1315                           	
  1316  0071                     i1l7471:	
  1317                           ;i2cSlave.c: 62: SSPIF = 0;
  1318  0071  1283               	bcf	status, 5	;RP0=0, select bank0
  1319  0072  1303               	bcf	status, 6	;RP1=0, select bank0
  1320  0073  118C               	bcf	(99/8),(99)&7
  1321                           	line	64
  1322                           	
  1323  0074                     i1l7473:	
  1324                           ;i2cSlave.c: 64: if (val == 2){
  1325  0074  3002               	movlw	02h
  1326  0075  0679               	xorwf	(_val),w
  1327  0076  047A               	iorwf	(_val+1),w
  1328  0077  1D03               	skipz
  1329  0078  287A               	goto	u246_21
  1330  0079  287B               	goto	u246_20
  1331  007A                     u246_21:
  1332  007A  2883               	goto	i1l4573
  1333  007B                     u246_20:
  1334                           	line	65
  1335                           	
  1336  007B                     i1l7475:	
  1337                           ;i2cSlave.c: 65: i2cDataUpdate();
  1338  007B  120A  118A  20EC   	fcall	_i2cDataUpdate
              120A  118A         
  1339                           	line	66
  1340                           	
  1341  0080                     i1l7477:	
  1342                           ;i2cSlave.c: 66: val = 0;
  1343  0080  01F9               	clrf	(_val)
  1344  0081  01FA               	clrf	(_val+1)
  1345  0082  2883               	goto	i1l4573
  1346                           	line	67
  1347                           	
  1348  0083                     i1l4572:	
  1349                           	line	68
  1350                           	
  1351  0083                     i1l4573:	
  1352  0083  0008               	return
  1353                           	opt stack 0
  1354                           GLOBAL	__end_of_i2cIsrHandler
  1355  0084                     	__end_of_i2cIsrHandler:
  1356 ;; =============== function _i2cIsrHandler ends ============
  1357                           
  1358                           	signat	_i2cIsrHandler,88
  1359                           	global	_i2cDataUpdate
  1360                           psect	text401,local,class=CODE,delta=2
  1361                           global __ptext401
  1362  00EC                     __ptext401:
  1363                           
  1364 ;; *************** function _i2cDataUpdate *****************
  1365 ;; Defined at:
  1366 ;;		line 71 in file "i2cSlave.c"
  1367 ;; Parameters:    Size  Location     Type
  1368 ;;		None
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;		None               void
  1373 ;; Registers used:
  1374 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1380 ;;      Params:         0       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0
  1382 ;;      Temps:          2       0       0       0       0
  1383 ;;      Totals:         2       0       0       0       0
  1384 ;;Total ram usage:        2 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_i2cIsrHandler
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           psect	text401
  1393                           	file	"i2cSlave.c"
  1394                           	line	71
  1395                           	global	__size_of_i2cDataUpdate
  1396  001C                     	__size_of_i2cDataUpdate	equ	__end_of_i2cDataUpdate-_i2cDataUpdate
  1397                           	
  1398  00EC                     _i2cDataUpdate:	
  1399                           	opt	stack 3
  1400                           ; Regs used in _i2cDataUpdate: [wreg-fsr0h+status,2+status,0]
  1401                           	line	72
  1402                           	
  1403  00EC                     i1l7487:	
  1404                           ;i2cSlave.c: 72: switch (i2cBuffer[0]) {
  1405  00EC  2902               	goto	i1l7495
  1406                           	line	73
  1407                           ;i2cSlave.c: 73: case 0 :
  1408                           	
  1409  00ED                     i1l4577:	
  1410                           	line	74
  1411                           	
  1412  00ED                     i1l7489:	
  1413                           ;i2cSlave.c: 74: i2cSpeed = i2cBuffer[1] & 0b01111111;
  1414  00ED  0878               	movf	0+(_i2cBuffer)+01h,w
  1415  00EE  397F               	andlw	07Fh
  1416  00EF  00F0               	movwf	(??_i2cDataUpdate+0)+0
  1417  00F0  0870               	movf	(??_i2cDataUpdate+0)+0,w
  1418  00F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1419  00F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1420  00F3  00A9               	movwf	(_i2cSpeed)
  1421                           	line	75
  1422                           	
  1423  00F4                     i1l7491:	
  1424                           ;i2cSlave.c: 75: i2cDirection = i2cBuffer[1] >> 7;
  1425  00F4  0878               	movf	0+(_i2cBuffer)+01h,w
  1426  00F5  00F0               	movwf	(??_i2cDataUpdate+0)+0
  1427  00F6  3007               	movlw	07h
  1428  00F7                     u247_25:
  1429  00F7  1003               	clrc
  1430  00F8  0CF0               	rrf	(??_i2cDataUpdate+0)+0,f
  1431  00F9  3EFF               	addlw	-1
  1432  00FA  1D03               	skipz
  1433  00FB  28F7               	goto	u247_25
  1434  00FC  0870               	movf	0+(??_i2cDataUpdate+0)+0,w
  1435  00FD  00F1               	movwf	(??_i2cDataUpdate+1)+0
  1436  00FE  0871               	movf	(??_i2cDataUpdate+1)+0,w
  1437  00FF  00A8               	movwf	(_i2cDirection)
  1438                           	line	76
  1439                           ;i2cSlave.c: 76: break;
  1440  0100  2907               	goto	i1l4579
  1441                           	line	79
  1442                           	
  1443  0101                     i1l7493:	
  1444                           ;i2cSlave.c: 79: }
  1445  0101  2907               	goto	i1l4579
  1446                           	line	72
  1447                           	
  1448  0102                     i1l4576:	
  1449                           	
  1450  0102                     i1l7495:	
  1451  0102  0877               	movf	(_i2cBuffer),w
  1452                           	; Switch size 1, requested type "space"
  1453                           ; Number of cases is 1, Range of values is 0 to 0
  1454                           ; switch strategies available:
  1455                           ; Name         Instructions Cycles
  1456                           ; simple_byte            4     3 (average)
  1457                           ; direct_byte           11     8 (fixed)
  1458                           ; jumptable            260     6 (fixed)
  1459                           ; rangetable             5     6 (fixed)
  1460                           ; spacedrange            8     9 (fixed)
  1461                           ; locatedrange           1     3 (fixed)
  1462                           ;	Chosen strategy is simple_byte
  1463                           
  1464                           	opt asmopt_off
  1465  0103  3A00               	xorlw	0^0	; case 0
  1466  0104  1903               	skipnz
  1467  0105  28ED               	goto	i1l7489
  1468  0106  2907               	goto	i1l4579
  1469                           	opt asmopt_on
  1470                           
  1471                           	line	79
  1472                           	
  1473  0107                     i1l4578:	
  1474                           	line	81
  1475                           	
  1476  0107                     i1l4579:	
  1477  0107  0008               	return
  1478                           	opt stack 0
  1479                           GLOBAL	__end_of_i2cDataUpdate
  1480  0108                     	__end_of_i2cDataUpdate:
  1481 ;; =============== function _i2cDataUpdate ends ============
  1482                           
  1483                           	signat	_i2cDataUpdate,88
  1484                           	global	_i2cSend
  1485                           psect	text402,local,class=CODE,delta=2
  1486                           global __ptext402
  1487  0156                     __ptext402:
  1488                           
  1489 ;; *************** function _i2cSend *****************
  1490 ;; Defined at:
  1491 ;;		line 83 in file "i2cSlave.c"
  1492 ;; Parameters:    Size  Location     Type
  1493 ;;  msg             1    wreg     unsigned char 
  1494 ;; Auto vars:     Size  Location     Type
  1495 ;;		None
  1496 ;; Return value:  Size  Location     Type
  1497 ;;		None               void
  1498 ;; Registers used:
  1499 ;;		wreg
  1500 ;; Tracked objects:
  1501 ;;		On entry : 0/0
  1502 ;;		On exit  : 0/0
  1503 ;;		Unchanged: 0/0
  1504 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1505 ;;      Params:         0       0       0       0       0
  1506 ;;      Locals:         0       0       0       0       0
  1507 ;;      Temps:          0       0       0       0       0
  1508 ;;      Totals:         0       0       0       0       0
  1509 ;;Total ram usage:        0 bytes
  1510 ;; Hardware stack levels used:    1
  1511 ;; This function calls:
  1512 ;;		Nothing
  1513 ;; This function is called by:
  1514 ;;		_i2cIsrHandler
  1515 ;; This function uses a non-reentrant model
  1516 ;;
  1517                           psect	text402
  1518                           	file	"i2cSlave.c"
  1519                           	line	83
  1520                           	global	__size_of_i2cSend
  1521  0001                     	__size_of_i2cSend	equ	__end_of_i2cSend-_i2cSend
  1522                           	
  1523  0156                     _i2cSend:	
  1524                           	opt	stack 3
  1525                           ; Regs used in _i2cSend: [wreg]
  1526                           	line	85
  1527                           	
  1528  0156                     i1l6513:	
  1529                           	line	86
  1530                           ;i2cSlave.c: 85: return;
  1531                           	
  1532  0156                     i1l4582:	
  1533  0156  0008               	return
  1534                           	opt stack 0
  1535                           GLOBAL	__end_of_i2cSend
  1536  0157                     	__end_of_i2cSend:
  1537 ;; =============== function _i2cSend ends ============
  1538                           
  1539                           	signat	_i2cSend,4216
  1540                           psect	text403,local,class=CODE,delta=2
  1541                           global __ptext403
  1542  0000                     __ptext403:
  1543                           	global	btemp
  1544  007E                     	btemp set 07Eh
  1545                           
  1546                           	DABS	1,126,2	;btemp
  1547                           	global	wtemp0
  1548  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Wed Jan 09 10:38:38 2013

                    _RD 0C60                      _WR 0C61                     _CKE 04A6                     _CKP 00A4  
                   _GIE 005F                     _PR2 0092                     _SMP 04A7                     _isr 011F  
                   _val 0079                     fsr0 0004                     indf 0000                    l3040 00E9  
                  l3041 00EB                    l3050 00C9                    l3042 00EA                    l3051 00CD  
                  l3043 00EB                    l1515 0089                    l1516 00AA                    l1517 00AB  
                  l1518 00AB                    l3039 00DF                    l1527 0141                    l1544 0112  
                  l1536 0155                    l1545 011E                    l1546 011B                    l1547 011D  
                  l1548 011E                    l7521 0119                    l7515 0108                    l7523 00AE  
                  l7531 00D2                    ?_isr 0070                    l7517 0110                    l7525 00B6  
                  l7541 00DC                    l7533 00D8                    l7519 0112                    l7527 00C3  
                  l7543 00DF                    l7535 00D9                    l7545 00E4                    l7537 00DA  
                  l7529 00CE                    l7553 0131                    l7561 0084                    l7539 00DB  
                  l7547 014F                    l7555 0136                    l7563 0097                    l7557 013B  
                  l7565 00A5                    l7559 013E                    u2500 00C3                    u2501 00C2  
                  u2510 00E4                    u2511 00E3                    u2505 00BF                    u2480 0110  
                  u2481 010F                    u2490 0119                    u2491 0118                    _PEIE 005E  
                  _INTE 005C                    _WREN 0C62         ??_directionInit 0020                    _main 0084  
                  btemp 007E                    start 0012         ??_i2cIsrHandler 0072         __end_of_i2cSend 0157  
                 ??_isr 0073                   ?_main 0070                   _EEADR 010D                   _CARRY 0018  
                 _T2CON 0012                   _PORTD 0008                   _SSPM0 00A0                   _SSPM1 00A1  
                 _SSPM2 00A2                   _SSPM3 00A3                   _TRISD 0088                   _SSPIE 0463  
                 _SSPIF 0063                   _SSPEN 00A5                   pclath 000A        __end_of_BeginPWM 00EC  
            _i2cRequest 007B                   status 0003                   wtemp0 007E            __end_of_main 00AE  
            _Initialise 0131                  ??_main 0024        __end_of_SetPulse 00CE                  _EEDATA 010C  
                _CCPR1L 0015                  _EECON1 018C                  _EECON2 018D                  i1l1533 0124  
                i1l4570 0067                  i1l4562 0028                  i1l4563 006B                  i1l4571 0066  
                i1l4572 0083                  i1l4564 0034                  i1l4573 0083                  i1l4565 006A  
                i1l4582 0156                  i1l4566 003F                  i1l4567 0069                  i1l4576 0102  
                i1l4568 0068                  i1l6513 0156                  i1l4577 00ED                  i1l4569 0059  
                i1l4578 0107                  i1l4579 0107                  i1l7451 0028                  i1l7461 0046  
                i1l7453 0030                  i1l7445 011F                  i1l7471 0071                  i1l7463 0052  
                i1l7455 0034                  i1l7447 0015                  i1l7473 0074                  i1l7465 0059  
                i1l7457 003E                  i1l7449 001E                  i1l7491 00F4                  i1l7475 007B  
                i1l7467 005F                  i1l7459 003F                  i1l7493 0101                  i1l7477 0080  
                i1l7469 006B                  i1l7495 0102                  i1l7487 00EC                  u240_20 001E  
                i1l7489 00ED                  u240_21 001D                  u241_20 0030                  u241_21 002F  
                u242_20 003D                  u242_21 003C                  u243_20 0046                  u243_21 0045  
                u244_20 0052                  u244_21 0051                  u245_20 005F                  u245_21 005E  
                u246_20 007B                  u246_21 007A                  u247_25 00F7                  _TMR2IF 0061  
                _SSPADD 0093         setDirection@dir 0020                  _TRISB3 0433                  _TRISC6 043E  
                _TRISC7 043F                  _SSPBUF 0013               ??_i2cSend 0070                  saved_w 007E  
        __pcstackCOMMON 0070             ?_Initialise 0070           ?_setDirection 0020               ?_BeginPWM 0070  
 __end_of_i2cDataUpdate 0108              __pbssBANK0 0026               ?_SetPulse 0020              __pmaintext 0084  
            __pintentry 0004                 _CCP1CON 0017          ??_setDirection 0022              ??_BeginPWM 0020  
               _SSPSTAT 0094     __size_of_Initialise 0011                 _i2cSend 0156   __end_of_directionInit 0156  
            ??_SetPulse 0022   __end_of_i2cIsrHandler 0084            _i2cDirection 0028               _T2CONbits 0012  
          __size_of_isr 0012    end_of_initialization 014B               _PORTBbits 0006          SetPulse@length 0020  
             _TRISCbits 0087             _CCP1CONbits 0017    __end_of_setDirection 011F            ??_Initialise 0020  
             _i2cBuffer 0077     start_initialization 0142       __size_of_BeginPWM 001E             __end_of_isr 0131  
    __end_of_Initialise 0142       __size_of_SetPulse 0020            SetPulse@temp 0022             __pbssCOMMON 0077  
         __pcstackBANK0 0020                ?_i2cSend 0070               __ptext400 0015               __ptext401 00EC  
             __ptext402 0156               __ptext403 0000               __ptext393 0000               __ptext394 0131  
             __ptext395 014F               __ptext396 00CE               __ptext397 00AE               __ptext398 0108  
             __ptext399 011F  __size_of_i2cDataUpdate 001C   __size_of_setDirection 0017       interrupt_function 0004  
              _PIE1bits 008C                _PIR1bits 000C                _BeginPWM 00CE            _setDirection 0108  
__size_of_directionInit 0007  __size_of_i2cIsrHandler 006F           _i2cDataUpdate 00EC                _i2cSpeed 0029  
      __size_of_i2cSend 0001                _SetPulse 00AE          ?_i2cDataUpdate 0070           __size_of_main 002A  
         _directionInit 014F                _setSpeed 0026           _i2cIsrHandler 0015                intlevel1 0000  
        ?_directionInit 0070          ?_i2cIsrHandler 0070         ??_i2cDataUpdate 0070  
