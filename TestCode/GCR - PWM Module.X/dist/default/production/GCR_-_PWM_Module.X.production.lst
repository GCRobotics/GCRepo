

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Mar 15 15:28:25 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 18 "PWMmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 18 "PWMmain.c"
    45  2007  F4F4               	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFFFF & 0xF7FF ;#
    46                           	FNCALL	_main,_Initialise
    47                           	FNCALL	_main,_CalcPulse
    48                           	FNCALL	_main,_delay
    49                           	FNCALL	_CalcPulse,___wmul
    50                           	FNCALL	_CalcPulse,___awdiv
    51                           	FNCALL	_CalcPulse,_SetPulse
    52                           	FNCALL	_Initialise,_BeginPWM
    53                           	FNCALL	_Initialise,_i2cInit
    54                           	FNCALL	_Initialise,_directionInit
    55                           	FNROOT	_main
    56                           	FNCALL	_isr,_i2cIsrHandler
    57                           	FNCALL	_i2cIsrHandler,_i2cSend
    58                           	FNCALL	_i2cIsrHandler,_i2cDataUpdate
    59                           	FNCALL	intlevel1,_isr
    60                           	global	intlevel1
    61                           	FNROOT	intlevel1
    62                           	global	_dc
    63                           	global	_setSpeed
    64                           	global	_i2cBuffer
    65                           	global	_i2cBufferVal
    66                           	global	_i2cDirection
    67                           	global	_i2cRequest
    68                           	global	_i2cSpeed
    69                           	global	_CCP1CON
    70                           psect	text493,local,class=CODE,delta=2
    71                           global __ptext493
    72  0000                     __ptext493:
    73  0017                     _CCP1CON	set	23
    74                           	global	_CCP1CONbits
    75  0017                     _CCP1CONbits	set	23
    76                           	global	_CCPR1L
    77  0015                     _CCPR1L	set	21
    78                           	global	_PIR1bits
    79  000C                     _PIR1bits	set	12
    80                           	global	_PORTBbits
    81  0006                     _PORTBbits	set	6
    82                           	global	_PORTD
    83  0008                     _PORTD	set	8
    84                           	global	_SSPBUF
    85  0013                     _SSPBUF	set	19
    86                           	global	_T2CON
    87  0012                     _T2CON	set	18
    88                           	global	_T2CONbits
    89  0012                     _T2CONbits	set	18
    90                           	global	_TMR0
    91  0001                     _TMR0	set	1
    92                           	global	_CARRY
    93  0018                     _CARRY	set	24
    94                           	global	_CKP
    95  00A4                     _CKP	set	164
    96                           	global	_GIE
    97  005F                     _GIE	set	95
    98                           	global	_INTE
    99  005C                     _INTE	set	92
   100                           	global	_PEIE
   101  005E                     _PEIE	set	94
   102                           	global	_SSPEN
   103  00A5                     _SSPEN	set	165
   104                           	global	_SSPIF
   105  0063                     _SSPIF	set	99
   106                           	global	_SSPM0
   107  00A0                     _SSPM0	set	160
   108                           	global	_SSPM1
   109  00A1                     _SSPM1	set	161
   110                           	global	_SSPM2
   111  00A2                     _SSPM2	set	162
   112                           	global	_SSPM3
   113  00A3                     _SSPM3	set	163
   114                           	global	_TMR2IF
   115  0061                     _TMR2IF	set	97
   116                           	global	_OPTION_REG
   117  0081                     _OPTION_REG	set	129
   118                           	global	_PIE1bits
   119  008C                     _PIE1bits	set	140
   120                           	global	_PR2
   121  0092                     _PR2	set	146
   122                           	global	_SSPADD
   123  0093                     _SSPADD	set	147
   124                           	global	_SSPSTAT
   125  0094                     _SSPSTAT	set	148
   126                           	global	_TRISA
   127  0085                     _TRISA	set	133
   128                           	global	_TRISCbits
   129  0087                     _TRISCbits	set	135
   130                           	global	_TRISD
   131  0088                     _TRISD	set	136
   132                           	global	_CKE
   133  04A6                     _CKE	set	1190
   134                           	global	_SMP
   135  04A7                     _SMP	set	1191
   136                           	global	_SSPIE
   137  0463                     _SSPIE	set	1123
   138                           	global	_TRISB3
   139  0433                     _TRISB3	set	1075
   140                           	global	_TRISC6
   141  043E                     _TRISC6	set	1086
   142                           	global	_TRISC7
   143  043F                     _TRISC7	set	1087
   144                           	global	_EEADR
   145  010D                     _EEADR	set	269
   146                           	global	_EEDATA
   147  010C                     _EEDATA	set	268
   148                           	global	_EECON1
   149  018C                     _EECON1	set	396
   150                           	global	_EECON2
   151  018D                     _EECON2	set	397
   152                           	global	_RD
   153  0C60                     _RD	set	3168
   154                           	global	_WR
   155  0C61                     _WR	set	3169
   156                           	global	_WREN
   157  0C62                     _WREN	set	3170
   158                           	file	"C:\Users\Alan\AppData\Local\Temp\s4ps."
   159                           	line	#
   160                           psect cinit,class=CODE,delta=2
   161                           global start_initialization
   162  02BE                     start_initialization:
   163                           
   164                           psect	bssCOMMON,class=COMMON,space=1
   165                           global __pbssCOMMON
   166  0077                     __pbssCOMMON:
   167  0077                     _i2cBuffer:
   168  0077                            ds      2
   169                           
   170  0079                     _i2cBufferVal:
   171  0079                            ds      1
   172                           
   173  007A                     _i2cDirection:
   174  007A                            ds      1
   175                           
   176  007B                     _i2cRequest:
   177  007B                            ds      1
   178                           
   179  007C                     _i2cSpeed:
   180  007C                            ds      1
   181                           
   182                           psect	bssBANK0,class=BANK0,space=1
   183                           global __pbssBANK0
   184  0033                     __pbssBANK0:
   185  0033                     _dc:
   186  0033                            ds      2
   187                           
   188  0035                     _setSpeed:
   189  0035                            ds      2
   190                           
   191                           ; Clear objects allocated to COMMON
   192                           psect cinit,class=CODE,delta=2
   193  02BE  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
   194  02BF  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
   195  02C0  01F9               	clrf	((__pbssCOMMON)+2)&07Fh
   196  02C1  01FA               	clrf	((__pbssCOMMON)+3)&07Fh
   197  02C2  01FB               	clrf	((__pbssCOMMON)+4)&07Fh
   198  02C3  01FC               	clrf	((__pbssCOMMON)+5)&07Fh
   199                           ; Clear objects allocated to BANK0
   200                           psect cinit,class=CODE,delta=2
   201  02C4  01B3               	clrf	((__pbssBANK0)+0)&07Fh
   202  02C5  01B4               	clrf	((__pbssBANK0)+1)&07Fh
   203  02C6  01B5               	clrf	((__pbssBANK0)+2)&07Fh
   204  02C7  01B6               	clrf	((__pbssBANK0)+3)&07Fh
   205                           psect cinit,class=CODE,delta=2
   206                           global end_of_initialization
   207                           
   208                           ;End of C runtime variable initialization code
   209                           
   210  02C8                     end_of_initialization:
   211  02C8  0183               clrf status
   212  02C9  120A  118A  2815   ljmp _main	;jump to C main() function
   213                           psect	cstackCOMMON,class=COMMON,space=1
   214                           global __pcstackCOMMON
   215  0070                     __pcstackCOMMON:
   216                           	global	?_i2cSend
   217  0070                     ?_i2cSend:	; 0 bytes @ 0x0
   218                           	global	??_i2cSend
   219  0070                     ??_i2cSend:	; 0 bytes @ 0x0
   220                           	global	?_i2cDataUpdate
   221  0070                     ?_i2cDataUpdate:	; 0 bytes @ 0x0
   222                           	global	??_i2cDataUpdate
   223  0070                     ??_i2cDataUpdate:	; 0 bytes @ 0x0
   224                           	global	?_Initialise
   225  0070                     ?_Initialise:	; 0 bytes @ 0x0
   226                           	global	?_BeginPWM
   227  0070                     ?_BeginPWM:	; 0 bytes @ 0x0
   228                           	global	?_directionInit
   229  0070                     ?_directionInit:	; 0 bytes @ 0x0
   230                           	global	?_i2cInit
   231  0070                     ?_i2cInit:	; 0 bytes @ 0x0
   232                           	global	?_i2cIsrHandler
   233  0070                     ?_i2cIsrHandler:	; 0 bytes @ 0x0
   234                           	global	?_isr
   235  0070                     ?_isr:	; 0 bytes @ 0x0
   236                           	global	?_main
   237  0070                     ?_main:	; 2 bytes @ 0x0
   238  0070                     	ds	2
   239                           	global	??_i2cIsrHandler
   240  0072                     ??_i2cIsrHandler:	; 0 bytes @ 0x2
   241  0072                     	ds	1
   242                           	global	??_isr
   243  0073                     ??_isr:	; 0 bytes @ 0x3
   244  0073                     	ds	4
   245                           psect	cstackBANK0,class=BANK0,space=1
   246                           global __pcstackBANK0
   247  0020                     __pcstackBANK0:
   248                           	global	?_delay
   249  0020                     ?_delay:	; 0 bytes @ 0x0
   250                           	global	??_BeginPWM
   251  0020                     ??_BeginPWM:	; 0 bytes @ 0x0
   252                           	global	??_directionInit
   253  0020                     ??_directionInit:	; 0 bytes @ 0x0
   254                           	global	?_SetPulse
   255  0020                     ?_SetPulse:	; 0 bytes @ 0x0
   256                           	global	??_i2cInit
   257  0020                     ??_i2cInit:	; 0 bytes @ 0x0
   258                           	global	?___wmul
   259  0020                     ?___wmul:	; 2 bytes @ 0x0
   260                           	global	i2cInit@address
   261  0020                     i2cInit@address:	; 1 bytes @ 0x0
   262                           	global	delay@length
   263  0020                     delay@length:	; 2 bytes @ 0x0
   264                           	global	SetPulse@length
   265  0020                     SetPulse@length:	; 2 bytes @ 0x0
   266                           	global	___wmul@multiplier
   267  0020                     ___wmul@multiplier:	; 2 bytes @ 0x0
   268  0020                     	ds	1
   269                           	global	??_Initialise
   270  0021                     ??_Initialise:	; 0 bytes @ 0x1
   271  0021                     	ds	1
   272                           	global	??_delay
   273  0022                     ??_delay:	; 0 bytes @ 0x2
   274                           	global	??_SetPulse
   275  0022                     ??_SetPulse:	; 0 bytes @ 0x2
   276                           	global	SetPulse@temp
   277  0022                     SetPulse@temp:	; 2 bytes @ 0x2
   278                           	global	___wmul@multiplicand
   279  0022                     ___wmul@multiplicand:	; 2 bytes @ 0x2
   280  0022                     	ds	1
   281                           	global	delay@x
   282  0023                     delay@x:	; 2 bytes @ 0x3
   283  0023                     	ds	1
   284                           	global	??___wmul
   285  0024                     ??___wmul:	; 0 bytes @ 0x4
   286                           	global	___wmul@product
   287  0024                     ___wmul@product:	; 2 bytes @ 0x4
   288  0024                     	ds	2
   289                           	global	?___awdiv
   290  0026                     ?___awdiv:	; 2 bytes @ 0x6
   291                           	global	___awdiv@divisor
   292  0026                     ___awdiv@divisor:	; 2 bytes @ 0x6
   293  0026                     	ds	2
   294                           	global	___awdiv@dividend
   295  0028                     ___awdiv@dividend:	; 2 bytes @ 0x8
   296  0028                     	ds	2
   297                           	global	??___awdiv
   298  002A                     ??___awdiv:	; 0 bytes @ 0xA
   299  002A                     	ds	1
   300                           	global	___awdiv@counter
   301  002B                     ___awdiv@counter:	; 1 bytes @ 0xB
   302  002B                     	ds	1
   303                           	global	___awdiv@sign
   304  002C                     ___awdiv@sign:	; 1 bytes @ 0xC
   305  002C                     	ds	1
   306                           	global	___awdiv@quotient
   307  002D                     ___awdiv@quotient:	; 2 bytes @ 0xD
   308  002D                     	ds	2
   309                           	global	?_CalcPulse
   310  002F                     ?_CalcPulse:	; 0 bytes @ 0xF
   311                           	global	CalcPulse@speed
   312  002F                     CalcPulse@speed:	; 2 bytes @ 0xF
   313  002F                     	ds	2
   314                           	global	??_CalcPulse
   315  0031                     ??_CalcPulse:	; 0 bytes @ 0x11
   316                           	global	CalcPulse@pulse
   317  0031                     CalcPulse@pulse:	; 2 bytes @ 0x11
   318  0031                     	ds	2
   319                           	global	??_main
   320  0033                     ??_main:	; 0 bytes @ 0x13
   321 ;;Data sizes: Strings 0, constant 0, data 0, bss 10, persistent 0 stack 0
   322 ;;Auto spaces:   Size  Autos    Used
   323 ;; COMMON          14      7      13
   324 ;; BANK0           80     19      23
   325 ;; BANK1           80      0       0
   326 ;; BANK3           96      0       0
   327 ;; BANK2           80      0       0
   328                           
   329 ;;
   330 ;; Pointer list with targets:
   331                           
   332 ;; ?___wmul	unsigned int  size(1) Largest target is 0
   333 ;;
   334 ;; ?___awdiv	int  size(1) Largest target is 0
   335 ;;
   336                           
   337                           
   338 ;;
   339 ;; Critical Paths under _main in COMMON
   340 ;;
   341 ;;   None.
   342 ;;
   343 ;; Critical Paths under _isr in COMMON
   344 ;;
   345 ;;   _isr->_i2cIsrHandler
   346 ;;   _i2cIsrHandler->_i2cDataUpdate
   347 ;;
   348 ;; Critical Paths under _main in BANK0
   349 ;;
   350 ;;   _main->_CalcPulse
   351 ;;   _CalcPulse->___awdiv
   352 ;;   _Initialise->_i2cInit
   353 ;;   ___awdiv->___wmul
   354 ;;
   355 ;; Critical Paths under _isr in BANK0
   356 ;;
   357 ;;   None.
   358 ;;
   359 ;; Critical Paths under _main in BANK1
   360 ;;
   361 ;;   None.
   362 ;;
   363 ;; Critical Paths under _isr in BANK1
   364 ;;
   365 ;;   None.
   366 ;;
   367 ;; Critical Paths under _main in BANK3
   368 ;;
   369 ;;   None.
   370 ;;
   371 ;; Critical Paths under _isr in BANK3
   372 ;;
   373 ;;   None.
   374 ;;
   375 ;; Critical Paths under _main in BANK2
   376 ;;
   377 ;;   None.
   378 ;;
   379 ;; Critical Paths under _isr in BANK2
   380 ;;
   381 ;;   None.
   382                           
   383 ;;
   384 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   385 ;;
   386                           
   387 ;;
   388 ;;Call Graph Tables:
   389 ;;
   390 ;; ---------------------------------------------------------------------------------
   391 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   392 ;; ---------------------------------------------------------------------------------
   393 ;; (0) _main                                                 2     2      0     679
   394 ;;                         _Initialise
   395 ;;                          _CalcPulse
   396 ;;                              _delay
   397 ;; ---------------------------------------------------------------------------------
   398 ;; (1) _CalcPulse                                            4     2      2     600
   399 ;;                                             15 BANK0      4     2      2
   400 ;;                             ___wmul
   401 ;;                            ___awdiv
   402 ;;                           _SetPulse
   403 ;; ---------------------------------------------------------------------------------
   404 ;; (1) _Initialise                                           0     0      0      31
   405 ;;                           _BeginPWM
   406 ;;                            _i2cInit
   407 ;;                      _directionInit
   408 ;; ---------------------------------------------------------------------------------
   409 ;; (2) ___awdiv                                              9     5      4     300
   410 ;;                                              6 BANK0      9     5      4
   411 ;;                             ___wmul (ARG)
   412 ;; ---------------------------------------------------------------------------------
   413 ;; (2) ___wmul                                               6     2      4     136
   414 ;;                                              0 BANK0      6     2      4
   415 ;; ---------------------------------------------------------------------------------
   416 ;; (2) _SetPulse                                             4     2      2      99
   417 ;;                                              0 BANK0      4     2      2
   418 ;; ---------------------------------------------------------------------------------
   419 ;; (2) _directionInit                                        0     0      0       0
   420 ;; ---------------------------------------------------------------------------------
   421 ;; (2) _BeginPWM                                             0     0      0       0
   422 ;; ---------------------------------------------------------------------------------
   423 ;; (1) _delay                                                5     3      2      48
   424 ;;                                              0 BANK0      5     3      2
   425 ;; ---------------------------------------------------------------------------------
   426 ;; (2) _i2cInit                                              1     1      0      31
   427 ;;                                              0 BANK0      1     1      0
   428 ;; ---------------------------------------------------------------------------------
   429 ;; Estimated maximum stack depth 2
   430 ;; ---------------------------------------------------------------------------------
   431 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   432 ;; ---------------------------------------------------------------------------------
   433 ;; (3) _isr                                                  4     4      0       0
   434 ;;                                              3 COMMON     4     4      0
   435 ;;                      _i2cIsrHandler
   436 ;; ---------------------------------------------------------------------------------
   437 ;; (4) _i2cIsrHandler                                        1     1      0       0
   438 ;;                                              2 COMMON     1     1      0
   439 ;;                            _i2cSend
   440 ;;                      _i2cDataUpdate
   441 ;; ---------------------------------------------------------------------------------
   442 ;; (5) _i2cDataUpdate                                        2     2      0       0
   443 ;;                                              0 COMMON     2     2      0
   444 ;; ---------------------------------------------------------------------------------
   445 ;; (5) _i2cSend                                              0     0      0       0
   446 ;; ---------------------------------------------------------------------------------
   447 ;; Estimated maximum stack depth 5
   448 ;; ---------------------------------------------------------------------------------
   449                           
   450 ;; Call Graph Graphs:
   451                           
   452 ;; _main (ROOT)
   453 ;;   _Initialise
   454 ;;     _BeginPWM
   455 ;;     _i2cInit
   456 ;;     _directionInit
   457 ;;   _CalcPulse
   458 ;;     ___wmul
   459 ;;     ___awdiv
   460 ;;       ___wmul (ARG)
   461 ;;     _SetPulse
   462 ;;   _delay
   463 ;;
   464 ;; _isr (ROOT)
   465 ;;   _i2cIsrHandler
   466 ;;     _i2cSend
   467 ;;     _i2cDataUpdate
   468 ;;
   469                           
   470 ;; Address spaces:
   471                           
   472 ;;Name               Size   Autos  Total    Cost      Usage
   473 ;;BITCOMMON            E      0       0       0        0.0%
   474 ;;EEDATA             100      0       0       0        0.0%
   475 ;;NULL                 0      0       0       0        0.0%
   476 ;;CODE                 0      0       0       0        0.0%
   477 ;;COMMON               E      7       D       1       92.9%
   478 ;;BITSFR0              0      0       0       1        0.0%
   479 ;;SFR0                 0      0       0       1        0.0%
   480 ;;BITSFR1              0      0       0       2        0.0%
   481 ;;SFR1                 0      0       0       2        0.0%
   482 ;;STACK                0      0       8       2        0.0%
   483 ;;BITBANK0            50      0       0       3        0.0%
   484 ;;BANK0               50     13      17       4       28.8%
   485 ;;BITSFR3              0      0       0       4        0.0%
   486 ;;SFR3                 0      0       0       4        0.0%
   487 ;;BITBANK1            50      0       0       5        0.0%
   488 ;;BITSFR2              0      0       0       5        0.0%
   489 ;;SFR2                 0      0       0       5        0.0%
   490 ;;BANK1               50      0       0       6        0.0%
   491 ;;BITBANK3            60      0       0       7        0.0%
   492 ;;BANK3               60      0       0       8        0.0%
   493 ;;BANK2               50      0       0       9        0.0%
   494 ;;ABS                  0      0      24      10        0.0%
   495 ;;BITBANK2            50      0       0      11        0.0%
   496 ;;DATA                 0      0      2C      12        0.0%
   497                           
   498                           	global	_main
   499                           psect	maintext,global,class=CODE,delta=2
   500                           global __pmaintext
   501  0015                     __pmaintext:
   502                           
   503 ;; *************** function _main *****************
   504 ;; Defined at:
   505 ;;		line 38 in file "PWMmain.c"
   506 ;; Parameters:    Size  Location     Type
   507 ;;		None
   508 ;; Auto vars:     Size  Location     Type
   509 ;;  direction       2    0        int 
   510 ;; Return value:  Size  Location     Type
   511 ;;                  2  3048[COMMON] int 
   512 ;; Registers used:
   513 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   514 ;; Tracked objects:
   515 ;;		On entry : 17F/0
   516 ;;		On exit  : 0/0
   517 ;;		Unchanged: 0/0
   518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   519 ;;      Params:         0       0       0       0       0
   520 ;;      Locals:         0       0       0       0       0
   521 ;;      Temps:          0       0       0       0       0
   522 ;;      Totals:         0       0       0       0       0
   523 ;;Total ram usage:        0 bytes
   524 ;; Hardware stack levels required when called:    5
   525 ;; This function calls:
   526 ;;		_Initialise
   527 ;;		_CalcPulse
   528 ;;		_delay
   529 ;; This function is called by:
   530 ;;		Startup code after reset
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           psect	maintext
   534                           	file	"PWMmain.c"
   535                           	line	38
   536                           	global	__size_of_main
   537  0098                     	__size_of_main	equ	__end_of_main-_main
   538                           	
   539  0015                     _main:	
   540                           	opt	stack 3
   541                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   542                           	line	41
   543                           	
   544  0015                     l7689:	
   545                           ;PWMmain.c: 40: int direction;
   546                           ;PWMmain.c: 41: Initialise();
   547  0015  120A  118A  2295   	fcall	_Initialise
              120A  118A         
   548                           	line	42
   549                           	
   550  001A                     l7691:	
   551                           ;PWMmain.c: 42: OPTION_REG = 0b10100000;
   552  001A  30A0               	movlw	(0A0h)
   553  001B  1683               	bsf	status, 5	;RP0=1, select bank1
   554  001C  1303               	bcf	status, 6	;RP1=0, select bank1
   555  001D  0081               	movwf	(129)^080h	;volatile
   556                           	line	43
   557                           	
   558  001E                     l7693:	
   559                           ;PWMmain.c: 43: TRISA = 0x0000;
   560  001E  0185               	clrf	(133)^080h	;volatile
   561                           	line	44
   562                           	
   563  001F                     l7695:	
   564                           ;PWMmain.c: 44: TRISD = 0;
   565  001F  0188               	clrf	(136)^080h	;volatile
   566                           	line	45
   567                           	
   568  0020                     l7697:	
   569                           ;PWMmain.c: 45: TMR0 = 0;
   570  0020  1283               	bcf	status, 5	;RP0=0, select bank0
   571  0021  1303               	bcf	status, 6	;RP1=0, select bank0
   572  0022  0181               	clrf	(1)	;volatile
   573  0023  2824               	goto	l7699
   574                           	line	47
   575                           ;PWMmain.c: 47: while(1)
   576                           	
   577  0024                     l3049:	
   578                           	line	54
   579                           	
   580  0024                     l7699:	
   581                           ;PWMmain.c: 48: {
   582                           ;PWMmain.c: 54: PORTD = 0xFF;
   583  0024  30FF               	movlw	(0FFh)
   584  0025  0088               	movwf	(8)	;volatile
   585                           	line	55
   586                           	
   587  0026                     l7701:	
   588                           ;PWMmain.c: 55: for(dc = 0 ; dc <= 10 ; dc++)
   589  0026  01B3               	clrf	(_dc)
   590  0027  01B4               	clrf	(_dc+1)
   591                           	
   592  0028                     l7703:	
   593  0028  0834               	movf	(_dc+1),w
   594  0029  3A80               	xorlw	80h
   595  002A  00FF               	movwf	btemp+1
   596  002B  3080               	movlw	(high(0Bh))^80h
   597  002C  027F               	subwf	btemp+1,w
   598  002D  1D03               	skipz
   599  002E  2831               	goto	u2695
   600  002F  300B               	movlw	low(0Bh)
   601  0030  0233               	subwf	(_dc),w
   602  0031                     u2695:
   603                           
   604  0031  1C03               	skipc
   605  0032  2834               	goto	u2691
   606  0033  2835               	goto	u2690
   607  0034                     u2691:
   608  0034  2837               	goto	l7707
   609  0035                     u2690:
   610  0035  2865               	goto	l7713
   611                           	
   612  0036                     l7705:	
   613  0036  2865               	goto	l7713
   614                           	line	56
   615                           	
   616  0037                     l3050:	
   617                           	line	57
   618                           	
   619  0037                     l7707:	
   620                           ;PWMmain.c: 56: {
   621                           ;PWMmain.c: 57: CalcPulse(dc);
   622  0037  1283               	bcf	status, 5	;RP0=0, select bank0
   623  0038  1303               	bcf	status, 6	;RP1=0, select bank0
   624  0039  0834               	movf	(_dc+1),w
   625  003A  01B0               	clrf	(?_CalcPulse+1)
   626  003B  07B0               	addwf	(?_CalcPulse+1)
   627  003C  0833               	movf	(_dc),w
   628  003D  01AF               	clrf	(?_CalcPulse)
   629  003E  07AF               	addwf	(?_CalcPulse)
   630                           
   631  003F  120A  118A  218F   	fcall	_CalcPulse
              120A  118A         
   632                           	line	58
   633                           	
   634  0044                     l7709:	
   635                           ;PWMmain.c: 58: delay(6000) ;
   636  0044  3070               	movlw	low(01770h)
   637  0045  1283               	bcf	status, 5	;RP0=0, select bank0
   638  0046  1303               	bcf	status, 6	;RP1=0, select bank0
   639  0047  00A0               	movwf	(?_delay)
   640  0048  3017               	movlw	high(01770h)
   641  0049  00A1               	movwf	((?_delay))+1
   642  004A  120A  118A  21F1   	fcall	_delay
              120A  118A         
   643                           	line	55
   644                           	
   645  004F                     l7711:	
   646  004F  3001               	movlw	low(01h)
   647  0050  1283               	bcf	status, 5	;RP0=0, select bank0
   648  0051  1303               	bcf	status, 6	;RP1=0, select bank0
   649  0052  07B3               	addwf	(_dc),f
   650  0053  1803               	skipnc
   651  0054  0AB4               	incf	(_dc+1),f
   652  0055  3000               	movlw	high(01h)
   653  0056  07B4               	addwf	(_dc+1),f
   654  0057  0834               	movf	(_dc+1),w
   655  0058  3A80               	xorlw	80h
   656  0059  00FF               	movwf	btemp+1
   657  005A  3080               	movlw	(high(0Bh))^80h
   658  005B  027F               	subwf	btemp+1,w
   659  005C  1D03               	skipz
   660  005D  2860               	goto	u2705
   661  005E  300B               	movlw	low(0Bh)
   662  005F  0233               	subwf	(_dc),w
   663  0060                     u2705:
   664                           
   665  0060  1C03               	skipc
   666  0061  2863               	goto	u2701
   667  0062  2864               	goto	u2700
   668  0063                     u2701:
   669  0063  2837               	goto	l7707
   670  0064                     u2700:
   671  0064  2865               	goto	l7713
   672                           	
   673  0065                     l3051:	
   674                           	line	60
   675                           	
   676  0065                     l7713:	
   677                           ;PWMmain.c: 59: }
   678                           ;PWMmain.c: 60: PORTD = 0x00;
   679  0065  1283               	bcf	status, 5	;RP0=0, select bank0
   680  0066  1303               	bcf	status, 6	;RP1=0, select bank0
   681  0067  0188               	clrf	(8)	;volatile
   682                           	line	61
   683                           	
   684  0068                     l7715:	
   685                           ;PWMmain.c: 61: for(dc = 10; dc >= 0 ; dc--)
   686  0068  300A               	movlw	low(0Ah)
   687  0069  00B3               	movwf	(_dc)
   688  006A  3000               	movlw	high(0Ah)
   689  006B  00B4               	movwf	((_dc))+1
   690                           	
   691  006C                     l7717:	
   692  006C  1FB4               	btfss	(_dc+1),7
   693  006D  286F               	goto	u2711
   694  006E  2870               	goto	u2710
   695  006F                     u2711:
   696  006F  2872               	goto	l7721
   697  0070                     u2710:
   698  0070  2895               	goto	l7729
   699                           	
   700  0071                     l7719:	
   701  0071  2895               	goto	l7729
   702                           	line	62
   703                           	
   704  0072                     l3052:	
   705                           	line	63
   706                           	
   707  0072                     l7721:	
   708                           ;PWMmain.c: 62: {
   709                           ;PWMmain.c: 63: CalcPulse(dc);
   710  0072  0834               	movf	(_dc+1),w
   711  0073  01B0               	clrf	(?_CalcPulse+1)
   712  0074  07B0               	addwf	(?_CalcPulse+1)
   713  0075  0833               	movf	(_dc),w
   714  0076  01AF               	clrf	(?_CalcPulse)
   715  0077  07AF               	addwf	(?_CalcPulse)
   716                           
   717  0078  120A  118A  218F   	fcall	_CalcPulse
              120A  118A         
   718                           	line	64
   719                           	
   720  007D                     l7723:	
   721                           ;PWMmain.c: 64: delay(6000) ;
   722  007D  3070               	movlw	low(01770h)
   723  007E  1283               	bcf	status, 5	;RP0=0, select bank0
   724  007F  1303               	bcf	status, 6	;RP1=0, select bank0
   725  0080  00A0               	movwf	(?_delay)
   726  0081  3017               	movlw	high(01770h)
   727  0082  00A1               	movwf	((?_delay))+1
   728  0083  120A  118A  21F1   	fcall	_delay
              120A  118A         
   729                           	line	61
   730                           	
   731  0088                     l7725:	
   732  0088  30FF               	movlw	low(-1)
   733  0089  1283               	bcf	status, 5	;RP0=0, select bank0
   734  008A  1303               	bcf	status, 6	;RP1=0, select bank0
   735  008B  07B3               	addwf	(_dc),f
   736  008C  1803               	skipnc
   737  008D  0AB4               	incf	(_dc+1),f
   738  008E  30FF               	movlw	high(-1)
   739  008F  07B4               	addwf	(_dc+1),f
   740                           	
   741  0090                     l7727:	
   742  0090  1FB4               	btfss	(_dc+1),7
   743  0091  2893               	goto	u2721
   744  0092  2894               	goto	u2720
   745  0093                     u2721:
   746  0093  2872               	goto	l7721
   747  0094                     u2720:
   748  0094  2895               	goto	l7729
   749                           	
   750  0095                     l3053:	
   751                           	line	66
   752                           	
   753  0095                     l7729:	
   754                           ;PWMmain.c: 65: }
   755                           ;PWMmain.c: 66: delay(6000);
   756  0095  3070               	movlw	low(01770h)
   757  0096  00A0               	movwf	(?_delay)
   758  0097  3017               	movlw	high(01770h)
   759  0098  00A1               	movwf	((?_delay))+1
   760  0099  120A  118A  21F1   	fcall	_delay
              120A  118A         
   761                           	line	68
   762                           	
   763  009E                     l7731:	
   764                           ;PWMmain.c: 68: if (PORTBbits.RB3 == 0)
   765  009E  1283               	bcf	status, 5	;RP0=0, select bank0
   766  009F  1303               	bcf	status, 6	;RP1=0, select bank0
   767  00A0  1986               	btfsc	(6),3	;volatile
   768  00A1  28A3               	goto	u2731
   769  00A2  28A4               	goto	u2730
   770  00A3                     u2731:
   771  00A3  28A6               	goto	l3054
   772  00A4                     u2730:
   773                           	line	69
   774                           	
   775  00A4                     l7733:	
   776                           ;PWMmain.c: 69: PORTBbits.RB3 = 1;
   777  00A4  1586               	bsf	(6),3	;volatile
   778  00A5  2824               	goto	l7699
   779                           	line	70
   780                           	
   781  00A6                     l3054:	
   782                           	line	71
   783                           ;PWMmain.c: 70: else
   784                           ;PWMmain.c: 71: PORTBbits.RB3 = 0;
   785  00A6  1186               	bcf	(6),3	;volatile
   786  00A7  2824               	goto	l7699
   787                           	
   788  00A8                     l3055:	
   789  00A8  2824               	goto	l7699
   790                           	line	73
   791                           	
   792  00A9                     l3056:	
   793                           	line	47
   794  00A9  2824               	goto	l7699
   795                           	
   796  00AA                     l3057:	
   797                           	line	85
   798                           ;PWMmain.c: 73: }
   799                           ;PWMmain.c: 84: return 1;
   800                           ;	Return value of _main is never used
   801                           	
   802  00AA                     l3058:	
   803                           	global	start
   804  00AA  120A  118A  2812   	ljmp	start
   805                           	opt stack 0
   806                           GLOBAL	__end_of_main
   807  00AD                     	__end_of_main:
   808 ;; =============== function _main ends ============
   809                           
   810                           	signat	_main,90
   811                           	global	_CalcPulse
   812                           psect	text494,local,class=CODE,delta=2
   813                           global __ptext494
   814  018F                     __ptext494:
   815                           
   816 ;; *************** function _CalcPulse *****************
   817 ;; Defined at:
   818 ;;		line 114 in file "PWMmain.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  speed           2   15[BANK0 ] int 
   821 ;; Auto vars:     Size  Location     Type
   822 ;;  pulse           2   17[BANK0 ] int 
   823 ;; Return value:  Size  Location     Type
   824 ;;		None               void
   825 ;; Registers used:
   826 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   827 ;; Tracked objects:
   828 ;;		On entry : 0/0
   829 ;;		On exit  : 0/0
   830 ;;		Unchanged: 0/0
   831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   832 ;;      Params:         0       2       0       0       0
   833 ;;      Locals:         0       2       0       0       0
   834 ;;      Temps:          0       0       0       0       0
   835 ;;      Totals:         0       4       0       0       0
   836 ;;Total ram usage:        4 bytes
   837 ;; Hardware stack levels used:    1
   838 ;; Hardware stack levels required when called:    4
   839 ;; This function calls:
   840 ;;		___wmul
   841 ;;		___awdiv
   842 ;;		_SetPulse
   843 ;; This function is called by:
   844 ;;		_main
   845 ;; This function uses a non-reentrant model
   846 ;;
   847                           psect	text494
   848                           	file	"PWMmain.c"
   849                           	line	114
   850                           	global	__size_of_CalcPulse
   851  0036                     	__size_of_CalcPulse	equ	__end_of_CalcPulse-_CalcPulse
   852                           	
   853  018F                     _CalcPulse:	
   854                           	opt	stack 3
   855                           ; Regs used in _CalcPulse: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   856                           	line	115
   857                           	
   858  018F                     l7685:	
   859                           ;PWMmain.c: 115: int pulse = speed*255/10;
   860  018F  300A               	movlw	low(0Ah)
   861  0190  1283               	bcf	status, 5	;RP0=0, select bank0
   862  0191  1303               	bcf	status, 6	;RP1=0, select bank0
   863  0192  00A6               	movwf	(?___awdiv)
   864  0193  3000               	movlw	high(0Ah)
   865  0194  00A7               	movwf	((?___awdiv))+1
   866  0195  0830               	movf	(CalcPulse@speed+1),w
   867  0196  01A1               	clrf	(?___wmul+1)
   868  0197  07A1               	addwf	(?___wmul+1)
   869  0198  082F               	movf	(CalcPulse@speed),w
   870  0199  01A0               	clrf	(?___wmul)
   871  019A  07A0               	addwf	(?___wmul)
   872                           
   873  019B  30FF               	movlw	low(0FFh)
   874  019C  00A2               	movwf	0+(?___wmul)+02h
   875  019D  3000               	movlw	high(0FFh)
   876  019E  00A3               	movwf	(0+(?___wmul)+02h)+1
   877  019F  120A  118A  21C5   	fcall	___wmul
              120A  118A         
   878  01A4  1283               	bcf	status, 5	;RP0=0, select bank0
   879  01A5  1303               	bcf	status, 6	;RP1=0, select bank0
   880  01A6  0821               	movf	(1+(?___wmul)),w
   881  01A7  01A9               	clrf	1+(?___awdiv)+02h
   882  01A8  07A9               	addwf	1+(?___awdiv)+02h
   883  01A9  0820               	movf	(0+(?___wmul)),w
   884  01AA  01A8               	clrf	0+(?___awdiv)+02h
   885  01AB  07A8               	addwf	0+(?___awdiv)+02h
   886                           
   887  01AC  120A  118A  20AD   	fcall	___awdiv
              120A  118A         
   888  01B1  1283               	bcf	status, 5	;RP0=0, select bank0
   889  01B2  1303               	bcf	status, 6	;RP1=0, select bank0
   890  01B3  0827               	movf	(1+(?___awdiv)),w
   891  01B4  01B2               	clrf	(CalcPulse@pulse+1)
   892  01B5  07B2               	addwf	(CalcPulse@pulse+1)
   893  01B6  0826               	movf	(0+(?___awdiv)),w
   894  01B7  01B1               	clrf	(CalcPulse@pulse)
   895  01B8  07B1               	addwf	(CalcPulse@pulse)
   896                           
   897                           	line	116
   898                           	
   899  01B9                     l7687:	
   900                           ;PWMmain.c: 116: SetPulse(pulse);
   901  01B9  0832               	movf	(CalcPulse@pulse+1),w
   902  01BA  01A1               	clrf	(?_SetPulse+1)
   903  01BB  07A1               	addwf	(?_SetPulse+1)
   904  01BC  0831               	movf	(CalcPulse@pulse),w
   905  01BD  01A0               	clrf	(?_SetPulse)
   906  01BE  07A0               	addwf	(?_SetPulse)
   907                           
   908  01BF  120A  118A  223D   	fcall	_SetPulse
              120A  118A         
   909                           	line	117
   910                           	
   911  01C4                     l3070:	
   912  01C4  0008               	return
   913                           	opt stack 0
   914                           GLOBAL	__end_of_CalcPulse
   915  01C5                     	__end_of_CalcPulse:
   916 ;; =============== function _CalcPulse ends ============
   917                           
   918                           	signat	_CalcPulse,4216
   919                           	global	_Initialise
   920                           psect	text495,local,class=CODE,delta=2
   921                           global __ptext495
   922  0295                     __ptext495:
   923                           
   924 ;; *************** function _Initialise *****************
   925 ;; Defined at:
   926 ;;		line 101 in file "PWMmain.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;		None
   929 ;; Auto vars:     Size  Location     Type
   930 ;;		None
   931 ;; Return value:  Size  Location     Type
   932 ;;		None               void
   933 ;; Registers used:
   934 ;;		wreg, status,2, status,0, pclath, cstack
   935 ;; Tracked objects:
   936 ;;		On entry : 0/0
   937 ;;		On exit  : 0/0
   938 ;;		Unchanged: 0/0
   939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   940 ;;      Params:         0       0       0       0       0
   941 ;;      Locals:         0       0       0       0       0
   942 ;;      Temps:          0       0       0       0       0
   943 ;;      Totals:         0       0       0       0       0
   944 ;;Total ram usage:        0 bytes
   945 ;; Hardware stack levels used:    1
   946 ;; Hardware stack levels required when called:    4
   947 ;; This function calls:
   948 ;;		_BeginPWM
   949 ;;		_i2cInit
   950 ;;		_directionInit
   951 ;; This function is called by:
   952 ;;		_main
   953 ;; This function uses a non-reentrant model
   954 ;;
   955                           psect	text495
   956                           	file	"PWMmain.c"
   957                           	line	101
   958                           	global	__size_of_Initialise
   959  0017                     	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   960                           	
   961  0295                     _Initialise:	
   962                           	opt	stack 3
   963                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   964                           	line	102
   965                           	
   966  0295                     l7677:	
   967                           ;PWMmain.c: 102: BeginPWM();
   968  0295  120A  118A  225D   	fcall	_BeginPWM
              120A  118A         
   969                           	line	103
   970                           ;PWMmain.c: 103: i2cInit(0x10);
   971  029A  3010               	movlw	(010h)
   972  029B  120A  118A  221A   	fcall	_i2cInit
              120A  118A         
   973                           	line	104
   974                           	
   975  02A0                     l7679:	
   976                           ;PWMmain.c: 104: directionInit();
   977  02A0  120A  118A  22CC   	fcall	_directionInit
              120A  118A         
   978                           	line	106
   979                           	
   980  02A5                     l7681:	
   981                           ;PWMmain.c: 106: TRISD = 0;
   982  02A5  1683               	bsf	status, 5	;RP0=1, select bank1
   983  02A6  1303               	bcf	status, 6	;RP1=0, select bank1
   984  02A7  0188               	clrf	(136)^080h	;volatile
   985                           	line	107
   986                           	
   987  02A8                     l7683:	
   988                           ;PWMmain.c: 107: PORTD = 0;
   989  02A8  1283               	bcf	status, 5	;RP0=0, select bank0
   990  02A9  1303               	bcf	status, 6	;RP1=0, select bank0
   991  02AA  0188               	clrf	(8)	;volatile
   992                           	line	108
   993                           	
   994  02AB                     l3067:	
   995  02AB  0008               	return
   996                           	opt stack 0
   997                           GLOBAL	__end_of_Initialise
   998  02AC                     	__end_of_Initialise:
   999 ;; =============== function _Initialise ends ============
  1000                           
  1001                           	signat	_Initialise,88
  1002                           	global	___awdiv
  1003                           psect	text496,local,class=CODE,delta=2
  1004                           global __ptext496
  1005  00AD                     __ptext496:
  1006                           
  1007 ;; *************** function ___awdiv *****************
  1008 ;; Defined at:
  1009 ;;		line 5 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  1010 ;; Parameters:    Size  Location     Type
  1011 ;;  divisor         2    6[BANK0 ] int 
  1012 ;;  dividend        2    8[BANK0 ] int 
  1013 ;; Auto vars:     Size  Location     Type
  1014 ;;  quotient        2   13[BANK0 ] int 
  1015 ;;  sign            1   12[BANK0 ] unsigned char 
  1016 ;;  counter         1   11[BANK0 ] unsigned char 
  1017 ;; Return value:  Size  Location     Type
  1018 ;;                  2    6[BANK0 ] int 
  1019 ;; Registers used:
  1020 ;;		wreg, status,2, status,0
  1021 ;; Tracked objects:
  1022 ;;		On entry : 0/0
  1023 ;;		On exit  : 0/0
  1024 ;;		Unchanged: 0/0
  1025 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1026 ;;      Params:         0       4       0       0       0
  1027 ;;      Locals:         0       4       0       0       0
  1028 ;;      Temps:          0       1       0       0       0
  1029 ;;      Totals:         0       9       0       0       0
  1030 ;;Total ram usage:        9 bytes
  1031 ;; Hardware stack levels used:    1
  1032 ;; Hardware stack levels required when called:    3
  1033 ;; This function calls:
  1034 ;;		Nothing
  1035 ;; This function is called by:
  1036 ;;		_CalcPulse
  1037 ;; This function uses a non-reentrant model
  1038 ;;
  1039                           psect	text496
  1040                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\awdiv.c"
  1041                           	line	5
  1042                           	global	__size_of___awdiv
  1043  0076                     	__size_of___awdiv	equ	__end_of___awdiv-___awdiv
  1044                           	
  1045  00AD                     ___awdiv:	
  1046                           	opt	stack 3
  1047                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  1048                           	line	9
  1049                           	
  1050  00AD                     l7525:	
  1051  00AD  1283               	bcf	status, 5	;RP0=0, select bank0
  1052  00AE  1303               	bcf	status, 6	;RP1=0, select bank0
  1053  00AF  01AC               	clrf	(___awdiv@sign)
  1054                           	line	10
  1055  00B0  1FA7               	btfss	(___awdiv@divisor+1),7
  1056  00B1  28B3               	goto	u2481
  1057  00B2  28B4               	goto	u2480
  1058  00B3                     u2481:
  1059  00B3  28BD               	goto	l7529
  1060  00B4                     u2480:
  1061                           	line	11
  1062                           	
  1063  00B4                     l7527:	
  1064  00B4  09A6               	comf	(___awdiv@divisor),f
  1065  00B5  09A7               	comf	(___awdiv@divisor+1),f
  1066  00B6  0AA6               	incf	(___awdiv@divisor),f
  1067  00B7  1903               	skipnz
  1068  00B8  0AA7               	incf	(___awdiv@divisor+1),f
  1069                           	line	12
  1070  00B9  01AC               	clrf	(___awdiv@sign)
  1071  00BA  1403               	bsf	status,0
  1072  00BB  0DAC               	rlf	(___awdiv@sign),f
  1073  00BC  28BD               	goto	l7529
  1074                           	line	13
  1075                           	
  1076  00BD                     l6171:	
  1077                           	line	14
  1078                           	
  1079  00BD                     l7529:	
  1080  00BD  1FA9               	btfss	(___awdiv@dividend+1),7
  1081  00BE  28C0               	goto	u2491
  1082  00BF  28C1               	goto	u2490
  1083  00C0                     u2491:
  1084  00C0  28CB               	goto	l7535
  1085  00C1                     u2490:
  1086                           	line	15
  1087                           	
  1088  00C1                     l7531:	
  1089  00C1  09A8               	comf	(___awdiv@dividend),f
  1090  00C2  09A9               	comf	(___awdiv@dividend+1),f
  1091  00C3  0AA8               	incf	(___awdiv@dividend),f
  1092  00C4  1903               	skipnz
  1093  00C5  0AA9               	incf	(___awdiv@dividend+1),f
  1094                           	line	16
  1095                           	
  1096  00C6                     l7533:	
  1097  00C6  3001               	movlw	(01h)
  1098  00C7  00AA               	movwf	(??___awdiv+0)+0
  1099  00C8  082A               	movf	(??___awdiv+0)+0,w
  1100  00C9  06AC               	xorwf	(___awdiv@sign),f
  1101  00CA  28CB               	goto	l7535
  1102                           	line	17
  1103                           	
  1104  00CB                     l6172:	
  1105                           	line	18
  1106                           	
  1107  00CB                     l7535:	
  1108  00CB  01AD               	clrf	(___awdiv@quotient)
  1109  00CC  01AE               	clrf	(___awdiv@quotient+1)
  1110                           	line	19
  1111                           	
  1112  00CD                     l7537:	
  1113  00CD  0827               	movf	(___awdiv@divisor+1),w
  1114  00CE  0426               	iorwf	(___awdiv@divisor),w
  1115  00CF  1903               	skipnz
  1116  00D0  28D2               	goto	u2501
  1117  00D1  28D3               	goto	u2500
  1118  00D2                     u2501:
  1119  00D2  2911               	goto	l7557
  1120  00D3                     u2500:
  1121                           	line	20
  1122                           	
  1123  00D3                     l7539:	
  1124  00D3  01AB               	clrf	(___awdiv@counter)
  1125  00D4  1403               	bsf	status,0
  1126  00D5  0DAB               	rlf	(___awdiv@counter),f
  1127                           	line	21
  1128  00D6  28E3               	goto	l7545
  1129                           	
  1130  00D7                     l6175:	
  1131                           	line	22
  1132                           	
  1133  00D7                     l7541:	
  1134  00D7  3001               	movlw	01h
  1135                           	
  1136  00D8                     u2515:
  1137  00D8  1003               	clrc
  1138  00D9  0DA6               	rlf	(___awdiv@divisor),f
  1139  00DA  0DA7               	rlf	(___awdiv@divisor+1),f
  1140  00DB  3EFF               	addlw	-1
  1141  00DC  1D03               	skipz
  1142  00DD  28D8               	goto	u2515
  1143                           	line	23
  1144                           	
  1145  00DE                     l7543:	
  1146  00DE  3001               	movlw	(01h)
  1147  00DF  00AA               	movwf	(??___awdiv+0)+0
  1148  00E0  082A               	movf	(??___awdiv+0)+0,w
  1149  00E1  07AB               	addwf	(___awdiv@counter),f
  1150  00E2  28E3               	goto	l7545
  1151                           	line	24
  1152                           	
  1153  00E3                     l6174:	
  1154                           	line	21
  1155                           	
  1156  00E3                     l7545:	
  1157  00E3  1FA7               	btfss	(___awdiv@divisor+1),(15)&7
  1158  00E4  28E6               	goto	u2521
  1159  00E5  28E7               	goto	u2520
  1160  00E6                     u2521:
  1161  00E6  28D7               	goto	l7541
  1162  00E7                     u2520:
  1163  00E7  28E9               	goto	l7547
  1164                           	
  1165  00E8                     l6176:	
  1166  00E8  28E9               	goto	l7547
  1167                           	line	25
  1168                           	
  1169  00E9                     l6177:	
  1170                           	line	26
  1171                           	
  1172  00E9                     l7547:	
  1173  00E9  3001               	movlw	01h
  1174                           	
  1175  00EA                     u2535:
  1176  00EA  1003               	clrc
  1177  00EB  0DAD               	rlf	(___awdiv@quotient),f
  1178  00EC  0DAE               	rlf	(___awdiv@quotient+1),f
  1179  00ED  3EFF               	addlw	-1
  1180  00EE  1D03               	skipz
  1181  00EF  28EA               	goto	u2535
  1182                           	line	27
  1183  00F0  0827               	movf	(___awdiv@divisor+1),w
  1184  00F1  0229               	subwf	(___awdiv@dividend+1),w
  1185  00F2  1D03               	skipz
  1186  00F3  28F6               	goto	u2545
  1187  00F4  0826               	movf	(___awdiv@divisor),w
  1188  00F5  0228               	subwf	(___awdiv@dividend),w
  1189  00F6                     u2545:
  1190  00F6  1C03               	skipc
  1191  00F7  28F9               	goto	u2541
  1192  00F8  28FA               	goto	u2540
  1193  00F9                     u2541:
  1194  00F9  2902               	goto	l7553
  1195  00FA                     u2540:
  1196                           	line	28
  1197                           	
  1198  00FA                     l7549:	
  1199  00FA  0826               	movf	(___awdiv@divisor),w
  1200  00FB  02A8               	subwf	(___awdiv@dividend),f
  1201  00FC  0827               	movf	(___awdiv@divisor+1),w
  1202  00FD  1C03               	skipc
  1203  00FE  03A9               	decf	(___awdiv@dividend+1),f
  1204  00FF  02A9               	subwf	(___awdiv@dividend+1),f
  1205                           	line	29
  1206                           	
  1207  0100                     l7551:	
  1208  0100  142D               	bsf	(___awdiv@quotient)+(0/8),(0)&7
  1209  0101  2902               	goto	l7553
  1210                           	line	30
  1211                           	
  1212  0102                     l6178:	
  1213                           	line	31
  1214                           	
  1215  0102                     l7553:	
  1216  0102  3001               	movlw	01h
  1217                           	
  1218  0103                     u2555:
  1219  0103  1003               	clrc
  1220  0104  0CA7               	rrf	(___awdiv@divisor+1),f
  1221  0105  0CA6               	rrf	(___awdiv@divisor),f
  1222  0106  3EFF               	addlw	-1
  1223  0107  1D03               	skipz
  1224  0108  2903               	goto	u2555
  1225                           	line	32
  1226                           	
  1227  0109                     l7555:	
  1228  0109  3001               	movlw	low(01h)
  1229  010A  02AB               	subwf	(___awdiv@counter),f
  1230  010B  1D03               	btfss	status,2
  1231  010C  290E               	goto	u2561
  1232  010D  290F               	goto	u2560
  1233  010E                     u2561:
  1234  010E  28E9               	goto	l7547
  1235  010F                     u2560:
  1236  010F  2911               	goto	l7557
  1237                           	
  1238  0110                     l6179:	
  1239  0110  2911               	goto	l7557
  1240                           	line	33
  1241                           	
  1242  0111                     l6173:	
  1243                           	line	34
  1244                           	
  1245  0111                     l7557:	
  1246  0111  082C               	movf	(___awdiv@sign),w
  1247  0112  1D03               	skipz
  1248  0113  2915               	goto	u2570
  1249  0114  291B               	goto	l7561
  1250  0115                     u2570:
  1251                           	line	35
  1252                           	
  1253  0115                     l7559:	
  1254  0115  09AD               	comf	(___awdiv@quotient),f
  1255  0116  09AE               	comf	(___awdiv@quotient+1),f
  1256  0117  0AAD               	incf	(___awdiv@quotient),f
  1257  0118  1903               	skipnz
  1258  0119  0AAE               	incf	(___awdiv@quotient+1),f
  1259  011A  291B               	goto	l7561
  1260                           	
  1261  011B                     l6180:	
  1262                           	line	36
  1263                           	
  1264  011B                     l7561:	
  1265  011B  082E               	movf	(___awdiv@quotient+1),w
  1266  011C  01A7               	clrf	(?___awdiv+1)
  1267  011D  07A7               	addwf	(?___awdiv+1)
  1268  011E  082D               	movf	(___awdiv@quotient),w
  1269  011F  01A6               	clrf	(?___awdiv)
  1270  0120  07A6               	addwf	(?___awdiv)
  1271                           
  1272  0121  2922               	goto	l6181
  1273                           	
  1274  0122                     l7563:	
  1275                           	line	37
  1276                           	
  1277  0122                     l6181:	
  1278  0122  0008               	return
  1279                           	opt stack 0
  1280                           GLOBAL	__end_of___awdiv
  1281  0123                     	__end_of___awdiv:
  1282 ;; =============== function ___awdiv ends ============
  1283                           
  1284                           	signat	___awdiv,8314
  1285                           	global	___wmul
  1286                           psect	text497,local,class=CODE,delta=2
  1287                           global __ptext497
  1288  01C5                     __ptext497:
  1289                           
  1290 ;; *************** function ___wmul *****************
  1291 ;; Defined at:
  1292 ;;		line 3 in file "C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  1293 ;; Parameters:    Size  Location     Type
  1294 ;;  multiplier      2    0[BANK0 ] unsigned int 
  1295 ;;  multiplicand    2    2[BANK0 ] unsigned int 
  1296 ;; Auto vars:     Size  Location     Type
  1297 ;;  product         2    4[BANK0 ] unsigned int 
  1298 ;; Return value:  Size  Location     Type
  1299 ;;                  2    0[BANK0 ] unsigned int 
  1300 ;; Registers used:
  1301 ;;		wreg, status,2, status,0
  1302 ;; Tracked objects:
  1303 ;;		On entry : 0/0
  1304 ;;		On exit  : 0/0
  1305 ;;		Unchanged: 0/0
  1306 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1307 ;;      Params:         0       4       0       0       0
  1308 ;;      Locals:         0       2       0       0       0
  1309 ;;      Temps:          0       0       0       0       0
  1310 ;;      Totals:         0       6       0       0       0
  1311 ;;Total ram usage:        6 bytes
  1312 ;; Hardware stack levels used:    1
  1313 ;; Hardware stack levels required when called:    3
  1314 ;; This function calls:
  1315 ;;		Nothing
  1316 ;; This function is called by:
  1317 ;;		_CalcPulse
  1318 ;; This function uses a non-reentrant model
  1319 ;;
  1320                           psect	text497
  1321                           	file	"C:\Program Files (x86)\HI-TECH Software\PICC\9.83\sources\wmul.c"
  1322                           	line	3
  1323                           	global	__size_of___wmul
  1324  002C                     	__size_of___wmul	equ	__end_of___wmul-___wmul
  1325                           	
  1326  01C5                     ___wmul:	
  1327                           	opt	stack 3
  1328                           ; Regs used in ___wmul: [wreg+status,2+status,0]
  1329                           	line	4
  1330                           	
  1331  01C5                     l7665:	
  1332  01C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1333  01C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1334  01C7  01A4               	clrf	(___wmul@product)
  1335  01C8  01A5               	clrf	(___wmul@product+1)
  1336  01C9  29CA               	goto	l7667
  1337                           	line	6
  1338                           	
  1339  01CA                     l6031:	
  1340                           	line	7
  1341                           	
  1342  01CA                     l7667:	
  1343  01CA  1C20               	btfss	(___wmul@multiplier),(0)&7
  1344  01CB  29CD               	goto	u2651
  1345  01CC  29CE               	goto	u2650
  1346  01CD                     u2651:
  1347  01CD  29D4               	goto	l6032
  1348  01CE                     u2650:
  1349                           	line	8
  1350                           	
  1351  01CE                     l7669:	
  1352  01CE  0822               	movf	(___wmul@multiplicand),w
  1353  01CF  07A4               	addwf	(___wmul@product),f
  1354  01D0  1803               	skipnc
  1355  01D1  0AA5               	incf	(___wmul@product+1),f
  1356  01D2  0823               	movf	(___wmul@multiplicand+1),w
  1357  01D3  07A5               	addwf	(___wmul@product+1),f
  1358                           	
  1359  01D4                     l6032:	
  1360                           	line	9
  1361  01D4  3001               	movlw	01h
  1362                           	
  1363  01D5                     u2665:
  1364  01D5  1003               	clrc
  1365  01D6  0DA2               	rlf	(___wmul@multiplicand),f
  1366  01D7  0DA3               	rlf	(___wmul@multiplicand+1),f
  1367  01D8  3EFF               	addlw	-1
  1368  01D9  1D03               	skipz
  1369  01DA  29D5               	goto	u2665
  1370                           	line	10
  1371                           	
  1372  01DB                     l7671:	
  1373  01DB  3001               	movlw	01h
  1374                           	
  1375  01DC                     u2675:
  1376  01DC  1003               	clrc
  1377  01DD  0CA1               	rrf	(___wmul@multiplier+1),f
  1378  01DE  0CA0               	rrf	(___wmul@multiplier),f
  1379  01DF  3EFF               	addlw	-1
  1380  01E0  1D03               	skipz
  1381  01E1  29DC               	goto	u2675
  1382                           	line	11
  1383  01E2  0821               	movf	((___wmul@multiplier+1)),w
  1384  01E3  0420               	iorwf	((___wmul@multiplier)),w
  1385  01E4  1D03               	skipz
  1386  01E5  29E7               	goto	u2681
  1387  01E6  29E8               	goto	u2680
  1388  01E7                     u2681:
  1389  01E7  29CA               	goto	l7667
  1390  01E8                     u2680:
  1391  01E8  29E9               	goto	l7673
  1392                           	
  1393  01E9                     l6033:	
  1394                           	line	12
  1395                           	
  1396  01E9                     l7673:	
  1397  01E9  0825               	movf	(___wmul@product+1),w
  1398  01EA  01A1               	clrf	(?___wmul+1)
  1399  01EB  07A1               	addwf	(?___wmul+1)
  1400  01EC  0824               	movf	(___wmul@product),w
  1401  01ED  01A0               	clrf	(?___wmul)
  1402  01EE  07A0               	addwf	(?___wmul)
  1403                           
  1404  01EF  29F0               	goto	l6034
  1405                           	
  1406  01F0                     l7675:	
  1407                           	line	13
  1408                           	
  1409  01F0                     l6034:	
  1410  01F0  0008               	return
  1411                           	opt stack 0
  1412                           GLOBAL	__end_of___wmul
  1413  01F1                     	__end_of___wmul:
  1414 ;; =============== function ___wmul ends ============
  1415                           
  1416                           	signat	___wmul,8314
  1417                           	global	_SetPulse
  1418                           psect	text498,local,class=CODE,delta=2
  1419                           global __ptext498
  1420  023D                     __ptext498:
  1421                           
  1422 ;; *************** function _SetPulse *****************
  1423 ;; Defined at:
  1424 ;;		line 105 in file "pwmlib.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  length          2    0[BANK0 ] int 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  temp            2    2[BANK0 ] int 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;		None               void
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0, btemp+1
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       2       0       0       0
  1439 ;;      Locals:         0       2       0       0       0
  1440 ;;      Temps:          0       0       0       0       0
  1441 ;;      Totals:         0       4       0       0       0
  1442 ;;Total ram usage:        4 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    3
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_CalcPulse
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           psect	text498
  1452                           	file	"pwmlib.c"
  1453                           	line	105
  1454                           	global	__size_of_SetPulse
  1455  0020                     	__size_of_SetPulse	equ	__end_of_SetPulse-_SetPulse
  1456                           	
  1457  023D                     _SetPulse:	
  1458                           	opt	stack 3
  1459                           ; Regs used in _SetPulse: [wreg+status,2+status,0+btemp+1]
  1460                           	line	106
  1461                           	
  1462  023D                     l7659:	
  1463                           ;pwmlib.c: 106: int temp = length;
  1464  023D  1283               	bcf	status, 5	;RP0=0, select bank0
  1465  023E  1303               	bcf	status, 6	;RP1=0, select bank0
  1466  023F  0821               	movf	(SetPulse@length+1),w
  1467  0240  01A3               	clrf	(SetPulse@temp+1)
  1468  0241  07A3               	addwf	(SetPulse@temp+1)
  1469  0242  0820               	movf	(SetPulse@length),w
  1470  0243  01A2               	clrf	(SetPulse@temp)
  1471  0244  07A2               	addwf	(SetPulse@temp)
  1472                           
  1473                           	line	107
  1474                           	
  1475  0245                     l7661:	
  1476                           ;pwmlib.c: 107: if (temp > 255)
  1477  0245  0823               	movf	(SetPulse@temp+1),w
  1478  0246  3A80               	xorlw	80h
  1479  0247  00FF               	movwf	btemp+1
  1480  0248  3081               	movlw	(high(0100h))^80h
  1481  0249  027F               	subwf	btemp+1,w
  1482  024A  1D03               	skipz
  1483  024B  2A4E               	goto	u2645
  1484  024C  3000               	movlw	low(0100h)
  1485  024D  0222               	subwf	(SetPulse@temp),w
  1486  024E                     u2645:
  1487                           
  1488  024E  1C03               	skipc
  1489  024F  2A51               	goto	u2641
  1490  0250  2A52               	goto	u2640
  1491  0251                     u2641:
  1492  0251  2A58               	goto	l4590
  1493  0252                     u2640:
  1494                           	line	108
  1495                           	
  1496  0252                     l7663:	
  1497                           ;pwmlib.c: 108: temp = 255;
  1498  0252  30FF               	movlw	low(0FFh)
  1499  0253  1283               	bcf	status, 5	;RP0=0, select bank0
  1500  0254  1303               	bcf	status, 6	;RP1=0, select bank0
  1501  0255  00A2               	movwf	(SetPulse@temp)
  1502  0256  3000               	movlw	high(0FFh)
  1503  0257  00A3               	movwf	((SetPulse@temp))+1
  1504                           	
  1505  0258                     l4590:	
  1506                           	line	109
  1507                           ;pwmlib.c: 109: CCPR1L = temp;
  1508  0258  1283               	bcf	status, 5	;RP0=0, select bank0
  1509  0259  1303               	bcf	status, 6	;RP1=0, select bank0
  1510  025A  0822               	movf	(SetPulse@temp),w
  1511  025B  0095               	movwf	(21)	;volatile
  1512                           	line	113
  1513                           	
  1514  025C                     l4591:	
  1515  025C  0008               	return
  1516                           	opt stack 0
  1517                           GLOBAL	__end_of_SetPulse
  1518  025D                     	__end_of_SetPulse:
  1519 ;; =============== function _SetPulse ends ============
  1520                           
  1521                           	signat	_SetPulse,4216
  1522                           	global	_directionInit
  1523                           psect	text499,local,class=CODE,delta=2
  1524                           global __ptext499
  1525  02CC                     __ptext499:
  1526                           
  1527 ;; *************** function _directionInit *****************
  1528 ;; Defined at:
  1529 ;;		line 138 in file "PWMmain.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;		None               void
  1536 ;; Registers used:
  1537 ;;		None
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1543 ;;      Params:         0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0
  1546 ;;      Totals:         0       0       0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels used:    1
  1549 ;; Hardware stack levels required when called:    3
  1550 ;; This function calls:
  1551 ;;		Nothing
  1552 ;; This function is called by:
  1553 ;;		_Initialise
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           psect	text499
  1557                           	file	"PWMmain.c"
  1558                           	line	138
  1559                           	global	__size_of_directionInit
  1560  0007                     	__size_of_directionInit	equ	__end_of_directionInit-_directionInit
  1561                           	
  1562  02CC                     _directionInit:	
  1563                           	opt	stack 3
  1564                           ; Regs used in _directionInit: []
  1565                           	line	139
  1566                           	
  1567  02CC                     l7657:	
  1568                           ;PWMmain.c: 139: TRISB3 = 0;
  1569  02CC  1683               	bsf	status, 5	;RP0=1, select bank1
  1570  02CD  1303               	bcf	status, 6	;RP1=0, select bank1
  1571  02CE  1186               	bcf	(1075/8)^080h,(1075)&7
  1572                           	line	140
  1573                           ;PWMmain.c: 140: PORTBbits.RB3 = 1;
  1574  02CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1575  02D0  1303               	bcf	status, 6	;RP1=0, select bank0
  1576  02D1  1586               	bsf	(6),3	;volatile
  1577                           	line	141
  1578                           	
  1579  02D2                     l3076:	
  1580  02D2  0008               	return
  1581                           	opt stack 0
  1582                           GLOBAL	__end_of_directionInit
  1583  02D3                     	__end_of_directionInit:
  1584 ;; =============== function _directionInit ends ============
  1585                           
  1586                           	signat	_directionInit,88
  1587                           	global	_BeginPWM
  1588                           psect	text500,local,class=CODE,delta=2
  1589                           global __ptext500
  1590  025D                     __ptext500:
  1591                           
  1592 ;; *************** function _BeginPWM *****************
  1593 ;; Defined at:
  1594 ;;		line 41 in file "pwmlib.c"
  1595 ;; Parameters:    Size  Location     Type
  1596 ;;		None
  1597 ;; Auto vars:     Size  Location     Type
  1598 ;;		None
  1599 ;; Return value:  Size  Location     Type
  1600 ;;		None               void
  1601 ;; Registers used:
  1602 ;;		wreg, status,2
  1603 ;; Tracked objects:
  1604 ;;		On entry : 0/0
  1605 ;;		On exit  : 0/0
  1606 ;;		Unchanged: 0/0
  1607 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1608 ;;      Params:         0       0       0       0       0
  1609 ;;      Locals:         0       0       0       0       0
  1610 ;;      Temps:          0       0       0       0       0
  1611 ;;      Totals:         0       0       0       0       0
  1612 ;;Total ram usage:        0 bytes
  1613 ;; Hardware stack levels used:    1
  1614 ;; Hardware stack levels required when called:    3
  1615 ;; This function calls:
  1616 ;;		Nothing
  1617 ;; This function is called by:
  1618 ;;		_Initialise
  1619 ;; This function uses a non-reentrant model
  1620 ;;
  1621                           psect	text500
  1622                           	file	"pwmlib.c"
  1623                           	line	41
  1624                           	global	__size_of_BeginPWM
  1625  001E                     	__size_of_BeginPWM	equ	__end_of_BeginPWM-_BeginPWM
  1626                           	
  1627  025D                     _BeginPWM:	
  1628                           	opt	stack 3
  1629                           ; Regs used in _BeginPWM: [wreg+status,2]
  1630                           	line	44
  1631                           	
  1632  025D                     l7639:	
  1633                           ;pwmlib.c: 44: TRISCbits.TRISC5 = 1;
  1634  025D  1683               	bsf	status, 5	;RP0=1, select bank1
  1635  025E  1303               	bcf	status, 6	;RP1=0, select bank1
  1636  025F  1687               	bsf	(135)^080h,5	;volatile
  1637                           	line	47
  1638                           ;pwmlib.c: 47: PIE1bits.TMR2IE = 0;
  1639  0260  108C               	bcf	(140)^080h,1	;volatile
  1640                           	line	51
  1641                           	
  1642  0261                     l7641:	
  1643                           ;pwmlib.c: 51: PR2 = 0xFF;
  1644  0261  30FF               	movlw	(0FFh)
  1645  0262  0092               	movwf	(146)^080h	;volatile
  1646                           	line	55
  1647                           ;pwmlib.c: 55: CCP1CON = 0b00001100;
  1648  0263  300C               	movlw	(0Ch)
  1649  0264  1283               	bcf	status, 5	;RP0=0, select bank0
  1650  0265  1303               	bcf	status, 6	;RP1=0, select bank0
  1651  0266  0097               	movwf	(23)	;volatile
  1652                           	line	59
  1653                           	
  1654  0267                     l7643:	
  1655                           ;pwmlib.c: 59: CCPR1L = 0;
  1656  0267  0195               	clrf	(21)	;volatile
  1657                           	line	60
  1658                           	
  1659  0268                     l7645:	
  1660                           ;pwmlib.c: 60: CCP1CONbits.CCP1X = 0;
  1661  0268  1297               	bcf	(23),5	;volatile
  1662                           	line	61
  1663                           	
  1664  0269                     l7647:	
  1665                           ;pwmlib.c: 61: CCP1CONbits.CCP1Y = 0;
  1666  0269  1217               	bcf	(23),4	;volatile
  1667                           	line	66
  1668                           	
  1669  026A                     l7649:	
  1670                           ;pwmlib.c: 66: PIR1bits.TMR2IF = 0;
  1671  026A  108C               	bcf	(12),1	;volatile
  1672                           	line	70
  1673                           	
  1674  026B                     l7651:	
  1675                           ;pwmlib.c: 70: T2CON = 0b00000100;
  1676  026B  3004               	movlw	(04h)
  1677  026C  0092               	movwf	(18)	;volatile
  1678  026D  2A6E               	goto	l7653
  1679                           	line	75
  1680                           ;pwmlib.c: 75: while(1)
  1681                           	
  1682  026E                     l4579:	
  1683                           	line	77
  1684                           	
  1685  026E                     l7653:	
  1686                           ;pwmlib.c: 76: {
  1687                           ;pwmlib.c: 77: if(PIR1bits.TMR2IF == 1)
  1688  026E  1283               	bcf	status, 5	;RP0=0, select bank0
  1689  026F  1C8C               	btfss	(12),1	;volatile
  1690  0270  2A72               	goto	u2631
  1691  0271  2A73               	goto	u2630
  1692  0272                     u2631:
  1693  0272  2A6E               	goto	l7653
  1694  0273                     u2630:
  1695                           	line	79
  1696                           	
  1697  0273                     l7655:	
  1698                           ;pwmlib.c: 78: {
  1699                           ;pwmlib.c: 79: TMR2IF = 0;
  1700  0273  108C               	bcf	(97/8),(97)&7
  1701                           	line	80
  1702                           ;pwmlib.c: 80: TRISCbits.TRISC5 = 0;
  1703  0274  1683               	bsf	status, 5	;RP0=1, select bank1
  1704  0275  1303               	bcf	status, 6	;RP1=0, select bank1
  1705  0276  1287               	bcf	(135)^080h,5	;volatile
  1706                           	line	81
  1707                           ;pwmlib.c: 81: break;
  1708  0277  2A7A               	goto	l4583
  1709                           	line	82
  1710                           	
  1711  0278                     l4580:	
  1712  0278  2A6E               	goto	l7653
  1713                           	line	83
  1714                           	
  1715  0279                     l4582:	
  1716                           	line	75
  1717  0279  2A6E               	goto	l7653
  1718                           	
  1719  027A                     l4581:	
  1720                           	line	84
  1721                           	
  1722  027A                     l4583:	
  1723  027A  0008               	return
  1724                           	opt stack 0
  1725                           GLOBAL	__end_of_BeginPWM
  1726  027B                     	__end_of_BeginPWM:
  1727 ;; =============== function _BeginPWM ends ============
  1728                           
  1729                           	signat	_BeginPWM,88
  1730                           	global	_delay
  1731                           psect	text501,local,class=CODE,delta=2
  1732                           global __ptext501
  1733  01F1                     __ptext501:
  1734                           
  1735 ;; *************** function _delay *****************
  1736 ;; Defined at:
  1737 ;;		line 90 in file "PWMmain.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  length          2    0[BANK0 ] int 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  x               2    3[BANK0 ] int 
  1742 ;; Return value:  Size  Location     Type
  1743 ;;		None               void
  1744 ;; Registers used:
  1745 ;;		wreg, status,2
  1746 ;; Tracked objects:
  1747 ;;		On entry : 0/0
  1748 ;;		On exit  : 0/0
  1749 ;;		Unchanged: 0/0
  1750 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1751 ;;      Params:         0       2       0       0       0
  1752 ;;      Locals:         0       2       0       0       0
  1753 ;;      Temps:          0       1       0       0       0
  1754 ;;      Totals:         0       5       0       0       0
  1755 ;;Total ram usage:        5 bytes
  1756 ;; Hardware stack levels used:    1
  1757 ;; Hardware stack levels required when called:    3
  1758 ;; This function calls:
  1759 ;;		Nothing
  1760 ;; This function is called by:
  1761 ;;		_main
  1762 ;; This function uses a non-reentrant model
  1763 ;;
  1764                           psect	text501
  1765                           	file	"PWMmain.c"
  1766                           	line	90
  1767                           	global	__size_of_delay
  1768  0029                     	__size_of_delay	equ	__end_of_delay-_delay
  1769                           	
  1770  01F1                     _delay:	
  1771                           	opt	stack 4
  1772                           ; Regs used in _delay: [wreg+status,2]
  1773                           	line	91
  1774                           	
  1775  01F1                     l7475:	
  1776                           ;PWMmain.c: 91: for (int x=0; x < length; x++)
  1777  01F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1778  01F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1779  01F3  01A3               	clrf	(delay@x)
  1780  01F4  01A4               	clrf	(delay@x+1)
  1781  01F5  2A0A               	goto	l3061
  1782                           	line	92
  1783                           	
  1784  01F6                     l3062:	
  1785                           	line	93
  1786                           	
  1787  01F6                     l7477:	
  1788                           ;PWMmain.c: 92: {
  1789                           ;PWMmain.c: 93: x++;
  1790  01F6  3001               	movlw	low(01h)
  1791  01F7  1283               	bcf	status, 5	;RP0=0, select bank0
  1792  01F8  1303               	bcf	status, 6	;RP1=0, select bank0
  1793  01F9  07A3               	addwf	(delay@x),f
  1794  01FA  1803               	skipnc
  1795  01FB  0AA4               	incf	(delay@x+1),f
  1796  01FC  3000               	movlw	high(01h)
  1797  01FD  07A4               	addwf	(delay@x+1),f
  1798                           	line	94
  1799                           ;PWMmain.c: 94: x--;
  1800  01FE  30FF               	movlw	low(-1)
  1801  01FF  07A3               	addwf	(delay@x),f
  1802  0200  1803               	skipnc
  1803  0201  0AA4               	incf	(delay@x+1),f
  1804  0202  30FF               	movlw	high(-1)
  1805  0203  07A4               	addwf	(delay@x+1),f
  1806                           	line	91
  1807  0204  3001               	movlw	low(01h)
  1808  0205  07A3               	addwf	(delay@x),f
  1809  0206  1803               	skipnc
  1810  0207  0AA4               	incf	(delay@x+1),f
  1811  0208  3000               	movlw	high(01h)
  1812  0209  07A4               	addwf	(delay@x+1),f
  1813                           	
  1814  020A                     l3061:	
  1815  020A  0824               	movf	(delay@x+1),w
  1816  020B  3A80               	xorlw	80h
  1817  020C  00A2               	movwf	(??_delay+0)+0
  1818  020D  0821               	movf	(delay@length+1),w
  1819  020E  3A80               	xorlw	80h
  1820  020F  0222               	subwf	(??_delay+0)+0,w
  1821  0210  1D03               	skipz
  1822  0211  2A14               	goto	u2415
  1823  0212  0820               	movf	(delay@length),w
  1824  0213  0223               	subwf	(delay@x),w
  1825  0214                     u2415:
  1826                           
  1827  0214  1C03               	skipc
  1828  0215  2A17               	goto	u2411
  1829  0216  2A18               	goto	u2410
  1830  0217                     u2411:
  1831  0217  29F6               	goto	l7477
  1832  0218                     u2410:
  1833  0218  2A19               	goto	l3064
  1834                           	
  1835  0219                     l3063:	
  1836                           	line	96
  1837                           	
  1838  0219                     l3064:	
  1839  0219  0008               	return
  1840                           	opt stack 0
  1841                           GLOBAL	__end_of_delay
  1842  021A                     	__end_of_delay:
  1843 ;; =============== function _delay ends ============
  1844                           
  1845                           	signat	_delay,4216
  1846                           	global	_i2cInit
  1847                           psect	text502,local,class=CODE,delta=2
  1848                           global __ptext502
  1849  021A                     __ptext502:
  1850                           
  1851 ;; *************** function _i2cInit *****************
  1852 ;; Defined at:
  1853 ;;		line 7 in file "i2cSlave.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;  address         1    wreg     unsigned char 
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;  address         1    0[BANK0 ] unsigned char 
  1858 ;; Return value:  Size  Location     Type
  1859 ;;		None               void
  1860 ;; Registers used:
  1861 ;;		wreg
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1867 ;;      Params:         0       0       0       0       0
  1868 ;;      Locals:         0       1       0       0       0
  1869 ;;      Temps:          0       0       0       0       0
  1870 ;;      Totals:         0       1       0       0       0
  1871 ;;Total ram usage:        1 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    3
  1874 ;; This function calls:
  1875 ;;		Nothing
  1876 ;; This function is called by:
  1877 ;;		_Initialise
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           psect	text502
  1881                           	file	"i2cSlave.c"
  1882                           	line	7
  1883                           	global	__size_of_i2cInit
  1884  0023                     	__size_of_i2cInit	equ	__end_of_i2cInit-_i2cInit
  1885                           	
  1886  021A                     _i2cInit:	
  1887                           	opt	stack 3
  1888                           ; Regs used in _i2cInit: [wreg]
  1889                           ;i2cInit@address stored from wreg
  1890                           	line	9
  1891  021A  1283               	bcf	status, 5	;RP0=0, select bank0
  1892  021B  1303               	bcf	status, 6	;RP1=0, select bank0
  1893  021C  00A0               	movwf	(i2cInit@address)
  1894                           	
  1895  021D                     l7627:	
  1896                           ;i2cSlave.c: 9: TRISC6 = 1;
  1897  021D  1683               	bsf	status, 5	;RP0=1, select bank1
  1898  021E  1303               	bcf	status, 6	;RP1=0, select bank1
  1899  021F  1707               	bsf	(1086/8)^080h,(1086)&7
  1900                           	line	10
  1901                           ;i2cSlave.c: 10: TRISC7 = 1;
  1902  0220  1787               	bsf	(1087/8)^080h,(1087)&7
  1903                           	line	11
  1904                           ;i2cSlave.c: 11: SSPEN = 1;
  1905  0221  1283               	bcf	status, 5	;RP0=0, select bank0
  1906  0222  1303               	bcf	status, 6	;RP1=0, select bank0
  1907  0223  1694               	bsf	(165/8),(165)&7
  1908                           	line	12
  1909                           ;i2cSlave.c: 12: CKE = 0;
  1910  0224  1683               	bsf	status, 5	;RP0=1, select bank1
  1911  0225  1303               	bcf	status, 6	;RP1=0, select bank1
  1912  0226  1314               	bcf	(1190/8)^080h,(1190)&7
  1913                           	line	13
  1914                           ;i2cSlave.c: 13: SMP = 0;
  1915  0227  1394               	bcf	(1191/8)^080h,(1191)&7
  1916                           	line	14
  1917                           ;i2cSlave.c: 14: CKP = 1;
  1918  0228  1283               	bcf	status, 5	;RP0=0, select bank0
  1919  0229  1303               	bcf	status, 6	;RP1=0, select bank0
  1920  022A  1614               	bsf	(164/8),(164)&7
  1921                           	line	16
  1922                           ;i2cSlave.c: 16: SSPM0 = 0;
  1923  022B  1014               	bcf	(160/8),(160)&7
  1924                           	line	17
  1925                           ;i2cSlave.c: 17: SSPM1 = 1;
  1926  022C  1494               	bsf	(161/8),(161)&7
  1927                           	line	18
  1928                           ;i2cSlave.c: 18: SSPM2 = 1;
  1929  022D  1514               	bsf	(162/8),(162)&7
  1930                           	line	19
  1931                           ;i2cSlave.c: 19: SSPM3 = 0;
  1932  022E  1194               	bcf	(163/8),(163)&7
  1933                           	line	21
  1934                           ;i2cSlave.c: 21: SSPIE =1;
  1935  022F  1683               	bsf	status, 5	;RP0=1, select bank1
  1936  0230  1303               	bcf	status, 6	;RP1=0, select bank1
  1937  0231  158C               	bsf	(1123/8)^080h,(1123)&7
  1938                           	line	23
  1939                           	
  1940  0232                     l7629:	
  1941                           ;i2cSlave.c: 23: SSPADD = address;
  1942  0232  1283               	bcf	status, 5	;RP0=0, select bank0
  1943  0233  1303               	bcf	status, 6	;RP1=0, select bank0
  1944  0234  0820               	movf	(i2cInit@address),w
  1945  0235  1683               	bsf	status, 5	;RP0=1, select bank1
  1946  0236  1303               	bcf	status, 6	;RP1=0, select bank1
  1947  0237  0093               	movwf	(147)^080h	;volatile
  1948                           	line	24
  1949                           	
  1950  0238                     l7631:	
  1951                           ;i2cSlave.c: 24: PEIE = 1;
  1952  0238  170B               	bsf	(94/8),(94)&7
  1953                           	line	25
  1954                           	
  1955  0239                     l7633:	
  1956                           ;i2cSlave.c: 25: GIE = 1;
  1957  0239  178B               	bsf	(95/8),(95)&7
  1958                           	line	26
  1959                           	
  1960  023A                     l7635:	
  1961                           ;i2cSlave.c: 26: INTE = 1;
  1962  023A  160B               	bsf	(92/8),(92)&7
  1963                           	line	29
  1964                           	
  1965  023B                     l7637:	
  1966                           ;i2cSlave.c: 29: i2cBufferVal = 0;
  1967  023B  01F9               	clrf	(_i2cBufferVal)
  1968                           	line	30
  1969                           	
  1970  023C                     l1505:	
  1971  023C  0008               	return
  1972                           	opt stack 0
  1973                           GLOBAL	__end_of_i2cInit
  1974  023D                     	__end_of_i2cInit:
  1975 ;; =============== function _i2cInit ends ============
  1976                           
  1977                           	signat	_i2cInit,4216
  1978                           	global	_isr
  1979                           psect	text503,local,class=CODE,delta=2
  1980                           global __ptext503
  1981  02AC                     __ptext503:
  1982                           
  1983 ;; *************** function _isr *****************
  1984 ;; Defined at:
  1985 ;;		line 128 in file "PWMmain.c"
  1986 ;; Parameters:    Size  Location     Type
  1987 ;;		None
  1988 ;; Auto vars:     Size  Location     Type
  1989 ;;		None
  1990 ;; Return value:  Size  Location     Type
  1991 ;;		None               void
  1992 ;; Registers used:
  1993 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1994 ;; Tracked objects:
  1995 ;;		On entry : 0/0
  1996 ;;		On exit  : 0/0
  1997 ;;		Unchanged: 0/0
  1998 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1999 ;;      Params:         0       0       0       0       0
  2000 ;;      Locals:         0       0       0       0       0
  2001 ;;      Temps:          4       0       0       0       0
  2002 ;;      Totals:         4       0       0       0       0
  2003 ;;Total ram usage:        4 bytes
  2004 ;; Hardware stack levels used:    1
  2005 ;; Hardware stack levels required when called:    2
  2006 ;; This function calls:
  2007 ;;		_i2cIsrHandler
  2008 ;; This function is called by:
  2009 ;;		Interrupt level 1
  2010 ;; This function uses a non-reentrant model
  2011 ;;
  2012                           psect	text503
  2013                           	file	"PWMmain.c"
  2014                           	line	128
  2015                           	global	__size_of_isr
  2016  0012                     	__size_of_isr	equ	__end_of_isr-_isr
  2017                           	
  2018  02AC                     _isr:	
  2019                           	opt	stack 3
  2020                           ; Regs used in _isr: [allreg]
  2021                           psect	intentry,class=CODE,delta=2
  2022                           global __pintentry
  2023  0004                     __pintentry:
  2024                           global interrupt_function
  2025  0004                     interrupt_function:
  2026                           	global saved_w
  2027  007E                     	saved_w	set	btemp+0
  2028  0004  00FE               	movwf	saved_w
  2029  0005  0E03               	swapf	status,w
  2030  0006  00F3               	movwf	(??_isr+0)
  2031  0007  0804               	movf	fsr0,w
  2032  0008  00F4               	movwf	(??_isr+1)
  2033  0009  080A               	movf	pclath,w
  2034  000A  00F5               	movwf	(??_isr+2)
  2035  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  2036  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  2037  000D  087F               	movf	btemp+1,w
  2038  000E  00F6               	movwf	(??_isr+3)
  2039  000F  120A  118A  2AAC   	ljmp	_isr
  2040                           psect	text503
  2041                           	line	129
  2042                           	
  2043  02AC                     i1l6511:	
  2044                           ;PWMmain.c: 129: i2cIsrHandler();
  2045  02AC  120A  118A  2123   	fcall	_i2cIsrHandler
              120A  118A         
  2046                           	line	131
  2047                           	
  2048  02B1                     i1l3073:	
  2049  02B1  0876               	movf	(??_isr+3),w
  2050  02B2  1283               	bcf	status, 5	;RP0=0, select bank0
  2051  02B3  1303               	bcf	status, 6	;RP1=0, select bank0
  2052  02B4  00FF               	movwf	btemp+1
  2053  02B5  0875               	movf	(??_isr+2),w
  2054  02B6  008A               	movwf	pclath
  2055  02B7  0874               	movf	(??_isr+1),w
  2056  02B8  0084               	movwf	fsr0
  2057  02B9  0E73               	swapf	(??_isr+0)^0FFFFFF80h,w
  2058  02BA  0083               	movwf	status
  2059  02BB  0EFE               	swapf	saved_w,f
  2060  02BC  0E7E               	swapf	saved_w,w
  2061  02BD  0009               	retfie
  2062                           	opt stack 0
  2063                           GLOBAL	__end_of_isr
  2064  02BE                     	__end_of_isr:
  2065 ;; =============== function _isr ends ============
  2066                           
  2067                           	signat	_isr,88
  2068                           	global	_i2cIsrHandler
  2069                           psect	text504,local,class=CODE,delta=2
  2070                           global __ptext504
  2071  0123                     __ptext504:
  2072                           
  2073 ;; *************** function _i2cIsrHandler *****************
  2074 ;; Defined at:
  2075 ;;		line 32 in file "i2cSlave.c"
  2076 ;; Parameters:    Size  Location     Type
  2077 ;;		None
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;		None
  2080 ;; Return value:  Size  Location     Type
  2081 ;;		None               void
  2082 ;; Registers used:
  2083 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  2084 ;; Tracked objects:
  2085 ;;		On entry : 0/0
  2086 ;;		On exit  : 0/0
  2087 ;;		Unchanged: 0/0
  2088 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2089 ;;      Params:         0       0       0       0       0
  2090 ;;      Locals:         0       0       0       0       0
  2091 ;;      Temps:          1       0       0       0       0
  2092 ;;      Totals:         1       0       0       0       0
  2093 ;;Total ram usage:        1 bytes
  2094 ;; Hardware stack levels used:    1
  2095 ;; Hardware stack levels required when called:    1
  2096 ;; This function calls:
  2097 ;;		_i2cSend
  2098 ;;		_i2cDataUpdate
  2099 ;; This function is called by:
  2100 ;;		_isr
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           psect	text504
  2104                           	file	"i2cSlave.c"
  2105                           	line	32
  2106                           	global	__size_of_i2cIsrHandler
  2107  006C                     	__size_of_i2cIsrHandler	equ	__end_of_i2cIsrHandler-_i2cIsrHandler
  2108                           	
  2109  0123                     _i2cIsrHandler:	
  2110                           	opt	stack 3
  2111                           ; Regs used in _i2cIsrHandler: [allreg]
  2112                           	line	42
  2113                           	
  2114  0123                     i1l6435:	
  2115                           ;i2cSlave.c: 42: if ((SSPSTAT & 0b00100100) == 0b00100000){
  2116  0123  1683               	bsf	status, 5	;RP0=1, select bank1
  2117  0124  1303               	bcf	status, 6	;RP1=0, select bank1
  2118  0125  0814               	movf	(148)^080h,w
  2119  0126  3924               	andlw	024h
  2120  0127  3A20               	xorlw	020h
  2121  0128  1D03               	skipz
  2122  0129  292B               	goto	u1_21
  2123  012A  292C               	goto	u1_20
  2124  012B                     u1_21:
  2125  012B  293A               	goto	i1l6441
  2126  012C                     u1_20:
  2127                           	line	43
  2128                           	
  2129  012C                     i1l6437:	
  2130                           ;i2cSlave.c: 43: i2cBuffer[i2cBufferVal] = SSPBUF;
  2131  012C  1283               	bcf	status, 5	;RP0=0, select bank0
  2132  012D  1303               	bcf	status, 6	;RP1=0, select bank0
  2133  012E  0813               	movf	(19),w	;volatile
  2134  012F  00F2               	movwf	(??_i2cIsrHandler+0)+0
  2135  0130  0879               	movf	(_i2cBufferVal),w
  2136  0131  3E77               	addlw	_i2cBuffer&0ffh
  2137  0132  0084               	movwf	fsr0
  2138  0133  0872               	movf	(??_i2cIsrHandler+0)+0,w
  2139  0134  0080               	movwf	indf
  2140                           	line	44
  2141                           	
  2142  0135                     i1l6439:	
  2143                           ;i2cSlave.c: 44: i2cBufferVal++;
  2144  0135  3001               	movlw	(01h)
  2145  0136  00F2               	movwf	(??_i2cIsrHandler+0)+0
  2146  0137  0872               	movf	(??_i2cIsrHandler+0)+0,w
  2147  0138  07F9               	addwf	(_i2cBufferVal),f
  2148                           	line	46
  2149                           ;i2cSlave.c: 46: } else if ((SSPSTAT & 0b00100100) == 0b0000000){
  2150  0139  297D               	goto	i1l6459
  2151                           	
  2152  013A                     i1l1508:	
  2153                           	
  2154  013A                     i1l6441:	
  2155  013A  1683               	bsf	status, 5	;RP0=1, select bank1
  2156  013B  1303               	bcf	status, 6	;RP1=0, select bank1
  2157  013C  0814               	movf	(148)^080h,w
  2158  013D  3924               	andlw	024h
  2159  013E  1D03               	btfss	status,2
  2160  013F  2941               	goto	u2_21
  2161  0140  2942               	goto	u2_20
  2162  0141                     u2_21:
  2163  0141  2946               	goto	i1l6445
  2164  0142                     u2_20:
  2165                           	line	48
  2166                           	
  2167  0142                     i1l6443:	
  2168                           ;i2cSlave.c: 48: SSPBUF = 0;
  2169  0142  1283               	bcf	status, 5	;RP0=0, select bank0
  2170  0143  1303               	bcf	status, 6	;RP1=0, select bank0
  2171  0144  0193               	clrf	(19)	;volatile
  2172                           	line	50
  2173                           ;i2cSlave.c: 50: } else if ((SSPSTAT & 0b00100100) == 0b0000100){
  2174  0145  297D               	goto	i1l6459
  2175                           	
  2176  0146                     i1l1510:	
  2177                           	
  2178  0146                     i1l6445:	
  2179  0146  1683               	bsf	status, 5	;RP0=1, select bank1
  2180  0147  1303               	bcf	status, 6	;RP1=0, select bank1
  2181  0148  0814               	movf	(148)^080h,w
  2182  0149  3924               	andlw	024h
  2183  014A  3A04               	xorlw	04h
  2184  014B  1D03               	skipz
  2185  014C  294E               	goto	u3_21
  2186  014D  294F               	goto	u3_20
  2187  014E                     u3_21:
  2188  014E  2951               	goto	i1l6449
  2189  014F                     u3_20:
  2190  014F  297D               	goto	i1l6459
  2191                           	line	53
  2192                           	
  2193  0150                     i1l6447:	
  2194                           ;i2cSlave.c: 53: } else if ((SSPSTAT & 0b00100100) == 0b0010100){
  2195  0150  297D               	goto	i1l6459
  2196                           	
  2197  0151                     i1l1512:	
  2198                           	
  2199  0151                     i1l6449:	
  2200  0151  0814               	movf	(148)^080h,w
  2201  0152  3924               	andlw	024h
  2202  0153  3A14               	xorlw	014h
  2203  0154  1D03               	skipz
  2204  0155  2957               	goto	u4_21
  2205  0156  2958               	goto	u4_20
  2206  0157                     u4_21:
  2207  0157  297D               	goto	i1l6459
  2208  0158                     u4_20:
  2209                           	line	55
  2210                           	
  2211  0158                     i1l6451:	
  2212                           ;i2cSlave.c: 55: i2cRequest = SSPBUF;
  2213  0158  1283               	bcf	status, 5	;RP0=0, select bank0
  2214  0159  1303               	bcf	status, 6	;RP1=0, select bank0
  2215  015A  0813               	movf	(19),w	;volatile
  2216  015B  00F2               	movwf	(??_i2cIsrHandler+0)+0
  2217  015C  0872               	movf	(??_i2cIsrHandler+0)+0,w
  2218  015D  00FB               	movwf	(_i2cRequest)
  2219                           	line	57
  2220                           ;i2cSlave.c: 57: if (i2cRequest == 1){
  2221  015E  087B               	movf	(_i2cRequest),w
  2222  015F  3A01               	xorlw	01h
  2223  0160  1D03               	skipz
  2224  0161  2963               	goto	u5_21
  2225  0162  2964               	goto	u5_20
  2226  0163                     u5_21:
  2227  0163  296B               	goto	i1l6455
  2228  0164                     u5_20:
  2229                           	line	58
  2230                           	
  2231  0164                     i1l6453:	
  2232                           ;i2cSlave.c: 58: i2cSend(0x00);
  2233  0164  3000               	movlw	(0)
  2234  0165  120A  118A  22D3   	fcall	_i2cSend
              120A  118A         
  2235                           	line	59
  2236                           ;i2cSlave.c: 59: } else if (i2cRequest == 2){
  2237  016A  297D               	goto	i1l6459
  2238                           	
  2239  016B                     i1l1515:	
  2240                           	
  2241  016B                     i1l6455:	
  2242  016B  087B               	movf	(_i2cRequest),w
  2243  016C  3A02               	xorlw	02h
  2244  016D  1D03               	skipz
  2245  016E  2970               	goto	u6_21
  2246  016F  2971               	goto	u6_20
  2247  0170                     u6_21:
  2248  0170  297D               	goto	i1l6459
  2249  0171                     u6_20:
  2250                           	line	60
  2251                           	
  2252  0171                     i1l6457:	
  2253                           ;i2cSlave.c: 60: i2cSend(0x00);
  2254  0171  3000               	movlw	(0)
  2255  0172  120A  118A  22D3   	fcall	_i2cSend
              120A  118A         
  2256  0177  297D               	goto	i1l6459
  2257                           	line	61
  2258                           	
  2259  0178                     i1l1517:	
  2260  0178  297D               	goto	i1l6459
  2261                           	line	62
  2262                           	
  2263  0179                     i1l1516:	
  2264  0179  297D               	goto	i1l6459
  2265                           	
  2266  017A                     i1l1514:	
  2267  017A  297D               	goto	i1l6459
  2268                           	line	65
  2269                           	
  2270  017B                     i1l1513:	
  2271  017B  297D               	goto	i1l6459
  2272                           	
  2273  017C                     i1l1511:	
  2274  017C  297D               	goto	i1l6459
  2275                           	
  2276  017D                     i1l1509:	
  2277                           	
  2278  017D                     i1l6459:	
  2279                           ;i2cSlave.c: 61: }
  2280                           ;i2cSlave.c: 62: }
  2281                           ;i2cSlave.c: 65: SSPIF = 0;
  2282  017D  1283               	bcf	status, 5	;RP0=0, select bank0
  2283  017E  1303               	bcf	status, 6	;RP1=0, select bank0
  2284  017F  118C               	bcf	(99/8),(99)&7
  2285                           	line	67
  2286                           	
  2287  0180                     i1l6461:	
  2288                           ;i2cSlave.c: 67: if (i2cBufferVal == 2){
  2289  0180  0879               	movf	(_i2cBufferVal),w
  2290  0181  3A02               	xorlw	02h
  2291  0182  1D03               	skipz
  2292  0183  2985               	goto	u7_21
  2293  0184  2986               	goto	u7_20
  2294  0185                     u7_21:
  2295  0185  298E               	goto	i1l1519
  2296  0186                     u7_20:
  2297                           	line	68
  2298                           	
  2299  0186                     i1l6463:	
  2300                           ;i2cSlave.c: 68: i2cBufferVal = 0;
  2301  0186  01F9               	clrf	(_i2cBufferVal)
  2302                           	line	69
  2303                           	
  2304  0187                     i1l6465:	
  2305                           ;i2cSlave.c: 69: i2cDataUpdate();
  2306  0187  120A  118A  227B   	fcall	_i2cDataUpdate
              120A  118A         
  2307  018C  298E               	goto	i1l1519
  2308                           	line	70
  2309                           	
  2310  018D                     i1l1518:	
  2311  018D  298E               	goto	i1l1519
  2312                           	line	71
  2313                           	
  2314  018E                     i1l6467:	
  2315                           	line	72
  2316                           ;i2cSlave.c: 70: }
  2317                           ;i2cSlave.c: 71: return;
  2318                           	
  2319  018E                     i1l1519:	
  2320  018E  0008               	return
  2321                           	opt stack 0
  2322                           GLOBAL	__end_of_i2cIsrHandler
  2323  018F                     	__end_of_i2cIsrHandler:
  2324 ;; =============== function _i2cIsrHandler ends ============
  2325                           
  2326                           	signat	_i2cIsrHandler,88
  2327                           	global	_i2cDataUpdate
  2328                           psect	text505,local,class=CODE,delta=2
  2329                           global __ptext505
  2330  027B                     __ptext505:
  2331                           
  2332 ;; *************** function _i2cDataUpdate *****************
  2333 ;; Defined at:
  2334 ;;		line 75 in file "i2cSlave.c"
  2335 ;; Parameters:    Size  Location     Type
  2336 ;;		None
  2337 ;; Auto vars:     Size  Location     Type
  2338 ;;		None
  2339 ;; Return value:  Size  Location     Type
  2340 ;;		None               void
  2341 ;; Registers used:
  2342 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  2343 ;; Tracked objects:
  2344 ;;		On entry : 0/0
  2345 ;;		On exit  : 0/0
  2346 ;;		Unchanged: 0/0
  2347 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2348 ;;      Params:         0       0       0       0       0
  2349 ;;      Locals:         0       0       0       0       0
  2350 ;;      Temps:          2       0       0       0       0
  2351 ;;      Totals:         2       0       0       0       0
  2352 ;;Total ram usage:        2 bytes
  2353 ;; Hardware stack levels used:    1
  2354 ;; This function calls:
  2355 ;;		Nothing
  2356 ;; This function is called by:
  2357 ;;		_i2cIsrHandler
  2358 ;; This function uses a non-reentrant model
  2359 ;;
  2360                           psect	text505
  2361                           	file	"i2cSlave.c"
  2362                           	line	75
  2363                           	global	__size_of_i2cDataUpdate
  2364  001A                     	__size_of_i2cDataUpdate	equ	__end_of_i2cDataUpdate-_i2cDataUpdate
  2365                           	
  2366  027B                     _i2cDataUpdate:	
  2367                           	opt	stack 3
  2368                           ; Regs used in _i2cDataUpdate: [wreg-fsr0h+status,2+status,0]
  2369                           	line	76
  2370                           	
  2371  027B                     i1l6471:	
  2372                           ;i2cSlave.c: 76: switch (i2cBuffer[0]) {
  2373  027B  2A8F               	goto	i1l6479
  2374                           	line	77
  2375                           ;i2cSlave.c: 77: case 0 :
  2376                           	
  2377  027C                     i1l1523:	
  2378                           	line	78
  2379                           	
  2380  027C                     i1l6473:	
  2381                           ;i2cSlave.c: 78: i2cSpeed = (i2cBuffer[1] & 0b01111111);
  2382  027C  0878               	movf	0+(_i2cBuffer)+01h,w
  2383  027D  397F               	andlw	07Fh
  2384  027E  00F0               	movwf	(??_i2cDataUpdate+0)+0
  2385  027F  0870               	movf	(??_i2cDataUpdate+0)+0,w
  2386  0280  00FC               	movwf	(_i2cSpeed)
  2387                           	line	79
  2388                           	
  2389  0281                     i1l6475:	
  2390                           ;i2cSlave.c: 79: i2cDirection = (i2cBuffer[1] >> 7);
  2391  0281  0878               	movf	0+(_i2cBuffer)+01h,w
  2392  0282  00F0               	movwf	(??_i2cDataUpdate+0)+0
  2393  0283  3007               	movlw	07h
  2394  0284                     u8_25:
  2395  0284  1003               	clrc
  2396  0285  0CF0               	rrf	(??_i2cDataUpdate+0)+0,f
  2397  0286  3EFF               	addlw	-1
  2398  0287  1D03               	skipz
  2399  0288  2A84               	goto	u8_25
  2400  0289  0870               	movf	0+(??_i2cDataUpdate+0)+0,w
  2401  028A  00F1               	movwf	(??_i2cDataUpdate+1)+0
  2402  028B  0871               	movf	(??_i2cDataUpdate+1)+0,w
  2403  028C  00FA               	movwf	(_i2cDirection)
  2404                           	line	80
  2405                           ;i2cSlave.c: 80: break;
  2406  028D  2A94               	goto	i1l1525
  2407                           	line	83
  2408                           	
  2409  028E                     i1l6477:	
  2410                           ;i2cSlave.c: 83: }
  2411  028E  2A94               	goto	i1l1525
  2412                           	line	76
  2413                           	
  2414  028F                     i1l1522:	
  2415                           	
  2416  028F                     i1l6479:	
  2417  028F  0877               	movf	(_i2cBuffer),w
  2418                           	; Switch size 1, requested type "space"
  2419                           ; Number of cases is 1, Range of values is 0 to 0
  2420                           ; switch strategies available:
  2421                           ; Name         Instructions Cycles
  2422                           ; simple_byte            4     3 (average)
  2423                           ; direct_byte           11     8 (fixed)
  2424                           ; jumptable            260     6 (fixed)
  2425                           ; rangetable             5     6 (fixed)
  2426                           ; spacedrange            8     9 (fixed)
  2427                           ; locatedrange           1     3 (fixed)
  2428                           ;	Chosen strategy is simple_byte
  2429                           
  2430                           	opt asmopt_off
  2431  0290  3A00               	xorlw	0^0	; case 0
  2432  0291  1903               	skipnz
  2433  0292  2A7C               	goto	i1l6473
  2434  0293  2A94               	goto	i1l1525
  2435                           	opt asmopt_on
  2436                           
  2437                           	line	83
  2438                           	
  2439  0294                     i1l1524:	
  2440                           	line	85
  2441                           ;i2cSlave.c: 84: return;
  2442                           	
  2443  0294                     i1l1525:	
  2444  0294  0008               	return
  2445                           	opt stack 0
  2446                           GLOBAL	__end_of_i2cDataUpdate
  2447  0295                     	__end_of_i2cDataUpdate:
  2448 ;; =============== function _i2cDataUpdate ends ============
  2449                           
  2450                           	signat	_i2cDataUpdate,88
  2451                           	global	_i2cSend
  2452                           psect	text506,local,class=CODE,delta=2
  2453                           global __ptext506
  2454  02D3                     __ptext506:
  2455                           
  2456 ;; *************** function _i2cSend *****************
  2457 ;; Defined at:
  2458 ;;		line 87 in file "i2cSlave.c"
  2459 ;; Parameters:    Size  Location     Type
  2460 ;;  msg             1    wreg     unsigned char 
  2461 ;; Auto vars:     Size  Location     Type
  2462 ;;		None
  2463 ;; Return value:  Size  Location     Type
  2464 ;;		None               void
  2465 ;; Registers used:
  2466 ;;		wreg
  2467 ;; Tracked objects:
  2468 ;;		On entry : 0/0
  2469 ;;		On exit  : 0/0
  2470 ;;		Unchanged: 0/0
  2471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2472 ;;      Params:         0       0       0       0       0
  2473 ;;      Locals:         0       0       0       0       0
  2474 ;;      Temps:          0       0       0       0       0
  2475 ;;      Totals:         0       0       0       0       0
  2476 ;;Total ram usage:        0 bytes
  2477 ;; Hardware stack levels used:    1
  2478 ;; This function calls:
  2479 ;;		Nothing
  2480 ;; This function is called by:
  2481 ;;		_i2cIsrHandler
  2482 ;; This function uses a non-reentrant model
  2483 ;;
  2484                           psect	text506
  2485                           	file	"i2cSlave.c"
  2486                           	line	87
  2487                           	global	__size_of_i2cSend
  2488  0001                     	__size_of_i2cSend	equ	__end_of_i2cSend-_i2cSend
  2489                           	
  2490  02D3                     _i2cSend:	
  2491                           	opt	stack 3
  2492                           ; Regs used in _i2cSend: [wreg]
  2493                           	line	89
  2494                           	
  2495  02D3                     i1l6469:	
  2496                           	line	90
  2497                           ;i2cSlave.c: 89: return;
  2498                           	
  2499  02D3                     i1l1528:	
  2500  02D3  0008               	return
  2501                           	opt stack 0
  2502                           GLOBAL	__end_of_i2cSend
  2503  02D4                     	__end_of_i2cSend:
  2504 ;; =============== function _i2cSend ends ============
  2505                           
  2506                           	signat	_i2cSend,4216
  2507                           psect	text507,local,class=CODE,delta=2
  2508                           global __ptext507
  2509  0000                     __ptext507:
  2510                           	global	btemp
  2511  007E                     	btemp set 07Eh
  2512                           
  2513                           	DABS	1,126,2	;btemp
  2514                           	global	wtemp0
  2515  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Mar 15 15:28:25 2013

                    _RD 0C60                      _WR 0C61            ___awdiv@sign 002C                      _dc 0033  
   ___wmul@multiplicand 0022                     _CKE 04A6                     _CKP 00A4                     _GIE 005F  
                   _PR2 0092                     _SMP 04A7                     _isr 02AC                     fsr0 0004  
                   indf 0000                    l1505 023C                    l3050 0037                    l3051 0065  
                  l3052 0072                    l3061 020A                    l3053 0095                    l3062 01F6  
                  l3070 01C4                    l3054 00A6                    l3063 0219                    l3055 00A8  
                  l3064 0219                    l3056 00A9                    l3057 00AA                    l3049 0024  
                  l3058 00AA                    l3067 02AB                    l3076 02D2                    l6031 01CA  
                  l6032 01D4                    l6033 01E9                    l6034 01F0                    l6171 00BD  
                  l4580 0278                    l6180 011B                    l6172 00CB                    l4581 027A  
                  l6181 0122                    l6173 0111                    l4582 0279                    l4590 0258  
                  l6174 00E3                    l4583 027A                    l4591 025C                    l6175 00D7  
                  l6176 00E8                    l6177 00E9                    l6178 0102                    l4579 026E  
                  l6179 0110                    l7531 00C1                    ?_isr 0070                    l7541 00D7  
                  l7533 00C6                    l7525 00AD                    l7701 0026                    l7631 0238  
                  l7551 0100                    l7543 00DE                    l7535 00CB                    l7527 00B4  
                  l7711 004F                    l7703 0028                    l7633 0239                    l7641 0261  
                  l7561 011B                    l7553 0102                    l7545 00E3                    l7537 00CD  
                  l7529 00BD                    l7721 0072                    l7705 0036                    l7713 0065  
                  l7635 023A                    l7627 021D                    l7475 01F1                    l7651 026B  
                  l7643 0267                    l7563 0122                    l7555 0109                    l7547 00E9  
                  l7539 00D3                    l7731 009E                    l7723 007D                    l7715 0068  
                  l7707 0037                    l7637 023B                    l7629 0232                    l7477 01F6  
                  l7653 026E                    l7645 0268                    l7661 0245                    l7549 00FA  
                  l7557 0111                    l7733 00A4                    l7725 0088                    l7717 006C  
                  l7709 0044                    l7655 0273                    l7647 0269                    l7639 025D  
                  l7663 0252                    l7671 01DB                    l7559 0115                    l7727 0090  
                  l7719 0071                    l7649 026A                    l7657 02CC                    l7673 01E9  
                  l7665 01C5                    l7681 02A5                    l7729 0095                    l7659 023D  
                  l7675 01F0                    l7667 01CA                    l7683 02A8                    l7691 001A  
                  l7669 01CE                    l7677 0295                    l7685 018F                    l7693 001E  
                  l7679 02A0                    l7687 01B9                    l7695 001F                    l7697 0020  
                  l7689 0015                    l7699 0024                    u2410 0218                    u2411 0217  
                  u2500 00D3                    u2501 00D2                    u2415 0214                    u2520 00E7  
                  u2521 00E6                    u2515 00D8                    u2540 00FA                    u2700 0064  
                  u2541 00F9                    u2701 0063                    u2630 0273                    u2710 0070  
                  u2631 0272                    u2535 00EA                    u2711 006F                    u2640 0252  
                  u2560 010F                    u2480 00B4                    u2720 0094                    u2641 0251  
                  u2561 010E                    u2545 00F6                    u2481 00B3                    u2721 0093  
                  u2705 0060                    u2650 01CE                    u2570 0115                    u2490 00C1  
                  u2730 00A4                    u2651 01CD                    u2555 0103                    u2491 00C0  
                  u2731 00A3                    u2645 024E                    u2680 01E8                    u2681 01E7  
                  u2665 01D5                    u2690 0035                    u2675 01DC                    u2691 0034  
                  _PEIE 005E                    _INTE 005C                    u2695 0031                    _TMR0 0001  
                  _WREN 0C62                    u1_20 012C                    u1_21 012B                    u2_20 0142  
                  u2_21 0141                    u3_20 014F                    u3_21 014E                    u4_20 0158  
                  u4_21 0157                    u5_20 0164                    u5_21 0163                    u6_20 0171  
                  u6_21 0170                    u7_20 0186                    u7_21 0185                    u8_25 0284  
       ??_directionInit 0020                    _main 0015                    btemp 007E                    start 0012  
       ??_i2cIsrHandler 0072         __end_of_i2cInit 023D         __end_of_i2cSend 02D4                   ??_isr 0073  
                 ?_main 0070         __end_of___awdiv 0123                   _EEADR 010D                   _CARRY 0018  
       ___awdiv@divisor 0026                   _T2CON 0012         ___awdiv@counter 002B                   _PORTD 0008  
                 _SSPM0 00A0                   _SSPM1 00A1                   _SSPM2 00A2                   _SSPM3 00A3  
                 _TRISA 0085                   _TRISD 0088                   _SSPIE 0463                   _SSPIF 0063  
                 _SSPEN 00A5                   _delay 01F1                   pclath 000A        __end_of_BeginPWM 027B  
            _i2cRequest 007B                   status 0003                   wtemp0 007E      __size_of_CalcPulse 0036  
          __end_of_main 00AD              _Initialise 0295                  ??_main 0033        __end_of_SetPulse 025D  
                ?_delay 0020                  _EEDATA 010C                  _CCPR1L 0015                  _EECON1 018C  
                _EECON2 018D        ___awdiv@dividend 0028                  i1l1510 0146                  i1l1511 017C  
                i1l1512 0151                  i1l1513 017B                  i1l1522 028F                  i1l1514 017A  
                i1l1523 027C                  i1l1515 016B                  i1l1524 0294                  i1l1516 0179  
                i1l1508 013A                  i1l1525 0294                  i1l1509 017D                  i1l1517 0178  
                i1l1518 018D                  i1l1519 018E                  i1l1528 02D3                  i1l3073 02B1  
                i1l6511 02AC                  i1l6441 013A                  i1l6451 0158                  i1l6443 0142  
                i1l6435 0123                  i1l6461 0180                  i1l6453 0164                  i1l6445 0146  
                i1l6437 012C                  i1l6471 027B                  i1l6463 0186                  i1l6455 016B  
                i1l6447 0150                  i1l6439 0135                  i1l6473 027C                  i1l6465 0187  
                i1l6457 0171                  i1l6449 0151                  i1l6475 0281                  i1l6467 018E  
                i1l6459 017D                  i1l6469 02D3                  i1l6477 028E                  i1l6479 028F  
                _TMR2IF 0061                  _SSPADD 0093                  _TRISB3 0433                  _TRISC6 043E  
                _TRISC7 043F                  _SSPBUF 0013               ??_i2cInit 0020               ??_i2cSend 0070  
        CalcPulse@speed 002F          CalcPulse@pulse 0031                  ___wmul 01C5               ??___awdiv 002A  
                delay@x 0023        ___awdiv@quotient 002D                  saved_w 007E       __end_of_CalcPulse 01C5  
        __pcstackCOMMON 0070           __end_of_delay 021A             ?_Initialise 0070               ?_BeginPWM 0070  
               ??_delay 0022   __end_of_i2cDataUpdate 0295              __pbssBANK0 0033               ?_SetPulse 0020  
            __pmaintext 0015                 ?___wmul 0020              __pintentry 0004                 _CCP1CON 0017  
            ??_BeginPWM 0020                 _SSPSTAT 0094     __size_of_Initialise 0017                 _i2cInit 021A  
               _i2cSend 02D3   __end_of_directionInit 02D3              ??_SetPulse 0022   __end_of_i2cIsrHandler 018F  
               ___awdiv 00AD         __size_of___wmul 002C            _i2cDirection 007A            _i2cBufferVal 0079  
             _T2CONbits 0012            __size_of_isr 0012    end_of_initialization 02C8               _PORTBbits 0006  
        SetPulse@length 0020               _TRISCbits 0087               _CalcPulse 018F             _CCP1CONbits 0017  
          ??_Initialise 0021          __end_of___wmul 01F1               _i2cBuffer 0077     start_initialization 02BE  
     __size_of_BeginPWM 001E             __end_of_isr 02BE              ?_CalcPulse 002F      __end_of_Initialise 02AC  
              ??___wmul 0024       __size_of_SetPulse 0020            SetPulse@temp 0022             __pbssCOMMON 0077  
         __pcstackBANK0 0020                ?_i2cInit 0070                ?_i2cSend 0070                ?___awdiv 0026  
             __ptext500 025D               __ptext501 01F1               __ptext502 021A               __ptext503 02AC  
             __ptext504 0123               __ptext505 027B               __ptext506 02D3               __ptext507 0000  
             __ptext493 0000               __ptext494 018F               __ptext495 0295               __ptext496 00AD  
             __ptext497 01C5               __ptext498 023D               __ptext499 02CC  __size_of_i2cDataUpdate 001A  
        __size_of_delay 0029             ??_CalcPulse 0031       interrupt_function 0004          ___wmul@product 0024  
              _PIE1bits 008C                _PIR1bits 000C       ___wmul@multiplier 0020                _BeginPWM 025D  
__size_of_directionInit 0007  __size_of_i2cIsrHandler 006C           _i2cDataUpdate 027B                _i2cSpeed 007C  
      __size_of_i2cInit 0023        __size_of_i2cSend 0001                _SetPulse 023D        __size_of___awdiv 0076  
        ?_i2cDataUpdate 0070           __size_of_main 0098             delay@length 0020           _directionInit 02CC  
              _setSpeed 0035           _i2cIsrHandler 0123                intlevel1 0000          ?_directionInit 0070  
        ?_i2cIsrHandler 0070              _OPTION_REG 0081         ??_i2cDataUpdate 0070          i2cInit@address 0020  
