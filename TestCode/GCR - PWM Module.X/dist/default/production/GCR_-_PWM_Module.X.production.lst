

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Dec 14 16:08:13 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 12 "PWMmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 12 "PWMmain.c"
    45  2007  F4F4               	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFFFF & 0xF7FF ;#
    46                           	FNCALL	_main,_Initialise
    47                           	FNCALL	_main,_parseDirectionPWM
    48                           	FNCALL	_main,_SetPulse
    49                           	FNCALL	_Initialise,_BeginPWM
    50                           	FNCALL	_Initialise,_i2c_init
    51                           	FNCALL	_Initialise,_directionInit
    52                           	FNROOT	_main
    53                           	FNCALL	intlevel1,_isr
    54                           	global	intlevel1
    55                           	FNROOT	intlevel1
    56                           	global	_i2cBuffer
    57                           	global	_setSpeed
    58                           	global	_val
    59                           	global	_CCP1CON
    60                           psect	text346,local,class=CODE,delta=2
    61                           global __ptext346
    62  0000                     __ptext346:
    63  0017                     _CCP1CON	set	23
    64                           	global	_CCP1CONbits
    65  0017                     _CCP1CONbits	set	23
    66                           	global	_CCPR1L
    67  0015                     _CCPR1L	set	21
    68                           	global	_PIR1bits
    69  000C                     _PIR1bits	set	12
    70                           	global	_PORTBbits
    71  0006                     _PORTBbits	set	6
    72                           	global	_PORTD
    73  0008                     _PORTD	set	8
    74                           	global	_SSPBUF
    75  0013                     _SSPBUF	set	19
    76                           	global	_T2CON
    77  0012                     _T2CON	set	18
    78                           	global	_T2CONbits
    79  0012                     _T2CONbits	set	18
    80                           	global	_CARRY
    81  0018                     _CARRY	set	24
    82                           	global	_CKP
    83  00A4                     _CKP	set	164
    84                           	global	_GIE
    85  005F                     _GIE	set	95
    86                           	global	_INTE
    87  005C                     _INTE	set	92
    88                           	global	_PEIE
    89  005E                     _PEIE	set	94
    90                           	global	_SSPEN
    91  00A5                     _SSPEN	set	165
    92                           	global	_SSPIF
    93  0063                     _SSPIF	set	99
    94                           	global	_SSPM0
    95  00A0                     _SSPM0	set	160
    96                           	global	_SSPM1
    97  00A1                     _SSPM1	set	161
    98                           	global	_SSPM2
    99  00A2                     _SSPM2	set	162
   100                           	global	_SSPM3
   101  00A3                     _SSPM3	set	163
   102                           	global	_TMR2IF
   103  0061                     _TMR2IF	set	97
   104                           	global	_PIE1bits
   105  008C                     _PIE1bits	set	140
   106                           	global	_PR2
   107  0092                     _PR2	set	146
   108                           	global	_SSPADD
   109  0093                     _SSPADD	set	147
   110                           	global	_SSPSTAT
   111  0094                     _SSPSTAT	set	148
   112                           	global	_TRISCbits
   113  0087                     _TRISCbits	set	135
   114                           	global	_TRISD
   115  0088                     _TRISD	set	136
   116                           	global	_CKE
   117  04A6                     _CKE	set	1190
   118                           	global	_SMP
   119  04A7                     _SMP	set	1191
   120                           	global	_SSPIE
   121  0463                     _SSPIE	set	1123
   122                           	global	_TRISB3
   123  0433                     _TRISB3	set	1075
   124                           	global	_TRISC6
   125  043E                     _TRISC6	set	1086
   126                           	global	_TRISC7
   127  043F                     _TRISC7	set	1087
   128                           	global	_EEADR
   129  010D                     _EEADR	set	269
   130                           	global	_EEDATA
   131  010C                     _EEDATA	set	268
   132                           	global	_EECON1
   133  018C                     _EECON1	set	396
   134                           	global	_EECON2
   135  018D                     _EECON2	set	397
   136                           	global	_RD
   137  0C60                     _RD	set	3168
   138                           	global	_WR
   139  0C61                     _WR	set	3169
   140                           	global	_WREN
   141  0C62                     _WREN	set	3170
   142                           	file	"C:\Users\josh\AppData\Local\Temp\s3kk."
   143                           	line	#
   144                           psect cinit,class=CODE,delta=2
   145                           global start_initialization
   146  010A                     start_initialization:
   147                           
   148                           psect	bssCOMMON,class=COMMON,space=1
   149                           global __pbssCOMMON
   150  0077                     __pbssCOMMON:
   151  0077                     _val:
   152  0077                            ds      2
   153                           
   154                           psect	bssBANK0,class=BANK0,space=1
   155                           global __pbssBANK0
   156  0020                     __pbssBANK0:
   157  0020                     _i2cBuffer:
   158  0020                            ds      20
   159                           
   160  0034                     _setSpeed:
   161  0034                            ds      2
   162                           
   163                           psect clrtext,class=CODE,delta=2
   164                           global clear_ram
   165                           ;	Called with FSR containing the base address, and
   166                           ;	W with the last address+1
   167  0119                     clear_ram:
   168  0119  0064               	clrwdt			;clear the watchdog before getting into this loop
   169  011A                     clrloop:
   170  011A  0180               	clrf	indf		;clear RAM location pointed to by FSR
   171  011B  0A84               	incf	fsr,f		;increment pointer
   172  011C  0604               	xorwf	fsr,w		;XOR with final address
   173  011D  1903               	btfsc	status,2	;have we reached the end yet?
   174  011E  3400               	retlw	0		;all done for this memory range, return
   175  011F  0604               	xorwf	fsr,w		;XOR again to restore value
   176  0120  291A               	goto	clrloop		;do the next byte
   177                           
   178                           ; Clear objects allocated to COMMON
   179                           psect cinit,class=CODE,delta=2
   180  010A  01F7               	clrf	((__pbssCOMMON)+0)&07Fh
   181  010B  01F8               	clrf	((__pbssCOMMON)+1)&07Fh
   182                           ; Clear objects allocated to BANK0
   183                           psect cinit,class=CODE,delta=2
   184  010C  1383               	bcf	status, 7	;select IRP bank0
   185  010D  3020               	movlw	low(__pbssBANK0)
   186  010E  0084               	movwf	fsr
   187  010F  3036               	movlw	low((__pbssBANK0)+016h)
   188  0110  120A  118A  2119   	fcall	clear_ram
              120A  118A         
   189                           psect cinit,class=CODE,delta=2
   190                           global end_of_initialization
   191                           
   192                           ;End of C runtime variable initialization code
   193                           
   194  0115                     end_of_initialization:
   195  0115  0183               clrf status
   196  0116  120A  118A  284B   ljmp _main	;jump to C main() function
   197                           psect	cstackCOMMON,class=COMMON,space=1
   198                           global __pcstackCOMMON
   199  0070                     __pcstackCOMMON:
   200                           	global	?_Initialise
   201  0070                     ?_Initialise:	; 0 bytes @ 0x0
   202                           	global	?_BeginPWM
   203  0070                     ?_BeginPWM:	; 0 bytes @ 0x0
   204                           	global	?_i2c_init
   205  0070                     ?_i2c_init:	; 0 bytes @ 0x0
   206                           	global	?_directionInit
   207  0070                     ?_directionInit:	; 0 bytes @ 0x0
   208                           	global	?_main
   209  0070                     ?_main:	; 0 bytes @ 0x0
   210                           	global	?_isr
   211  0070                     ?_isr:	; 0 bytes @ 0x0
   212                           	global	??_isr
   213  0070                     ??_isr:	; 0 bytes @ 0x0
   214  0070                     	ds	7
   215                           psect	cstackBANK0,class=BANK0,space=1
   216                           global __pcstackBANK0
   217  0036                     __pcstackBANK0:
   218                           	global	??_Initialise
   219  0036                     ??_Initialise:	; 0 bytes @ 0x0
   220                           	global	?_SetPulse
   221  0036                     ?_SetPulse:	; 0 bytes @ 0x0
   222                           	global	??_BeginPWM
   223  0036                     ??_BeginPWM:	; 0 bytes @ 0x0
   224                           	global	??_i2c_init
   225  0036                     ??_i2c_init:	; 0 bytes @ 0x0
   226                           	global	??_directionInit
   227  0036                     ??_directionInit:	; 0 bytes @ 0x0
   228                           	global	?_parseDirectionPWM
   229  0036                     ?_parseDirectionPWM:	; 2 bytes @ 0x0
   230                           	global	SetPulse@length
   231  0036                     SetPulse@length:	; 2 bytes @ 0x0
   232  0036                     	ds	2
   233                           	global	??_parseDirectionPWM
   234  0038                     ??_parseDirectionPWM:	; 0 bytes @ 0x2
   235                           	global	??_SetPulse
   236  0038                     ??_SetPulse:	; 0 bytes @ 0x2
   237                           	global	SetPulse@temp
   238  0038                     SetPulse@temp:	; 2 bytes @ 0x2
   239  0038                     	ds	2
   240                           	global	??_main
   241  003A                     ??_main:	; 0 bytes @ 0x4
   242                           	global	main@direction
   243  003A                     main@direction:	; 2 bytes @ 0x4
   244  003A                     	ds	2
   245 ;;Data sizes: Strings 0, constant 0, data 0, bss 24, persistent 0 stack 0
   246 ;;Auto spaces:   Size  Autos    Used
   247 ;; COMMON          14      7       9
   248 ;; BANK0           80      6      28
   249 ;; BANK1           80      0       0
   250 ;; BANK3           96      0       0
   251 ;; BANK2           80      0       0
   252                           
   253 ;;
   254 ;; Pointer list with targets:
   255                           
   256                           
   257                           
   258 ;;
   259 ;; Critical Paths under _main in COMMON
   260 ;;
   261 ;;   None.
   262 ;;
   263 ;; Critical Paths under _isr in COMMON
   264 ;;
   265 ;;   None.
   266 ;;
   267 ;; Critical Paths under _main in BANK0
   268 ;;
   269 ;;   _main->_SetPulse
   270 ;;
   271 ;; Critical Paths under _isr in BANK0
   272 ;;
   273 ;;   None.
   274 ;;
   275 ;; Critical Paths under _main in BANK1
   276 ;;
   277 ;;   None.
   278 ;;
   279 ;; Critical Paths under _isr in BANK1
   280 ;;
   281 ;;   None.
   282 ;;
   283 ;; Critical Paths under _main in BANK3
   284 ;;
   285 ;;   None.
   286 ;;
   287 ;; Critical Paths under _isr in BANK3
   288 ;;
   289 ;;   None.
   290 ;;
   291 ;; Critical Paths under _main in BANK2
   292 ;;
   293 ;;   None.
   294 ;;
   295 ;; Critical Paths under _isr in BANK2
   296 ;;
   297 ;;   None.
   298                           
   299 ;;
   300 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   301 ;;
   302                           
   303 ;;
   304 ;;Call Graph Tables:
   305 ;;
   306 ;; ---------------------------------------------------------------------------------
   307 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   308 ;; ---------------------------------------------------------------------------------
   309 ;; (0) _main                                                 2     2      0     102
   310 ;;                                              4 BANK0      2     2      0
   311 ;;                         _Initialise
   312 ;;                  _parseDirectionPWM
   313 ;;                           _SetPulse
   314 ;; ---------------------------------------------------------------------------------
   315 ;; (1) _Initialise                                           0     0      0       0
   316 ;;                           _BeginPWM
   317 ;;                           _i2c_init
   318 ;;                      _directionInit
   319 ;; ---------------------------------------------------------------------------------
   320 ;; (2) _directionInit                                        0     0      0       0
   321 ;; ---------------------------------------------------------------------------------
   322 ;; (2) _i2c_init                                             0     0      0       0
   323 ;; ---------------------------------------------------------------------------------
   324 ;; (2) _BeginPWM                                             0     0      0       0
   325 ;; ---------------------------------------------------------------------------------
   326 ;; (1) _SetPulse                                             4     2      2      99
   327 ;;                                              0 BANK0      4     2      2
   328 ;; ---------------------------------------------------------------------------------
   329 ;; (1) _parseDirectionPWM                                    2     0      2       0
   330 ;;                                              0 BANK0      2     0      2
   331 ;; ---------------------------------------------------------------------------------
   332 ;; Estimated maximum stack depth 2
   333 ;; ---------------------------------------------------------------------------------
   334 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   335 ;; ---------------------------------------------------------------------------------
   336 ;; (3) _isr                                                  7     7      0       0
   337 ;;                                              0 COMMON     7     7      0
   338 ;; ---------------------------------------------------------------------------------
   339 ;; Estimated maximum stack depth 3
   340 ;; ---------------------------------------------------------------------------------
   341                           
   342 ;; Call Graph Graphs:
   343                           
   344 ;; _main (ROOT)
   345 ;;   _Initialise
   346 ;;     _BeginPWM
   347 ;;     _i2c_init
   348 ;;     _directionInit
   349 ;;   _parseDirectionPWM
   350 ;;   _SetPulse
   351 ;;
   352 ;; _isr (ROOT)
   353 ;;
   354                           
   355 ;; Address spaces:
   356                           
   357 ;;Name               Size   Autos  Total    Cost      Usage
   358 ;;BITCOMMON            E      0       0       0        0.0%
   359 ;;EEDATA             100      0       0       0        0.0%
   360 ;;NULL                 0      0       0       0        0.0%
   361 ;;CODE                 0      0       0       0        0.0%
   362 ;;COMMON               E      7       9       1       64.3%
   363 ;;BITSFR0              0      0       0       1        0.0%
   364 ;;SFR0                 0      0       0       1        0.0%
   365 ;;BITSFR1              0      0       0       2        0.0%
   366 ;;SFR1                 0      0       0       2        0.0%
   367 ;;STACK                0      0       2       2        0.0%
   368 ;;BITBANK0            50      0       0       3        0.0%
   369 ;;BANK0               50      6      1C       4       35.0%
   370 ;;BITSFR3              0      0       0       4        0.0%
   371 ;;SFR3                 0      0       0       4        0.0%
   372 ;;BITBANK1            50      0       0       5        0.0%
   373 ;;BITSFR2              0      0       0       5        0.0%
   374 ;;SFR2                 0      0       0       5        0.0%
   375 ;;BANK1               50      0       0       6        0.0%
   376 ;;BITBANK3            60      0       0       7        0.0%
   377 ;;BANK3               60      0       0       8        0.0%
   378 ;;BANK2               50      0       0       9        0.0%
   379 ;;ABS                  0      0      25      10        0.0%
   380 ;;BITBANK2            50      0       0      11        0.0%
   381 ;;DATA                 0      0      27      12        0.0%
   382                           
   383                           	global	_main
   384                           psect	maintext,global,class=CODE,delta=2
   385                           global __pmaintext
   386  004B                     __pmaintext:
   387                           
   388 ;; *************** function _main *****************
   389 ;; Defined at:
   390 ;;		line 36 in file "PWMmain.c"
   391 ;; Parameters:    Size  Location     Type
   392 ;;		None
   393 ;; Auto vars:     Size  Location     Type
   394 ;;  direction       2    4[BANK0 ] int 
   395 ;; Return value:  Size  Location     Type
   396 ;;		None               void
   397 ;; Registers used:
   398 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   399 ;; Tracked objects:
   400 ;;		On entry : 17F/0
   401 ;;		On exit  : 0/0
   402 ;;		Unchanged: 0/0
   403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   404 ;;      Params:         0       0       0       0       0
   405 ;;      Locals:         0       2       0       0       0
   406 ;;      Temps:          0       0       0       0       0
   407 ;;      Totals:         0       2       0       0       0
   408 ;;Total ram usage:        2 bytes
   409 ;; Hardware stack levels required when called:    3
   410 ;; This function calls:
   411 ;;		_Initialise
   412 ;;		_parseDirectionPWM
   413 ;;		_SetPulse
   414 ;; This function is called by:
   415 ;;		Startup code after reset
   416 ;; This function uses a non-reentrant model
   417 ;;
   418                           psect	maintext
   419                           	file	"PWMmain.c"
   420                           	line	36
   421                           	global	__size_of_main
   422  0027                     	__size_of_main	equ	__end_of_main-_main
   423                           	
   424  004B                     _main:	
   425                           	opt	stack 5
   426                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   427                           	line	39
   428                           	
   429  004B                     l5997:	
   430                           ;PWMmain.c: 38: int direction;
   431                           ;PWMmain.c: 39: Initialise();
   432  004B  120A  118A  20F4   	fcall	_Initialise
              120A  118A         
   433  0050  2851               	goto	l5999
   434                           	line	60
   435                           ;PWMmain.c: 60: while (1)
   436                           	
   437  0051                     l1509:	
   438                           	line	62
   439                           	
   440  0051                     l5999:	
   441                           ;PWMmain.c: 61: {
   442                           ;PWMmain.c: 62: direction = parseDirectionPWM();
   443  0051  120A  118A  2072   	fcall	_parseDirectionPWM
              120A  118A         
   444  0056  1283               	bcf	status, 5	;RP0=0, select bank0
   445  0057  1303               	bcf	status, 6	;RP1=0, select bank0
   446  0058  0837               	movf	(1+(?_parseDirectionPWM)),w
   447  0059  01BB               	clrf	(main@direction+1)
   448  005A  07BB               	addwf	(main@direction+1)
   449  005B  0836               	movf	(0+(?_parseDirectionPWM)),w
   450  005C  01BA               	clrf	(main@direction)
   451  005D  07BA               	addwf	(main@direction)
   452                           
   453                           	line	65
   454                           	
   455  005E                     l6001:	
   456                           ;PWMmain.c: 65: SetPulse(setSpeed);
   457  005E  0835               	movf	(_setSpeed+1),w
   458  005F  01B7               	clrf	(?_SetPulse+1)
   459  0060  07B7               	addwf	(?_SetPulse+1)
   460  0061  0834               	movf	(_setSpeed),w
   461  0062  01B6               	clrf	(?_SetPulse)
   462  0063  07B6               	addwf	(?_SetPulse)
   463                           
   464  0064  120A  118A  2097   	fcall	_SetPulse
              120A  118A         
   465                           	line	67
   466                           	
   467  0069                     l6003:	
   468                           ;PWMmain.c: 67: PORTD = setSpeed;
   469  0069  1283               	bcf	status, 5	;RP0=0, select bank0
   470  006A  1303               	bcf	status, 6	;RP1=0, select bank0
   471  006B  0834               	movf	(_setSpeed),w
   472  006C  0088               	movwf	(8)	;volatile
   473  006D  2851               	goto	l5999
   474                           	line	68
   475                           	
   476  006E                     l1510:	
   477                           	line	60
   478  006E  2851               	goto	l5999
   479                           	
   480  006F                     l1511:	
   481                           	line	71
   482                           	
   483  006F                     l1512:	
   484                           	global	start
   485  006F  120A  118A  2812   	ljmp	start
   486                           	opt stack 0
   487                           GLOBAL	__end_of_main
   488  0072                     	__end_of_main:
   489 ;; =============== function _main ends ============
   490                           
   491                           	signat	_main,88
   492                           	global	_Initialise
   493                           psect	text347,local,class=CODE,delta=2
   494                           global __ptext347
   495  00F4                     __ptext347:
   496                           
   497 ;; *************** function _Initialise *****************
   498 ;; Defined at:
   499 ;;		line 87 in file "PWMmain.c"
   500 ;; Parameters:    Size  Location     Type
   501 ;;		None
   502 ;; Auto vars:     Size  Location     Type
   503 ;;		None
   504 ;; Return value:  Size  Location     Type
   505 ;;		None               void
   506 ;; Registers used:
   507 ;;		wreg, status,2, status,0, pclath, cstack
   508 ;; Tracked objects:
   509 ;;		On entry : 0/0
   510 ;;		On exit  : 0/0
   511 ;;		Unchanged: 0/0
   512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   513 ;;      Params:         0       0       0       0       0
   514 ;;      Locals:         0       0       0       0       0
   515 ;;      Temps:          0       0       0       0       0
   516 ;;      Totals:         0       0       0       0       0
   517 ;;Total ram usage:        0 bytes
   518 ;; Hardware stack levels used:    1
   519 ;; Hardware stack levels required when called:    2
   520 ;; This function calls:
   521 ;;		_BeginPWM
   522 ;;		_i2c_init
   523 ;;		_directionInit
   524 ;; This function is called by:
   525 ;;		_main
   526 ;; This function uses a non-reentrant model
   527 ;;
   528                           psect	text347
   529                           	file	"PWMmain.c"
   530                           	line	87
   531                           	global	__size_of_Initialise
   532  0016                     	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   533                           	
   534  00F4                     _Initialise:	
   535                           	opt	stack 5
   536                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   537                           	line	88
   538                           	
   539  00F4                     l5989:	
   540                           ;PWMmain.c: 88: BeginPWM();
   541  00F4  120A  118A  20D6   	fcall	_BeginPWM
              120A  118A         
   542                           	line	89
   543                           ;PWMmain.c: 89: i2c_init();
   544  00F9  120A  118A  20B7   	fcall	_i2c_init
              120A  118A         
   545                           	line	90
   546                           	
   547  00FE                     l5991:	
   548                           ;PWMmain.c: 90: directionInit();
   549  00FE  120A  118A  2121   	fcall	_directionInit
              120A  118A         
   550                           	line	92
   551                           	
   552  0103                     l5993:	
   553                           ;PWMmain.c: 92: TRISD = 0;
   554  0103  1683               	bsf	status, 5	;RP0=1, select bank1
   555  0104  1303               	bcf	status, 6	;RP1=0, select bank1
   556  0105  0188               	clrf	(136)^080h	;volatile
   557                           	line	93
   558                           	
   559  0106                     l5995:	
   560                           ;PWMmain.c: 93: PORTD = 0;
   561  0106  1283               	bcf	status, 5	;RP0=0, select bank0
   562  0107  1303               	bcf	status, 6	;RP1=0, select bank0
   563  0108  0188               	clrf	(8)	;volatile
   564                           	line	94
   565                           	
   566  0109                     l1521:	
   567  0109  0008               	return
   568                           	opt stack 0
   569                           GLOBAL	__end_of_Initialise
   570  010A                     	__end_of_Initialise:
   571 ;; =============== function _Initialise ends ============
   572                           
   573                           	signat	_Initialise,88
   574                           	global	_directionInit
   575                           psect	text348,local,class=CODE,delta=2
   576                           global __ptext348
   577  0121                     __ptext348:
   578                           
   579 ;; *************** function _directionInit *****************
   580 ;; Defined at:
   581 ;;		line 184 in file "PWMmain.c"
   582 ;; Parameters:    Size  Location     Type
   583 ;;		None
   584 ;; Auto vars:     Size  Location     Type
   585 ;;		None
   586 ;; Return value:  Size  Location     Type
   587 ;;		None               void
   588 ;; Registers used:
   589 ;;		None
   590 ;; Tracked objects:
   591 ;;		On entry : 0/0
   592 ;;		On exit  : 0/0
   593 ;;		Unchanged: 0/0
   594 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   595 ;;      Params:         0       0       0       0       0
   596 ;;      Locals:         0       0       0       0       0
   597 ;;      Temps:          0       0       0       0       0
   598 ;;      Totals:         0       0       0       0       0
   599 ;;Total ram usage:        0 bytes
   600 ;; Hardware stack levels used:    1
   601 ;; Hardware stack levels required when called:    1
   602 ;; This function calls:
   603 ;;		Nothing
   604 ;; This function is called by:
   605 ;;		_Initialise
   606 ;; This function uses a non-reentrant model
   607 ;;
   608                           psect	text348
   609                           	file	"PWMmain.c"
   610                           	line	184
   611                           	global	__size_of_directionInit
   612  0007                     	__size_of_directionInit	equ	__end_of_directionInit-_directionInit
   613                           	
   614  0121                     _directionInit:	
   615                           	opt	stack 5
   616                           ; Regs used in _directionInit: []
   617                           	line	185
   618                           	
   619  0121                     l5983:	
   620                           ;PWMmain.c: 185: TRISB3 = 0;
   621  0121  1683               	bsf	status, 5	;RP0=1, select bank1
   622  0122  1303               	bcf	status, 6	;RP1=0, select bank1
   623  0123  1186               	bcf	(1075/8)^080h,(1075)&7
   624                           	line	186
   625                           ;PWMmain.c: 186: PORTBbits.RB3 = 0;
   626  0124  1283               	bcf	status, 5	;RP0=0, select bank0
   627  0125  1303               	bcf	status, 6	;RP1=0, select bank0
   628  0126  1186               	bcf	(6),3	;volatile
   629                           	line	187
   630                           	
   631  0127                     l1536:	
   632  0127  0008               	return
   633                           	opt stack 0
   634                           GLOBAL	__end_of_directionInit
   635  0128                     	__end_of_directionInit:
   636 ;; =============== function _directionInit ends ============
   637                           
   638                           	signat	_directionInit,88
   639                           	global	_i2c_init
   640                           psect	text349,local,class=CODE,delta=2
   641                           global __ptext349
   642  00B7                     __ptext349:
   643                           
   644 ;; *************** function _i2c_init *****************
   645 ;; Defined at:
   646 ;;		line 108 in file "PWMmain.c"
   647 ;; Parameters:    Size  Location     Type
   648 ;;		None
   649 ;; Auto vars:     Size  Location     Type
   650 ;;		None
   651 ;; Return value:  Size  Location     Type
   652 ;;		None               void
   653 ;; Registers used:
   654 ;;		wreg, status,2
   655 ;; Tracked objects:
   656 ;;		On entry : 0/0
   657 ;;		On exit  : 0/0
   658 ;;		Unchanged: 0/0
   659 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   660 ;;      Params:         0       0       0       0       0
   661 ;;      Locals:         0       0       0       0       0
   662 ;;      Temps:          0       0       0       0       0
   663 ;;      Totals:         0       0       0       0       0
   664 ;;Total ram usage:        0 bytes
   665 ;; Hardware stack levels used:    1
   666 ;; Hardware stack levels required when called:    1
   667 ;; This function calls:
   668 ;;		Nothing
   669 ;; This function is called by:
   670 ;;		_Initialise
   671 ;; This function uses a non-reentrant model
   672 ;;
   673                           psect	text349
   674                           	file	"PWMmain.c"
   675                           	line	108
   676                           	global	__size_of_i2c_init
   677  001F                     	__size_of_i2c_init	equ	__end_of_i2c_init-_i2c_init
   678                           	
   679  00B7                     _i2c_init:	
   680                           	opt	stack 5
   681                           ; Regs used in _i2c_init: [wreg+status,2]
   682                           	line	109
   683                           	
   684  00B7                     l5971:	
   685                           ;PWMmain.c: 109: TRISC6 = 1;
   686  00B7  1683               	bsf	status, 5	;RP0=1, select bank1
   687  00B8  1303               	bcf	status, 6	;RP1=0, select bank1
   688  00B9  1707               	bsf	(1086/8)^080h,(1086)&7
   689                           	line	110
   690                           ;PWMmain.c: 110: TRISC7 = 1;
   691  00BA  1787               	bsf	(1087/8)^080h,(1087)&7
   692                           	line	111
   693                           ;PWMmain.c: 111: SSPEN = 1;
   694  00BB  1283               	bcf	status, 5	;RP0=0, select bank0
   695  00BC  1303               	bcf	status, 6	;RP1=0, select bank0
   696  00BD  1694               	bsf	(165/8),(165)&7
   697                           	line	112
   698                           ;PWMmain.c: 112: CKE = 0;
   699  00BE  1683               	bsf	status, 5	;RP0=1, select bank1
   700  00BF  1303               	bcf	status, 6	;RP1=0, select bank1
   701  00C0  1314               	bcf	(1190/8)^080h,(1190)&7
   702                           	line	113
   703                           ;PWMmain.c: 113: SMP = 0;
   704  00C1  1394               	bcf	(1191/8)^080h,(1191)&7
   705                           	line	114
   706                           ;PWMmain.c: 114: CKP = 1;
   707  00C2  1283               	bcf	status, 5	;RP0=0, select bank0
   708  00C3  1303               	bcf	status, 6	;RP1=0, select bank0
   709  00C4  1614               	bsf	(164/8),(164)&7
   710                           	line	116
   711                           ;PWMmain.c: 116: SSPM0 = 0;
   712  00C5  1014               	bcf	(160/8),(160)&7
   713                           	line	117
   714                           ;PWMmain.c: 117: SSPM1 = 1;
   715  00C6  1494               	bsf	(161/8),(161)&7
   716                           	line	118
   717                           ;PWMmain.c: 118: SSPM2 = 1;
   718  00C7  1514               	bsf	(162/8),(162)&7
   719                           	line	119
   720                           ;PWMmain.c: 119: SSPM3 = 0;
   721  00C8  1194               	bcf	(163/8),(163)&7
   722                           	line	121
   723                           ;PWMmain.c: 121: SSPIE =1;
   724  00C9  1683               	bsf	status, 5	;RP0=1, select bank1
   725  00CA  1303               	bcf	status, 6	;RP1=0, select bank1
   726  00CB  158C               	bsf	(1123/8)^080h,(1123)&7
   727                           	line	123
   728                           	
   729  00CC                     l5973:	
   730                           ;PWMmain.c: 123: SSPADD = 0b10101100;
   731  00CC  30AC               	movlw	(0ACh)
   732  00CD  0093               	movwf	(147)^080h	;volatile
   733                           	line	124
   734                           	
   735  00CE                     l5975:	
   736                           ;PWMmain.c: 124: PEIE = 1;
   737  00CE  170B               	bsf	(94/8),(94)&7
   738                           	line	125
   739                           	
   740  00CF                     l5977:	
   741                           ;PWMmain.c: 125: GIE = 1;
   742  00CF  178B               	bsf	(95/8),(95)&7
   743                           	line	126
   744                           	
   745  00D0                     l5979:	
   746                           ;PWMmain.c: 126: INTE = 1;
   747  00D0  160B               	bsf	(92/8),(92)&7
   748                           	line	127
   749                           	
   750  00D1                     l5981:	
   751                           ;PWMmain.c: 127: i2cBuffer[1] = 0;
   752  00D1  1283               	bcf	status, 5	;RP0=0, select bank0
   753  00D2  1303               	bcf	status, 6	;RP1=0, select bank0
   754  00D3  01A2               	clrf	0+(_i2cBuffer)+02h
   755  00D4  01A3               	clrf	1+(_i2cBuffer)+02h
   756                           	line	128
   757                           	
   758  00D5                     l1527:	
   759  00D5  0008               	return
   760                           	opt stack 0
   761                           GLOBAL	__end_of_i2c_init
   762  00D6                     	__end_of_i2c_init:
   763 ;; =============== function _i2c_init ends ============
   764                           
   765                           	signat	_i2c_init,88
   766                           	global	_BeginPWM
   767                           psect	text350,local,class=CODE,delta=2
   768                           global __ptext350
   769  00D6                     __ptext350:
   770                           
   771 ;; *************** function _BeginPWM *****************
   772 ;; Defined at:
   773 ;;		line 41 in file "pwmlib.c"
   774 ;; Parameters:    Size  Location     Type
   775 ;;		None
   776 ;; Auto vars:     Size  Location     Type
   777 ;;		None
   778 ;; Return value:  Size  Location     Type
   779 ;;		None               void
   780 ;; Registers used:
   781 ;;		wreg, status,2
   782 ;; Tracked objects:
   783 ;;		On entry : 0/0
   784 ;;		On exit  : 0/0
   785 ;;		Unchanged: 0/0
   786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   787 ;;      Params:         0       0       0       0       0
   788 ;;      Locals:         0       0       0       0       0
   789 ;;      Temps:          0       0       0       0       0
   790 ;;      Totals:         0       0       0       0       0
   791 ;;Total ram usage:        0 bytes
   792 ;; Hardware stack levels used:    1
   793 ;; Hardware stack levels required when called:    1
   794 ;; This function calls:
   795 ;;		Nothing
   796 ;; This function is called by:
   797 ;;		_Initialise
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           psect	text350
   801                           	file	"pwmlib.c"
   802                           	line	41
   803                           	global	__size_of_BeginPWM
   804  001E                     	__size_of_BeginPWM	equ	__end_of_BeginPWM-_BeginPWM
   805                           	
   806  00D6                     _BeginPWM:	
   807                           	opt	stack 5
   808                           ; Regs used in _BeginPWM: [wreg+status,2]
   809                           	line	44
   810                           	
   811  00D6                     l5953:	
   812                           ;pwmlib.c: 44: TRISCbits.TRISC5 = 1;
   813  00D6  1683               	bsf	status, 5	;RP0=1, select bank1
   814  00D7  1303               	bcf	status, 6	;RP1=0, select bank1
   815  00D8  1687               	bsf	(135)^080h,5	;volatile
   816                           	line	47
   817                           ;pwmlib.c: 47: PIE1bits.TMR2IE = 0;
   818  00D9  108C               	bcf	(140)^080h,1	;volatile
   819                           	line	51
   820                           	
   821  00DA                     l5955:	
   822                           ;pwmlib.c: 51: PR2 = 0xFF;
   823  00DA  30FF               	movlw	(0FFh)
   824  00DB  0092               	movwf	(146)^080h	;volatile
   825                           	line	55
   826                           ;pwmlib.c: 55: CCP1CON = 0b00001100;
   827  00DC  300C               	movlw	(0Ch)
   828  00DD  1283               	bcf	status, 5	;RP0=0, select bank0
   829  00DE  1303               	bcf	status, 6	;RP1=0, select bank0
   830  00DF  0097               	movwf	(23)	;volatile
   831                           	line	59
   832                           	
   833  00E0                     l5957:	
   834                           ;pwmlib.c: 59: CCPR1L = 0;
   835  00E0  0195               	clrf	(21)	;volatile
   836                           	line	60
   837                           	
   838  00E1                     l5959:	
   839                           ;pwmlib.c: 60: CCP1CONbits.CCP1X = 0;
   840  00E1  1297               	bcf	(23),5	;volatile
   841                           	line	61
   842                           	
   843  00E2                     l5961:	
   844                           ;pwmlib.c: 61: CCP1CONbits.CCP1Y = 0;
   845  00E2  1217               	bcf	(23),4	;volatile
   846                           	line	66
   847                           	
   848  00E3                     l5963:	
   849                           ;pwmlib.c: 66: PIR1bits.TMR2IF = 0;
   850  00E3  108C               	bcf	(12),1	;volatile
   851                           	line	70
   852                           	
   853  00E4                     l5965:	
   854                           ;pwmlib.c: 70: T2CON = 0b00000100;
   855  00E4  3004               	movlw	(04h)
   856  00E5  0092               	movwf	(18)	;volatile
   857  00E6  28E7               	goto	l5967
   858                           	line	75
   859                           ;pwmlib.c: 75: while(1)
   860                           	
   861  00E7                     l3039:	
   862                           	line	77
   863                           	
   864  00E7                     l5967:	
   865                           ;pwmlib.c: 76: {
   866                           ;pwmlib.c: 77: if(PIR1bits.TMR2IF == 1)
   867  00E7  1283               	bcf	status, 5	;RP0=0, select bank0
   868  00E8  1C8C               	btfss	(12),1	;volatile
   869  00E9  28EB               	goto	u2361
   870  00EA  28EC               	goto	u2360
   871  00EB                     u2361:
   872  00EB  28E7               	goto	l5967
   873  00EC                     u2360:
   874                           	line	79
   875                           	
   876  00EC                     l5969:	
   877                           ;pwmlib.c: 78: {
   878                           ;pwmlib.c: 79: TMR2IF = 0;
   879  00EC  108C               	bcf	(97/8),(97)&7
   880                           	line	80
   881                           ;pwmlib.c: 80: TRISCbits.TRISC5 = 0;
   882  00ED  1683               	bsf	status, 5	;RP0=1, select bank1
   883  00EE  1303               	bcf	status, 6	;RP1=0, select bank1
   884  00EF  1287               	bcf	(135)^080h,5	;volatile
   885                           	line	81
   886                           ;pwmlib.c: 81: break;
   887  00F0  28F3               	goto	l3043
   888                           	line	82
   889                           	
   890  00F1                     l3040:	
   891  00F1  28E7               	goto	l5967
   892                           	line	83
   893                           	
   894  00F2                     l3042:	
   895                           	line	75
   896  00F2  28E7               	goto	l5967
   897                           	
   898  00F3                     l3041:	
   899                           	line	84
   900                           	
   901  00F3                     l3043:	
   902  00F3  0008               	return
   903                           	opt stack 0
   904                           GLOBAL	__end_of_BeginPWM
   905  00F4                     	__end_of_BeginPWM:
   906 ;; =============== function _BeginPWM ends ============
   907                           
   908                           	signat	_BeginPWM,88
   909                           	global	_SetPulse
   910                           psect	text351,local,class=CODE,delta=2
   911                           global __ptext351
   912  0097                     __ptext351:
   913                           
   914 ;; *************** function _SetPulse *****************
   915 ;; Defined at:
   916 ;;		line 105 in file "pwmlib.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  length          2    0[BANK0 ] int 
   919 ;; Auto vars:     Size  Location     Type
   920 ;;  temp            2    2[BANK0 ] int 
   921 ;; Return value:  Size  Location     Type
   922 ;;		None               void
   923 ;; Registers used:
   924 ;;		wreg, status,2, status,0, btemp+1
   925 ;; Tracked objects:
   926 ;;		On entry : 0/0
   927 ;;		On exit  : 0/0
   928 ;;		Unchanged: 0/0
   929 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   930 ;;      Params:         0       2       0       0       0
   931 ;;      Locals:         0       2       0       0       0
   932 ;;      Temps:          0       0       0       0       0
   933 ;;      Totals:         0       4       0       0       0
   934 ;;Total ram usage:        4 bytes
   935 ;; Hardware stack levels used:    1
   936 ;; Hardware stack levels required when called:    1
   937 ;; This function calls:
   938 ;;		Nothing
   939 ;; This function is called by:
   940 ;;		_main
   941 ;;		_CalcPulse
   942 ;; This function uses a non-reentrant model
   943 ;;
   944                           psect	text351
   945                           	file	"pwmlib.c"
   946                           	line	105
   947                           	global	__size_of_SetPulse
   948  0020                     	__size_of_SetPulse	equ	__end_of_SetPulse-_SetPulse
   949                           	
   950  0097                     _SetPulse:	
   951                           	opt	stack 6
   952                           ; Regs used in _SetPulse: [wreg+status,2+status,0+btemp+1]
   953                           	line	106
   954                           	
   955  0097                     l5947:	
   956                           ;pwmlib.c: 106: int temp = length;
   957  0097  1283               	bcf	status, 5	;RP0=0, select bank0
   958  0098  1303               	bcf	status, 6	;RP1=0, select bank0
   959  0099  0837               	movf	(SetPulse@length+1),w
   960  009A  01B9               	clrf	(SetPulse@temp+1)
   961  009B  07B9               	addwf	(SetPulse@temp+1)
   962  009C  0836               	movf	(SetPulse@length),w
   963  009D  01B8               	clrf	(SetPulse@temp)
   964  009E  07B8               	addwf	(SetPulse@temp)
   965                           
   966                           	line	107
   967                           	
   968  009F                     l5949:	
   969                           ;pwmlib.c: 107: if (temp > 255)
   970  009F  0839               	movf	(SetPulse@temp+1),w
   971  00A0  3A80               	xorlw	80h
   972  00A1  00FF               	movwf	btemp+1
   973  00A2  3081               	movlw	(high(0100h))^80h
   974  00A3  027F               	subwf	btemp+1,w
   975  00A4  1D03               	skipz
   976  00A5  28A8               	goto	u2355
   977  00A6  3000               	movlw	low(0100h)
   978  00A7  0238               	subwf	(SetPulse@temp),w
   979  00A8                     u2355:
   980                           
   981  00A8  1C03               	skipc
   982  00A9  28AB               	goto	u2351
   983  00AA  28AC               	goto	u2350
   984  00AB                     u2351:
   985  00AB  28B2               	goto	l3050
   986  00AC                     u2350:
   987                           	line	108
   988                           	
   989  00AC                     l5951:	
   990                           ;pwmlib.c: 108: temp = 255;
   991  00AC  30FF               	movlw	low(0FFh)
   992  00AD  1283               	bcf	status, 5	;RP0=0, select bank0
   993  00AE  1303               	bcf	status, 6	;RP1=0, select bank0
   994  00AF  00B8               	movwf	(SetPulse@temp)
   995  00B0  3000               	movlw	high(0FFh)
   996  00B1  00B9               	movwf	((SetPulse@temp))+1
   997                           	
   998  00B2                     l3050:	
   999                           	line	109
  1000                           ;pwmlib.c: 109: CCPR1L = temp;
  1001  00B2  1283               	bcf	status, 5	;RP0=0, select bank0
  1002  00B3  1303               	bcf	status, 6	;RP1=0, select bank0
  1003  00B4  0838               	movf	(SetPulse@temp),w
  1004  00B5  0095               	movwf	(21)	;volatile
  1005                           	line	113
  1006                           	
  1007  00B6                     l3051:	
  1008  00B6  0008               	return
  1009                           	opt stack 0
  1010                           GLOBAL	__end_of_SetPulse
  1011  00B7                     	__end_of_SetPulse:
  1012 ;; =============== function _SetPulse ends ============
  1013                           
  1014                           	signat	_SetPulse,4216
  1015                           	global	_parseDirectionPWM
  1016                           psect	text352,local,class=CODE,delta=2
  1017                           global __ptext352
  1018  0072                     __ptext352:
  1019                           
  1020 ;; *************** function _parseDirectionPWM *****************
  1021 ;; Defined at:
  1022 ;;		line 194 in file "PWMmain.c"
  1023 ;; Parameters:    Size  Location     Type
  1024 ;;		None
  1025 ;; Auto vars:     Size  Location     Type
  1026 ;;		None
  1027 ;; Return value:  Size  Location     Type
  1028 ;;                  2    0[BANK0 ] int 
  1029 ;; Registers used:
  1030 ;;		wreg, status,2, btemp+1
  1031 ;; Tracked objects:
  1032 ;;		On entry : 0/0
  1033 ;;		On exit  : 0/0
  1034 ;;		Unchanged: 0/0
  1035 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1036 ;;      Params:         0       2       0       0       0
  1037 ;;      Locals:         0       0       0       0       0
  1038 ;;      Temps:          0       0       0       0       0
  1039 ;;      Totals:         0       2       0       0       0
  1040 ;;Total ram usage:        2 bytes
  1041 ;; Hardware stack levels used:    1
  1042 ;; Hardware stack levels required when called:    1
  1043 ;; This function calls:
  1044 ;;		Nothing
  1045 ;; This function is called by:
  1046 ;;		_main
  1047 ;; This function uses a non-reentrant model
  1048 ;;
  1049                           psect	text352
  1050                           	file	"PWMmain.c"
  1051                           	line	194
  1052                           	global	__size_of_parseDirectionPWM
  1053  0025                     	__size_of_parseDirectionPWM	equ	__end_of_parseDirectionPWM-_parseDirectionPWM
  1054                           	
  1055  0072                     _parseDirectionPWM:	
  1056                           	opt	stack 6
  1057                           ; Regs used in _parseDirectionPWM: [wreg+status,2+btemp+1]
  1058                           	line	195
  1059                           	
  1060  0072                     l5933:	
  1061                           ;PWMmain.c: 195: setSpeed = i2cBuffer[1]&0b01111111;
  1062  0072  307F               	movlw	low(07Fh)
  1063  0073  1283               	bcf	status, 5	;RP0=0, select bank0
  1064  0074  1303               	bcf	status, 6	;RP1=0, select bank0
  1065  0075  0522               	andwf	0+(_i2cBuffer)+02h,w
  1066  0076  00B4               	movwf	(_setSpeed)
  1067  0077  3000               	movlw	high(07Fh)
  1068  0078  0523               	andwf	1+(_i2cBuffer)+02h,w
  1069  0079  00B5               	movwf	1+(_setSpeed)
  1070                           	line	197
  1071                           	
  1072  007A                     l5935:	
  1073                           ;PWMmain.c: 197: if (i2cBuffer[1] > 0)
  1074  007A  0823               	movf	1+(_i2cBuffer)+02h,w
  1075  007B  3A80               	xorlw	80h
  1076  007C  00FF               	movwf	btemp+1
  1077  007D  3080               	movlw	(high(01h))^80h
  1078  007E  027F               	subwf	btemp+1,w
  1079  007F  1D03               	skipz
  1080  0080  2883               	goto	u2345
  1081  0081  3001               	movlw	low(01h)
  1082  0082  0222               	subwf	0+(_i2cBuffer)+02h,w
  1083  0083                     u2345:
  1084                           
  1085  0083  1C03               	skipc
  1086  0084  2886               	goto	u2341
  1087  0085  2887               	goto	u2340
  1088  0086                     u2341:
  1089  0086  2890               	goto	l5943
  1090  0087                     u2340:
  1091                           	line	199
  1092                           	
  1093  0087                     l5937:	
  1094                           ;PWMmain.c: 198: {
  1095                           ;PWMmain.c: 199: return 1;
  1096  0087  3001               	movlw	low(01h)
  1097  0088  1283               	bcf	status, 5	;RP0=0, select bank0
  1098  0089  1303               	bcf	status, 6	;RP1=0, select bank0
  1099  008A  00B6               	movwf	(?_parseDirectionPWM)
  1100  008B  3000               	movlw	high(01h)
  1101  008C  00B7               	movwf	((?_parseDirectionPWM))+1
  1102  008D  2896               	goto	l1540
  1103                           	
  1104  008E                     l5939:	
  1105  008E  2896               	goto	l1540
  1106                           	line	200
  1107                           	
  1108  008F                     l5941:	
  1109                           ;PWMmain.c: 200: }
  1110  008F  2896               	goto	l1540
  1111                           	line	201
  1112                           	
  1113  0090                     l1539:	
  1114                           	line	202
  1115                           	
  1116  0090                     l5943:	
  1117                           ;PWMmain.c: 201: else
  1118                           ;PWMmain.c: 202: return 0;
  1119  0090  1283               	bcf	status, 5	;RP0=0, select bank0
  1120  0091  1303               	bcf	status, 6	;RP1=0, select bank0
  1121  0092  01B6               	clrf	(?_parseDirectionPWM)
  1122  0093  01B7               	clrf	(?_parseDirectionPWM+1)
  1123  0094  2896               	goto	l1540
  1124                           	
  1125  0095                     l5945:	
  1126  0095  2896               	goto	l1540
  1127                           	
  1128  0096                     l1541:	
  1129                           	line	203
  1130                           	
  1131  0096                     l1540:	
  1132  0096  0008               	return
  1133                           	opt stack 0
  1134                           GLOBAL	__end_of_parseDirectionPWM
  1135  0097                     	__end_of_parseDirectionPWM:
  1136 ;; =============== function _parseDirectionPWM ends ============
  1137                           
  1138                           	signat	_parseDirectionPWM,90
  1139                           	global	_isr
  1140                           psect	text353,local,class=CODE,delta=2
  1141                           global __ptext353
  1142  0015                     __ptext353:
  1143                           
  1144 ;; *************** function _isr *****************
  1145 ;; Defined at:
  1146 ;;		line 134 in file "PWMmain.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;		None               void
  1153 ;; Registers used:
  1154 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1160 ;;      Params:         0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0
  1162 ;;      Temps:          7       0       0       0       0
  1163 ;;      Totals:         7       0       0       0       0
  1164 ;;Total ram usage:        7 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; This function calls:
  1167 ;;		Nothing
  1168 ;; This function is called by:
  1169 ;;		Interrupt level 1
  1170 ;; This function uses a non-reentrant model
  1171 ;;
  1172                           psect	text353
  1173                           	file	"PWMmain.c"
  1174                           	line	134
  1175                           	global	__size_of_isr
  1176  0036                     	__size_of_isr	equ	__end_of_isr-_isr
  1177                           	
  1178  0015                     _isr:	
  1179                           	opt	stack 5
  1180                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1181                           psect	intentry,class=CODE,delta=2
  1182                           global __pintentry
  1183  0004                     __pintentry:
  1184                           global interrupt_function
  1185  0004                     interrupt_function:
  1186                           	global saved_w
  1187  007E                     	saved_w	set	btemp+0
  1188  0004  00FE               	movwf	saved_w
  1189  0005  0E03               	swapf	status,w
  1190  0006  00F3               	movwf	(??_isr+3)
  1191  0007  0804               	movf	fsr0,w
  1192  0008  00F4               	movwf	(??_isr+4)
  1193  0009  080A               	movf	pclath,w
  1194  000A  00F5               	movwf	(??_isr+5)
  1195  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1196  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1197  000D  087F               	movf	btemp+1,w
  1198  000E  00F6               	movwf	(??_isr+6)
  1199  000F  120A  118A  2815   	ljmp	_isr
  1200                           psect	text353
  1201                           	line	159
  1202                           	
  1203  0015                     i1l4943:	
  1204                           ;PWMmain.c: 159: if (val == 2)
  1205  0015  3002               	movlw	02h
  1206  0016  0677               	xorwf	(_val),w
  1207  0017  0478               	iorwf	(_val+1),w
  1208  0018  1D03               	skipz
  1209  0019  281B               	goto	u5_21
  1210  001A  281C               	goto	u5_20
  1211  001B                     u5_21:
  1212  001B  281F               	goto	i1l4947
  1213  001C                     u5_20:
  1214                           	line	160
  1215                           	
  1216  001C                     i1l4945:	
  1217                           ;PWMmain.c: 160: val = 0;
  1218  001C  01F7               	clrf	(_val)
  1219  001D  01F8               	clrf	(_val+1)
  1220  001E  281F               	goto	i1l4947
  1221                           	
  1222  001F                     i1l1530:	
  1223                           	line	162
  1224                           	
  1225  001F                     i1l4947:	
  1226                           ;PWMmain.c: 162: if ((SSPSTAT & 0b00100000) == 0b00100000){
  1227  001F  1683               	bsf	status, 5	;RP0=1, select bank1
  1228  0020  1303               	bcf	status, 6	;RP1=0, select bank1
  1229  0021  1E94               	btfss	(148)^080h,(5)&7
  1230  0022  2824               	goto	u6_21
  1231  0023  2825               	goto	u6_20
  1232  0024                     u6_21:
  1233  0024  283C               	goto	i1l4953
  1234  0025                     u6_20:
  1235                           	line	166
  1236                           	
  1237  0025                     i1l4949:	
  1238                           ;PWMmain.c: 166: i2cBuffer[val] = SSPBUF;
  1239  0025  1283               	bcf	status, 5	;RP0=0, select bank0
  1240  0026  1303               	bcf	status, 6	;RP1=0, select bank0
  1241  0027  0813               	movf	(19),w	;volatile
  1242  0028  00F0               	movwf	(??_isr+0)+0
  1243  0029  01F1               	clrf	(??_isr+0)+0+1
  1244  002A  0877               	movf	(_val),w
  1245  002B  00F2               	movwf	(??_isr+2)+0
  1246  002C  0772               	addwf	(??_isr+2)+0,w
  1247  002D  3E20               	addlw	_i2cBuffer&0ffh
  1248  002E  0084               	movwf	fsr0
  1249  002F  0870               	movf	0+(??_isr+0)+0,w
  1250  0030  1383               	bcf	status, 7	;select IRP bank0
  1251  0031  0080               	movwf	indf
  1252  0032  0A84               	incf	fsr0,f
  1253  0033  0871               	movf	1+(??_isr+0)+0,w
  1254  0034  0080               	movwf	indf
  1255                           	line	167
  1256                           	
  1257  0035                     i1l4951:	
  1258                           ;PWMmain.c: 167: val++;
  1259  0035  3001               	movlw	low(01h)
  1260  0036  07F7               	addwf	(_val),f
  1261  0037  1803               	skipnc
  1262  0038  0AF8               	incf	(_val+1),f
  1263  0039  3000               	movlw	high(01h)
  1264  003A  07F8               	addwf	(_val+1),f
  1265                           	line	168
  1266                           ;PWMmain.c: 168: }
  1267  003B  283F               	goto	i1l4955
  1268                           	line	169
  1269                           	
  1270  003C                     i1l1531:	
  1271                           	line	170
  1272                           	
  1273  003C                     i1l4953:	
  1274                           ;PWMmain.c: 169: else{
  1275                           ;PWMmain.c: 170: SSPBUF = 0;
  1276  003C  1283               	bcf	status, 5	;RP0=0, select bank0
  1277  003D  0193               	clrf	(19)	;volatile
  1278  003E  283F               	goto	i1l4955
  1279                           	line	171
  1280                           	
  1281  003F                     i1l1532:	
  1282                           	line	174
  1283                           	
  1284  003F                     i1l4955:	
  1285                           ;PWMmain.c: 171: }
  1286                           ;PWMmain.c: 174: SSPIF = 0;
  1287  003F  118C               	bcf	(99/8),(99)&7
  1288                           	line	177
  1289                           	
  1290  0040                     i1l1533:	
  1291  0040  0876               	movf	(??_isr+6),w
  1292  0041  00FF               	movwf	btemp+1
  1293  0042  0875               	movf	(??_isr+5),w
  1294  0043  008A               	movwf	pclath
  1295  0044  0874               	movf	(??_isr+4),w
  1296  0045  0084               	movwf	fsr0
  1297  0046  0E73               	swapf	(??_isr+3)^0FFFFFF80h,w
  1298  0047  0083               	movwf	status
  1299  0048  0EFE               	swapf	saved_w,f
  1300  0049  0E7E               	swapf	saved_w,w
  1301  004A  0009               	retfie
  1302                           	opt stack 0
  1303                           GLOBAL	__end_of_isr
  1304  004B                     	__end_of_isr:
  1305 ;; =============== function _isr ends ============
  1306                           
  1307                           	signat	_isr,88
  1308                           psect	text354,local,class=CODE,delta=2
  1309                           global __ptext354
  1310  0000                     __ptext354:
  1311                           	global	btemp
  1312  007E                     	btemp set 07Eh
  1313                           
  1314                           	DABS	1,126,2	;btemp
  1315                           	global	wtemp0
  1316  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Dec 14 16:08:13 2012

                        _RD 0C60                          _WR 0C61                          fsr 0004  
                       _CKE 04A6                         _CKP 00A4                         _GIE 005F  
                       _PR2 0092                         _SMP 04A7                         _isr 0015  
                       _val 0077                         fsr0 0004                         indf 0000  
                      l1510 006E                        l1511 006F                        l3040 00F1  
                      l1512 006F                        l3041 00F3                        l1521 0109  
                      l3050 00B2                        l3042 00F2                        l3051 00B6  
                      l3043 00F3                        l1540 0096                        l1541 0096  
                      l1509 0051                        l3039 00E7                        l1527 00D5  
                      l1536 0127                        l1539 0090                        l6001 005E  
                      l6003 0069                        ?_isr 0070                        l5941 008F  
                      l5933 0072                        l5943 0090                        l5935 007A  
                      l5951 00AC                        l5945 0095                        l5937 0087  
                      l5961 00E2                        l5953 00D6                        l5939 008E  
                      l5947 0097                        l5963 00E3                        l5955 00DA  
                      l5971 00B7                        l5949 009F                        l5965 00E4  
                      l5957 00E0                        l5981 00D1                        l5973 00CC  
                      l5967 00E7                        l5959 00E1                        l5975 00CE  
                      l5983 0121                        l5991 00FE                        l5969 00EC  
                      l5977 00CF                        l5993 0103                        l5979 00D0  
                      l5995 0106                        l5989 00F4                        l5997 004B  
                      l5999 0051                        u2340 0087                        u2341 0086  
                      u2350 00AC                        u2351 00AB                        u2360 00EC  
                      u2345 0083                        u2361 00EB                        u2355 00A8  
                      _PEIE 005E                        _INTE 005C                        _WREN 0C62  
                      u5_20 001C                        u5_21 001B                        u6_20 0025  
                      u6_21 0024             ??_directionInit 0036                        _main 004B  
                      btemp 007E                        start 0012                       ??_isr 0070  
                     ?_main 0070                       _EEADR 010D                       _CARRY 0018  
                     _T2CON 0012                       _PORTD 0008                       _SSPM0 00A0  
                     _SSPM1 00A1                       _SSPM2 00A2                       _SSPM3 00A3  
                     _TRISD 0088                       _SSPIE 0463                       _SSPIF 0063  
                     _SSPEN 00A5                       pclath 000A  __size_of_parseDirectionPWM 0025  
          __end_of_BeginPWM 00F4                       status 0003                       wtemp0 007E  
              __end_of_main 0072            __end_of_i2c_init 00D6                  _Initialise 00F4  
                    ??_main 003A            __end_of_SetPulse 00B7               main@direction 003A  
                    _EEDATA 010C                      _CCPR1L 0015                      _EECON1 018C  
                    _EECON2 018D                      i1l1530 001F                      i1l1531 003C  
                    i1l1532 003F                      i1l1533 0040                      i1l4951 0035  
                    i1l4943 0015                      i1l4953 003C                      i1l4945 001C  
                    i1l4955 003F                      i1l4947 001F                      i1l4949 0025  
                    _TMR2IF 0061                      _SSPADD 0093                      _TRISB3 0433  
                    _TRISC6 043E                      _TRISC7 043F                      _SSPBUF 0013  
                    clrloop 011A                      saved_w 007E              __pcstackCOMMON 0070  
               ?_Initialise 0070                   ?_BeginPWM 0070                  __pbssBANK0 0020  
                 ?_i2c_init 0070                   ?_SetPulse 0036                  __pmaintext 004B  
                __pintentry 0004                     _CCP1CON 0017                  ??_BeginPWM 0036  
                   _SSPSTAT 0094                  ??_i2c_init 0036         __size_of_Initialise 0016  
     __end_of_directionInit 0128                  ??_SetPulse 0038                   _T2CONbits 0012  
              __size_of_isr 0036        end_of_initialization 0115                   _PORTBbits 0006  
            SetPulse@length 0036                   _TRISCbits 0087                 _CCP1CONbits 0017  
              ??_Initialise 0036                   _i2cBuffer 0020         start_initialization 010A  
         __size_of_BeginPWM 001E                 __end_of_isr 004B          __end_of_Initialise 010A  
         __size_of_i2c_init 001F           __size_of_SetPulse 0020                SetPulse@temp 0038  
               __pbssCOMMON 0077               __pcstackBANK0 0036                   __ptext350 00D6  
                 __ptext351 0097                   __ptext352 0072                   __ptext353 0015  
                 __ptext354 0000                   __ptext346 0000                   __ptext347 00F4  
                 __ptext348 0121                   __ptext349 00B7           interrupt_function 0004  
                  _PIE1bits 008C                    _PIR1bits 000C                    _BeginPWM 00D6  
    __size_of_directionInit 0007                    _i2c_init 00B7                    _SetPulse 0097  
             __size_of_main 0027                    clear_ram 0119               _directionInit 0121  
                  _setSpeed 0034                    intlevel1 0000           _parseDirectionPWM 0072  
            ?_directionInit 0070          ?_parseDirectionPWM 0036         ??_parseDirectionPWM 0038  
 __end_of_parseDirectionPWM 0097  
