

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Tue Feb 12 20:45:01 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 18 "PWMmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 18 "PWMmain.c"
    45  2007  F4F4               	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFFFF & 0xF7FF ;#
    46                           	FNCALL	_main,_Initialise
    47                           	FNCALL	_main,_SetPulse
    48                           	FNCALL	_Initialise,_BeginPWM
    49                           	FNCALL	_Initialise,_i2cInit
    50                           	FNCALL	_Initialise,_directionInit
    51                           	FNROOT	_main
    52                           	FNCALL	_isr,_i2cIsrHandler
    53                           	FNCALL	_i2cIsrHandler,_i2cSend
    54                           	FNCALL	_i2cIsrHandler,_i2cDataUpdate
    55                           	FNCALL	intlevel1,_isr
    56                           	global	intlevel1
    57                           	FNROOT	intlevel1
    58                           	global	_dc
    59                           	global	_setSpeed
    60                           	global	_i2cBuffer
    61                           	global	_i2cBufferVal
    62                           	global	_i2cDirection
    63                           	global	_i2cRequest
    64                           	global	_i2cSpeed
    65                           	global	_CCP1CON
    66                           psect	text274,local,class=CODE,delta=2
    67                           global __ptext274
    68  0000                     __ptext274:
    69  0017                     _CCP1CON	set	23
    70                           	global	_CCP1CONbits
    71  0017                     _CCP1CONbits	set	23
    72                           	global	_CCPR1L
    73  0015                     _CCPR1L	set	21
    74                           	global	_PIR1bits
    75  000C                     _PIR1bits	set	12
    76                           	global	_PORTBbits
    77  0006                     _PORTBbits	set	6
    78                           	global	_PORTD
    79  0008                     _PORTD	set	8
    80                           	global	_SSPBUF
    81  0013                     _SSPBUF	set	19
    82                           	global	_T2CON
    83  0012                     _T2CON	set	18
    84                           	global	_T2CONbits
    85  0012                     _T2CONbits	set	18
    86                           	global	_TMR0
    87  0001                     _TMR0	set	1
    88                           	global	_CARRY
    89  0018                     _CARRY	set	24
    90                           	global	_CKP
    91  00A4                     _CKP	set	164
    92                           	global	_GIE
    93  005F                     _GIE	set	95
    94                           	global	_INTE
    95  005C                     _INTE	set	92
    96                           	global	_PEIE
    97  005E                     _PEIE	set	94
    98                           	global	_SSPEN
    99  00A5                     _SSPEN	set	165
   100                           	global	_SSPIF
   101  0063                     _SSPIF	set	99
   102                           	global	_SSPM0
   103  00A0                     _SSPM0	set	160
   104                           	global	_SSPM1
   105  00A1                     _SSPM1	set	161
   106                           	global	_SSPM2
   107  00A2                     _SSPM2	set	162
   108                           	global	_SSPM3
   109  00A3                     _SSPM3	set	163
   110                           	global	_TMR2IF
   111  0061                     _TMR2IF	set	97
   112                           	global	_OPTION_REG
   113  0081                     _OPTION_REG	set	129
   114                           	global	_PIE1bits
   115  008C                     _PIE1bits	set	140
   116                           	global	_PR2
   117  0092                     _PR2	set	146
   118                           	global	_SSPADD
   119  0093                     _SSPADD	set	147
   120                           	global	_SSPSTAT
   121  0094                     _SSPSTAT	set	148
   122                           	global	_TRISCbits
   123  0087                     _TRISCbits	set	135
   124                           	global	_TRISD
   125  0088                     _TRISD	set	136
   126                           	global	_CKE
   127  04A6                     _CKE	set	1190
   128                           	global	_SMP
   129  04A7                     _SMP	set	1191
   130                           	global	_SSPIE
   131  0463                     _SSPIE	set	1123
   132                           	global	_TRISB3
   133  0433                     _TRISB3	set	1075
   134                           	global	_TRISC6
   135  043E                     _TRISC6	set	1086
   136                           	global	_TRISC7
   137  043F                     _TRISC7	set	1087
   138                           	global	_EEADR
   139  010D                     _EEADR	set	269
   140                           	global	_EEDATA
   141  010C                     _EEDATA	set	268
   142                           	global	_EECON1
   143  018C                     _EECON1	set	396
   144                           	global	_EECON2
   145  018D                     _EECON2	set	397
   146                           	global	_RD
   147  0C60                     _RD	set	3168
   148                           	global	_WR
   149  0C61                     _WR	set	3169
   150                           	global	_WREN
   151  0C62                     _WREN	set	3170
   152                           	file	"C:\Users\Alan\AppData\Local\Temp\s2ms."
   153                           	line	#
   154                           psect cinit,class=CODE,delta=2
   155                           global start_initialization
   156  06C5                     start_initialization:
   157                           
   158                           psect	bssCOMMON,class=COMMON,space=1
   159                           global __pbssCOMMON
   160  0078                     __pbssCOMMON:
   161  0078                     _i2cBuffer:
   162  0078                            ds      2
   163                           
   164  007A                     _i2cBufferVal:
   165  007A                            ds      1
   166                           
   167  007B                     _i2cDirection:
   168  007B                            ds      1
   169                           
   170  007C                     _i2cRequest:
   171  007C                            ds      1
   172                           
   173  007D                     _i2cSpeed:
   174  007D                            ds      1
   175                           
   176                           psect	bssBANK0,class=BANK0,space=1
   177                           global __pbssBANK0
   178  0020                     __pbssBANK0:
   179  0020                     _dc:
   180  0020                            ds      2
   181                           
   182  0022                     _setSpeed:
   183  0022                            ds      2
   184                           
   185                           ; Clear objects allocated to COMMON
   186                           psect cinit,class=CODE,delta=2
   187  06C5  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   188  06C6  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   189  06C7  01FA               	clrf	((__pbssCOMMON)+2)&07Fh
   190  06C8  01FB               	clrf	((__pbssCOMMON)+3)&07Fh
   191  06C9  01FC               	clrf	((__pbssCOMMON)+4)&07Fh
   192  06CA  01FD               	clrf	((__pbssCOMMON)+5)&07Fh
   193                           ; Clear objects allocated to BANK0
   194                           psect cinit,class=CODE,delta=2
   195  06CB  01A0               	clrf	((__pbssBANK0)+0)&07Fh
   196  06CC  01A1               	clrf	((__pbssBANK0)+1)&07Fh
   197  06CD  01A2               	clrf	((__pbssBANK0)+2)&07Fh
   198  06CE  01A3               	clrf	((__pbssBANK0)+3)&07Fh
   199                           psect cinit,class=CODE,delta=2
   200                           global end_of_initialization
   201                           
   202                           ;End of C runtime variable initialization code
   203                           
   204  06CF                     end_of_initialization:
   205  06CF  0183               clrf status
   206  06D0  120A  118A  2F16   ljmp _main	;jump to C main() function
   207                           psect	cstackCOMMON,class=COMMON,space=1
   208                           global __pcstackCOMMON
   209  0071                     __pcstackCOMMON:
   210                           	global	?_i2cSend
   211  0071                     ?_i2cSend:	; 0 bytes @ 0x0
   212                           	global	??_i2cSend
   213  0071                     ??_i2cSend:	; 0 bytes @ 0x0
   214                           	global	?_i2cDataUpdate
   215  0071                     ?_i2cDataUpdate:	; 0 bytes @ 0x0
   216                           	global	??_i2cDataUpdate
   217  0071                     ??_i2cDataUpdate:	; 0 bytes @ 0x0
   218                           	global	?_Initialise
   219  0071                     ?_Initialise:	; 0 bytes @ 0x0
   220                           	global	?_BeginPWM
   221  0071                     ?_BeginPWM:	; 0 bytes @ 0x0
   222                           	global	?_directionInit
   223  0071                     ?_directionInit:	; 0 bytes @ 0x0
   224                           	global	?_i2cInit
   225  0071                     ?_i2cInit:	; 0 bytes @ 0x0
   226                           	global	?_i2cIsrHandler
   227  0071                     ?_i2cIsrHandler:	; 0 bytes @ 0x0
   228                           	global	?_main
   229  0071                     ?_main:	; 0 bytes @ 0x0
   230                           	global	?_isr
   231  0071                     ?_isr:	; 0 bytes @ 0x0
   232  0071                     	ds	2
   233                           	global	??_i2cIsrHandler
   234  0073                     ??_i2cIsrHandler:	; 0 bytes @ 0x2
   235  0073                     	ds	1
   236                           	global	??_isr
   237  0074                     ??_isr:	; 0 bytes @ 0x3
   238  0074                     	ds	4
   239                           psect	cstackBANK0,class=BANK0,space=1
   240                           global __pcstackBANK0
   241  0024                     __pcstackBANK0:
   242                           	global	?_SetPulse
   243  0024                     ?_SetPulse:	; 0 bytes @ 0x0
   244                           	global	??_BeginPWM
   245  0024                     ??_BeginPWM:	; 0 bytes @ 0x0
   246                           	global	??_directionInit
   247  0024                     ??_directionInit:	; 0 bytes @ 0x0
   248                           	global	??_i2cInit
   249  0024                     ??_i2cInit:	; 0 bytes @ 0x0
   250                           	global	i2cInit@address
   251  0024                     i2cInit@address:	; 1 bytes @ 0x0
   252                           	global	SetPulse@length
   253  0024                     SetPulse@length:	; 2 bytes @ 0x0
   254  0024                     	ds	1
   255                           	global	??_Initialise
   256  0025                     ??_Initialise:	; 0 bytes @ 0x1
   257  0025                     	ds	1
   258                           	global	??_SetPulse
   259  0026                     ??_SetPulse:	; 0 bytes @ 0x2
   260                           	global	SetPulse@temp
   261  0026                     SetPulse@temp:	; 2 bytes @ 0x2
   262  0026                     	ds	2
   263                           	global	??_main
   264  0028                     ??_main:	; 0 bytes @ 0x4
   265 ;;Data sizes: Strings 0, constant 0, data 0, bss 10, persistent 0 stack 0
   266 ;;Auto spaces:   Size  Autos    Used
   267 ;; COMMON          13      7      13
   268 ;; BANK0           80      4       8
   269 ;; BANK1           80      0       0
   270 ;; BANK3           96      0       0
   271 ;; BANK2           69      0       0
   272                           
   273 ;;
   274 ;; Pointer list with targets:
   275                           
   276                           
   277                           
   278 ;;
   279 ;; Critical Paths under _main in COMMON
   280 ;;
   281 ;;   None.
   282 ;;
   283 ;; Critical Paths under _isr in COMMON
   284 ;;
   285 ;;   _isr->_i2cIsrHandler
   286 ;;   _i2cIsrHandler->_i2cDataUpdate
   287 ;;
   288 ;; Critical Paths under _main in BANK0
   289 ;;
   290 ;;   _main->_SetPulse
   291 ;;   _Initialise->_i2cInit
   292 ;;
   293 ;; Critical Paths under _isr in BANK0
   294 ;;
   295 ;;   None.
   296 ;;
   297 ;; Critical Paths under _main in BANK1
   298 ;;
   299 ;;   None.
   300 ;;
   301 ;; Critical Paths under _isr in BANK1
   302 ;;
   303 ;;   None.
   304 ;;
   305 ;; Critical Paths under _main in BANK3
   306 ;;
   307 ;;   None.
   308 ;;
   309 ;; Critical Paths under _isr in BANK3
   310 ;;
   311 ;;   None.
   312 ;;
   313 ;; Critical Paths under _main in BANK2
   314 ;;
   315 ;;   None.
   316 ;;
   317 ;; Critical Paths under _isr in BANK2
   318 ;;
   319 ;;   None.
   320                           
   321 ;;
   322 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   323 ;;
   324                           
   325 ;;
   326 ;;Call Graph Tables:
   327 ;;
   328 ;; ---------------------------------------------------------------------------------
   329 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   330 ;; ---------------------------------------------------------------------------------
   331 ;; (0) _main                                                 2     2      0      90
   332 ;;                         _Initialise
   333 ;;                           _SetPulse
   334 ;; ---------------------------------------------------------------------------------
   335 ;; (1) _Initialise                                           0     0      0      22
   336 ;;                           _BeginPWM
   337 ;;                            _i2cInit
   338 ;;                      _directionInit
   339 ;; ---------------------------------------------------------------------------------
   340 ;; (2) _directionInit                                        0     0      0       0
   341 ;; ---------------------------------------------------------------------------------
   342 ;; (2) _BeginPWM                                             0     0      0       0
   343 ;; ---------------------------------------------------------------------------------
   344 ;; (1) _SetPulse                                             4     2      2      68
   345 ;;                                              0 BANK0      4     2      2
   346 ;; ---------------------------------------------------------------------------------
   347 ;; (2) _i2cInit                                              1     1      0      22
   348 ;;                                              0 BANK0      1     1      0
   349 ;; ---------------------------------------------------------------------------------
   350 ;; Estimated maximum stack depth 2
   351 ;; ---------------------------------------------------------------------------------
   352 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   353 ;; ---------------------------------------------------------------------------------
   354 ;; (3) _isr                                                  4     4      0       0
   355 ;;                                              3 COMMON     4     4      0
   356 ;;                      _i2cIsrHandler
   357 ;; ---------------------------------------------------------------------------------
   358 ;; (4) _i2cIsrHandler                                        1     1      0       0
   359 ;;                                              2 COMMON     1     1      0
   360 ;;                            _i2cSend
   361 ;;                      _i2cDataUpdate
   362 ;; ---------------------------------------------------------------------------------
   363 ;; (5) _i2cDataUpdate                                        2     2      0       0
   364 ;;                                              0 COMMON     2     2      0
   365 ;; ---------------------------------------------------------------------------------
   366 ;; (5) _i2cSend                                              0     0      0       0
   367 ;; ---------------------------------------------------------------------------------
   368 ;; Estimated maximum stack depth 5
   369 ;; ---------------------------------------------------------------------------------
   370                           
   371 ;; Call Graph Graphs:
   372                           
   373 ;; _main (ROOT)
   374 ;;   _Initialise
   375 ;;     _BeginPWM
   376 ;;     _i2cInit
   377 ;;     _directionInit
   378 ;;   _SetPulse
   379 ;;
   380 ;; _isr (ROOT)
   381 ;;   _i2cIsrHandler
   382 ;;     _i2cSend
   383 ;;     _i2cDataUpdate
   384 ;;
   385                           
   386 ;; Address spaces:
   387                           
   388 ;;Name               Size   Autos  Total    Cost      Usage
   389 ;;BITCOMMON            D      0       0       0        0.0%
   390 ;;EEDATA             100      0       0       0        0.0%
   391 ;;NULL                 0      0       0       0        0.0%
   392 ;;CODE                 0      0       0       0        0.0%
   393 ;;COMMON               D      7       D       1      100.0%
   394 ;;BITSFR0              0      0       0       1        0.0%
   395 ;;SFR0                 0      0       0       1        0.0%
   396 ;;BITSFR1              0      0       0       2        0.0%
   397 ;;SFR1                 0      0       0       2        0.0%
   398 ;;STACK                0      0       8       2        0.0%
   399 ;;BITBANK0            50      0       0       3        0.0%
   400 ;;BANK0               50      4       8       4       10.0%
   401 ;;BITSFR3              0      0       0       4        0.0%
   402 ;;SFR3                 0      0       0       4        0.0%
   403 ;;BITBANK1            50      0       0       5        0.0%
   404 ;;BITSFR2              0      0       0       5        0.0%
   405 ;;SFR2                 0      0       0       5        0.0%
   406 ;;BANK1               50      0       0       6        0.0%
   407 ;;BITBANK3            60      0       0       7        0.0%
   408 ;;BANK3               60      0       0       8        0.0%
   409 ;;BANK2               45      0       0       9        0.0%
   410 ;;ABS                  0      0      15      10        0.0%
   411 ;;BITBANK2            45      0       0      11        0.0%
   412 ;;DATA                 0      0      1D      12        0.0%
   413                           
   414                           	global	_main
   415                           psect	maintext,global,class=CODE,delta=2
   416                           global __pmaintext
   417  0716                     __pmaintext:
   418                           
   419 ;; *************** function _main *****************
   420 ;; Defined at:
   421 ;;		line 38 in file "PWMmain.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;  direction       2    0        int 
   426 ;; Return value:  Size  Location     Type
   427 ;;		None               void
   428 ;; Registers used:
   429 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   430 ;; Tracked objects:
   431 ;;		On entry : 17F/0
   432 ;;		On exit  : 0/0
   433 ;;		Unchanged: 0/0
   434 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   435 ;;      Params:         0       0       0       0       0
   436 ;;      Locals:         0       0       0       0       0
   437 ;;      Temps:          0       0       0       0       0
   438 ;;      Totals:         0       0       0       0       0
   439 ;;Total ram usage:        0 bytes
   440 ;; Hardware stack levels required when called:    5
   441 ;; This function calls:
   442 ;;		_Initialise
   443 ;;		_SetPulse
   444 ;; This function is called by:
   445 ;;		Startup code after reset
   446 ;; This function uses a non-reentrant model
   447 ;;
   448                           psect	maintext
   449                           	file	"PWMmain.c"
   450                           	line	38
   451                           	global	__size_of_main
   452  001D                     	__size_of_main	equ	__end_of_main-_main
   453                           	
   454  0716                     _main:	
   455                           	opt	stack 3
   456                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   457                           	line	41
   458                           	
   459  0716                     l7473:	
   460                           ;PWMmain.c: 40: int direction;
   461                           ;PWMmain.c: 41: Initialise();
   462  0716  120A  118A  26E5   	fcall	_Initialise
              120A  118A         
   463                           	line	42
   464                           	
   465  071B                     l7475:	
   466                           ;PWMmain.c: 42: OPTION_REG = 0b10100111;
   467  071B  30A7               	movlw	(0A7h)
   468  071C  1683               	bsf	status, 5	;RP0=1, select bank1
   469  071D  1303               	bcf	status, 6	;RP1=0, select bank1
   470  071E  0081               	movwf	(129)^080h	;volatile
   471  071F  2F20               	goto	l7477
   472                           	line	63
   473                           ;PWMmain.c: 63: while (1)
   474                           	
   475  0720                     l3045:	
   476                           	line	68
   477                           	
   478  0720                     l7477:	
   479                           ;PWMmain.c: 64: {
   480                           ;PWMmain.c: 68: SetPulse(150);
   481  0720  3096               	movlw	low(096h)
   482  0721  1283               	bcf	status, 5	;RP0=0, select bank0
   483  0722  00A4               	movwf	(?_SetPulse)
   484  0723  3000               	movlw	high(096h)
   485  0724  00A5               	movwf	((?_SetPulse))+1
   486  0725  120A  118A  2751   	fcall	_SetPulse
              120A  118A         
   487                           	line	69
   488                           	
   489  072A                     l7479:	
   490                           ;PWMmain.c: 69: PORTD = TMR0;
   491  072A  1283               	bcf	status, 5	;RP0=0, select bank0
   492  072B  1303               	bcf	status, 6	;RP1=0, select bank0
   493  072C  0801               	movf	(1),w	;volatile
   494  072D  0088               	movwf	(8)	;volatile
   495  072E  2F20               	goto	l7477
   496                           	line	70
   497                           	
   498  072F                     l3046:	
   499                           	line	63
   500  072F  2F20               	goto	l7477
   501                           	
   502  0730                     l3047:	
   503                           	line	73
   504                           	
   505  0730                     l3048:	
   506                           	global	start
   507  0730  120A  118A  2812   	ljmp	start
   508                           	opt stack 0
   509                           GLOBAL	__end_of_main
   510  0733                     	__end_of_main:
   511 ;; =============== function _main ends ============
   512                           
   513                           	signat	_main,88
   514                           	global	_Initialise
   515                           psect	text275,local,class=CODE,delta=2
   516                           global __ptext275
   517  06E5                     __ptext275:
   518                           
   519 ;; *************** function _Initialise *****************
   520 ;; Defined at:
   521 ;;		line 89 in file "PWMmain.c"
   522 ;; Parameters:    Size  Location     Type
   523 ;;		None
   524 ;; Auto vars:     Size  Location     Type
   525 ;;		None
   526 ;; Return value:  Size  Location     Type
   527 ;;		None               void
   528 ;; Registers used:
   529 ;;		wreg, status,2, status,0, pclath, cstack
   530 ;; Tracked objects:
   531 ;;		On entry : 0/0
   532 ;;		On exit  : 0/0
   533 ;;		Unchanged: 0/0
   534 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   535 ;;      Params:         0       0       0       0       0
   536 ;;      Locals:         0       0       0       0       0
   537 ;;      Temps:          0       0       0       0       0
   538 ;;      Totals:         0       0       0       0       0
   539 ;;Total ram usage:        0 bytes
   540 ;; Hardware stack levels used:    1
   541 ;; Hardware stack levels required when called:    4
   542 ;; This function calls:
   543 ;;		_BeginPWM
   544 ;;		_i2cInit
   545 ;;		_directionInit
   546 ;; This function is called by:
   547 ;;		_main
   548 ;; This function uses a non-reentrant model
   549 ;;
   550                           psect	text275
   551                           	file	"PWMmain.c"
   552                           	line	89
   553                           	global	__size_of_Initialise
   554  0017                     	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   555                           	
   556  06E5                     _Initialise:	
   557                           	opt	stack 3
   558                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   559                           	line	90
   560                           	
   561  06E5                     l7465:	
   562                           ;PWMmain.c: 90: BeginPWM();
   563  06E5  120A  118A  2733   	fcall	_BeginPWM
              120A  118A         
   564                           	line	91
   565                           ;PWMmain.c: 91: i2cInit(0x10);
   566  06EA  3010               	movlw	(010h)
   567  06EB  120A  118A  2771   	fcall	_i2cInit
              120A  118A         
   568                           	line	92
   569                           	
   570  06F0                     l7467:	
   571                           ;PWMmain.c: 92: directionInit();
   572  06F0  120A  118A  26BE   	fcall	_directionInit
              120A  118A         
   573                           	line	94
   574                           	
   575  06F5                     l7469:	
   576                           ;PWMmain.c: 94: TRISD = 0;
   577  06F5  1683               	bsf	status, 5	;RP0=1, select bank1
   578  06F6  1303               	bcf	status, 6	;RP1=0, select bank1
   579  06F7  0188               	clrf	(136)^080h	;volatile
   580                           	line	95
   581                           	
   582  06F8                     l7471:	
   583                           ;PWMmain.c: 95: PORTD = 0;
   584  06F8  1283               	bcf	status, 5	;RP0=0, select bank0
   585  06F9  1303               	bcf	status, 6	;RP1=0, select bank0
   586  06FA  0188               	clrf	(8)	;volatile
   587                           	line	96
   588                           	
   589  06FB                     l3057:	
   590  06FB  0008               	return
   591                           	opt stack 0
   592                           GLOBAL	__end_of_Initialise
   593  06FC                     	__end_of_Initialise:
   594 ;; =============== function _Initialise ends ============
   595                           
   596                           	signat	_Initialise,88
   597                           	global	_directionInit
   598                           psect	text276,local,class=CODE,delta=2
   599                           global __ptext276
   600  06BE                     __ptext276:
   601                           
   602 ;; *************** function _directionInit *****************
   603 ;; Defined at:
   604 ;;		line 126 in file "PWMmain.c"
   605 ;; Parameters:    Size  Location     Type
   606 ;;		None
   607 ;; Auto vars:     Size  Location     Type
   608 ;;		None
   609 ;; Return value:  Size  Location     Type
   610 ;;		None               void
   611 ;; Registers used:
   612 ;;		None
   613 ;; Tracked objects:
   614 ;;		On entry : 0/0
   615 ;;		On exit  : 0/0
   616 ;;		Unchanged: 0/0
   617 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   618 ;;      Params:         0       0       0       0       0
   619 ;;      Locals:         0       0       0       0       0
   620 ;;      Temps:          0       0       0       0       0
   621 ;;      Totals:         0       0       0       0       0
   622 ;;Total ram usage:        0 bytes
   623 ;; Hardware stack levels used:    1
   624 ;; Hardware stack levels required when called:    3
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_Initialise
   629 ;; This function uses a non-reentrant model
   630 ;;
   631                           psect	text276
   632                           	file	"PWMmain.c"
   633                           	line	126
   634                           	global	__size_of_directionInit
   635  0007                     	__size_of_directionInit	equ	__end_of_directionInit-_directionInit
   636                           	
   637  06BE                     _directionInit:	
   638                           	opt	stack 3
   639                           ; Regs used in _directionInit: []
   640                           	line	127
   641                           	
   642  06BE                     l7451:	
   643                           ;PWMmain.c: 127: TRISB3 = 0;
   644  06BE  1683               	bsf	status, 5	;RP0=1, select bank1
   645  06BF  1303               	bcf	status, 6	;RP1=0, select bank1
   646  06C0  1186               	bcf	(1075/8)^080h,(1075)&7
   647                           	line	128
   648                           ;PWMmain.c: 128: PORTBbits.RB3 = 0;
   649  06C1  1283               	bcf	status, 5	;RP0=0, select bank0
   650  06C2  1303               	bcf	status, 6	;RP1=0, select bank0
   651  06C3  1186               	bcf	(6),3	;volatile
   652                           	line	129
   653                           	
   654  06C4                     l3066:	
   655  06C4  0008               	return
   656                           	opt stack 0
   657                           GLOBAL	__end_of_directionInit
   658  06C5                     	__end_of_directionInit:
   659 ;; =============== function _directionInit ends ============
   660                           
   661                           	signat	_directionInit,88
   662                           	global	_BeginPWM
   663                           psect	text277,local,class=CODE,delta=2
   664                           global __ptext277
   665  0733                     __ptext277:
   666                           
   667 ;; *************** function _BeginPWM *****************
   668 ;; Defined at:
   669 ;;		line 41 in file "pwmlib.c"
   670 ;; Parameters:    Size  Location     Type
   671 ;;		None
   672 ;; Auto vars:     Size  Location     Type
   673 ;;		None
   674 ;; Return value:  Size  Location     Type
   675 ;;		None               void
   676 ;; Registers used:
   677 ;;		wreg, status,2
   678 ;; Tracked objects:
   679 ;;		On entry : 0/0
   680 ;;		On exit  : 0/0
   681 ;;		Unchanged: 0/0
   682 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   683 ;;      Params:         0       0       0       0       0
   684 ;;      Locals:         0       0       0       0       0
   685 ;;      Temps:          0       0       0       0       0
   686 ;;      Totals:         0       0       0       0       0
   687 ;;Total ram usage:        0 bytes
   688 ;; Hardware stack levels used:    1
   689 ;; Hardware stack levels required when called:    3
   690 ;; This function calls:
   691 ;;		Nothing
   692 ;; This function is called by:
   693 ;;		_Initialise
   694 ;; This function uses a non-reentrant model
   695 ;;
   696                           psect	text277
   697                           	file	"pwmlib.c"
   698                           	line	41
   699                           	global	__size_of_BeginPWM
   700  001E                     	__size_of_BeginPWM	equ	__end_of_BeginPWM-_BeginPWM
   701                           	
   702  0733                     _BeginPWM:	
   703                           	opt	stack 3
   704                           ; Regs used in _BeginPWM: [wreg+status,2]
   705                           	line	44
   706                           	
   707  0733                     l7433:	
   708                           ;pwmlib.c: 44: TRISCbits.TRISC5 = 1;
   709  0733  1683               	bsf	status, 5	;RP0=1, select bank1
   710  0734  1303               	bcf	status, 6	;RP1=0, select bank1
   711  0735  1687               	bsf	(135)^080h,5	;volatile
   712                           	line	47
   713                           ;pwmlib.c: 47: PIE1bits.TMR2IE = 0;
   714  0736  108C               	bcf	(140)^080h,1	;volatile
   715                           	line	51
   716                           	
   717  0737                     l7435:	
   718                           ;pwmlib.c: 51: PR2 = 0xFF;
   719  0737  30FF               	movlw	(0FFh)
   720  0738  0092               	movwf	(146)^080h	;volatile
   721                           	line	55
   722                           ;pwmlib.c: 55: CCP1CON = 0b00001100;
   723  0739  300C               	movlw	(0Ch)
   724  073A  1283               	bcf	status, 5	;RP0=0, select bank0
   725  073B  1303               	bcf	status, 6	;RP1=0, select bank0
   726  073C  0097               	movwf	(23)	;volatile
   727                           	line	59
   728                           	
   729  073D                     l7437:	
   730                           ;pwmlib.c: 59: CCPR1L = 0;
   731  073D  0195               	clrf	(21)	;volatile
   732                           	line	60
   733                           	
   734  073E                     l7439:	
   735                           ;pwmlib.c: 60: CCP1CONbits.CCP1X = 0;
   736  073E  1297               	bcf	(23),5	;volatile
   737                           	line	61
   738                           	
   739  073F                     l7441:	
   740                           ;pwmlib.c: 61: CCP1CONbits.CCP1Y = 0;
   741  073F  1217               	bcf	(23),4	;volatile
   742                           	line	66
   743                           	
   744  0740                     l7443:	
   745                           ;pwmlib.c: 66: PIR1bits.TMR2IF = 0;
   746  0740  108C               	bcf	(12),1	;volatile
   747                           	line	70
   748                           	
   749  0741                     l7445:	
   750                           ;pwmlib.c: 70: T2CON = 0b00000100;
   751  0741  3004               	movlw	(04h)
   752  0742  0092               	movwf	(18)	;volatile
   753  0743  2F44               	goto	l7447
   754                           	line	75
   755                           ;pwmlib.c: 75: while(1)
   756                           	
   757  0744                     l4569:	
   758                           	line	77
   759                           	
   760  0744                     l7447:	
   761                           ;pwmlib.c: 76: {
   762                           ;pwmlib.c: 77: if(PIR1bits.TMR2IF == 1)
   763  0744  1283               	bcf	status, 5	;RP0=0, select bank0
   764  0745  1C8C               	btfss	(12),1	;volatile
   765  0746  2F48               	goto	u2371
   766  0747  2F49               	goto	u2370
   767  0748                     u2371:
   768  0748  2F44               	goto	l7447
   769  0749                     u2370:
   770                           	line	79
   771                           	
   772  0749                     l7449:	
   773                           ;pwmlib.c: 78: {
   774                           ;pwmlib.c: 79: TMR2IF = 0;
   775  0749  108C               	bcf	(97/8),(97)&7
   776                           	line	80
   777                           ;pwmlib.c: 80: TRISCbits.TRISC5 = 0;
   778  074A  1683               	bsf	status, 5	;RP0=1, select bank1
   779  074B  1303               	bcf	status, 6	;RP1=0, select bank1
   780  074C  1287               	bcf	(135)^080h,5	;volatile
   781                           	line	81
   782                           ;pwmlib.c: 81: break;
   783  074D  2F50               	goto	l4573
   784                           	line	82
   785                           	
   786  074E                     l4570:	
   787  074E  2F44               	goto	l7447
   788                           	line	83
   789                           	
   790  074F                     l4572:	
   791                           	line	75
   792  074F  2F44               	goto	l7447
   793                           	
   794  0750                     l4571:	
   795                           	line	84
   796                           	
   797  0750                     l4573:	
   798  0750  0008               	return
   799                           	opt stack 0
   800                           GLOBAL	__end_of_BeginPWM
   801  0751                     	__end_of_BeginPWM:
   802 ;; =============== function _BeginPWM ends ============
   803                           
   804                           	signat	_BeginPWM,88
   805                           	global	_SetPulse
   806                           psect	text278,local,class=CODE,delta=2
   807                           global __ptext278
   808  0751                     __ptext278:
   809                           
   810 ;; *************** function _SetPulse *****************
   811 ;; Defined at:
   812 ;;		line 105 in file "pwmlib.c"
   813 ;; Parameters:    Size  Location     Type
   814 ;;  length          2    0[BANK0 ] int 
   815 ;; Auto vars:     Size  Location     Type
   816 ;;  temp            2    2[BANK0 ] int 
   817 ;; Return value:  Size  Location     Type
   818 ;;		None               void
   819 ;; Registers used:
   820 ;;		wreg, status,2, status,0, btemp+1
   821 ;; Tracked objects:
   822 ;;		On entry : 0/0
   823 ;;		On exit  : 0/0
   824 ;;		Unchanged: 0/0
   825 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   826 ;;      Params:         0       2       0       0       0
   827 ;;      Locals:         0       2       0       0       0
   828 ;;      Temps:          0       0       0       0       0
   829 ;;      Totals:         0       4       0       0       0
   830 ;;Total ram usage:        4 bytes
   831 ;; Hardware stack levels used:    1
   832 ;; Hardware stack levels required when called:    3
   833 ;; This function calls:
   834 ;;		Nothing
   835 ;; This function is called by:
   836 ;;		_main
   837 ;;		_CalcPulse
   838 ;; This function uses a non-reentrant model
   839 ;;
   840                           psect	text278
   841                           	file	"pwmlib.c"
   842                           	line	105
   843                           	global	__size_of_SetPulse
   844  0020                     	__size_of_SetPulse	equ	__end_of_SetPulse-_SetPulse
   845                           	
   846  0751                     _SetPulse:	
   847                           	opt	stack 4
   848                           ; Regs used in _SetPulse: [wreg+status,2+status,0+btemp+1]
   849                           	line	106
   850                           	
   851  0751                     l7427:	
   852                           ;pwmlib.c: 106: int temp = length;
   853  0751  1283               	bcf	status, 5	;RP0=0, select bank0
   854  0752  1303               	bcf	status, 6	;RP1=0, select bank0
   855  0753  0825               	movf	(SetPulse@length+1),w
   856  0754  01A7               	clrf	(SetPulse@temp+1)
   857  0755  07A7               	addwf	(SetPulse@temp+1)
   858  0756  0824               	movf	(SetPulse@length),w
   859  0757  01A6               	clrf	(SetPulse@temp)
   860  0758  07A6               	addwf	(SetPulse@temp)
   861                           
   862                           	line	107
   863                           	
   864  0759                     l7429:	
   865                           ;pwmlib.c: 107: if (temp > 255)
   866  0759  0827               	movf	(SetPulse@temp+1),w
   867  075A  3A80               	xorlw	80h
   868  075B  00FF               	movwf	btemp+1
   869  075C  3081               	movlw	(high(0100h))^80h
   870  075D  027F               	subwf	btemp+1,w
   871  075E  1D03               	skipz
   872  075F  2F62               	goto	u2365
   873  0760  3000               	movlw	low(0100h)
   874  0761  0226               	subwf	(SetPulse@temp),w
   875  0762                     u2365:
   876                           
   877  0762  1C03               	skipc
   878  0763  2F65               	goto	u2361
   879  0764  2F66               	goto	u2360
   880  0765                     u2361:
   881  0765  2F6C               	goto	l4580
   882  0766                     u2360:
   883                           	line	108
   884                           	
   885  0766                     l7431:	
   886                           ;pwmlib.c: 108: temp = 255;
   887  0766  30FF               	movlw	low(0FFh)
   888  0767  1283               	bcf	status, 5	;RP0=0, select bank0
   889  0768  1303               	bcf	status, 6	;RP1=0, select bank0
   890  0769  00A6               	movwf	(SetPulse@temp)
   891  076A  3000               	movlw	high(0FFh)
   892  076B  00A7               	movwf	((SetPulse@temp))+1
   893                           	
   894  076C                     l4580:	
   895                           	line	109
   896                           ;pwmlib.c: 109: CCPR1L = temp;
   897  076C  1283               	bcf	status, 5	;RP0=0, select bank0
   898  076D  1303               	bcf	status, 6	;RP1=0, select bank0
   899  076E  0826               	movf	(SetPulse@temp),w
   900  076F  0095               	movwf	(21)	;volatile
   901                           	line	113
   902                           	
   903  0770                     l4581:	
   904  0770  0008               	return
   905                           	opt stack 0
   906                           GLOBAL	__end_of_SetPulse
   907  0771                     	__end_of_SetPulse:
   908 ;; =============== function _SetPulse ends ============
   909                           
   910                           	signat	_SetPulse,4216
   911                           	global	_i2cInit
   912                           psect	text279,local,class=CODE,delta=2
   913                           global __ptext279
   914  0771                     __ptext279:
   915                           
   916 ;; *************** function _i2cInit *****************
   917 ;; Defined at:
   918 ;;		line 7 in file "i2cSlave.c"
   919 ;; Parameters:    Size  Location     Type
   920 ;;  address         1    wreg     unsigned char 
   921 ;; Auto vars:     Size  Location     Type
   922 ;;  address         1    0[BANK0 ] unsigned char 
   923 ;; Return value:  Size  Location     Type
   924 ;;		None               void
   925 ;; Registers used:
   926 ;;		wreg
   927 ;; Tracked objects:
   928 ;;		On entry : 0/0
   929 ;;		On exit  : 0/0
   930 ;;		Unchanged: 0/0
   931 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   932 ;;      Params:         0       0       0       0       0
   933 ;;      Locals:         0       1       0       0       0
   934 ;;      Temps:          0       0       0       0       0
   935 ;;      Totals:         0       1       0       0       0
   936 ;;Total ram usage:        1 bytes
   937 ;; Hardware stack levels used:    1
   938 ;; Hardware stack levels required when called:    3
   939 ;; This function calls:
   940 ;;		Nothing
   941 ;; This function is called by:
   942 ;;		_Initialise
   943 ;; This function uses a non-reentrant model
   944 ;;
   945                           psect	text279
   946                           	file	"i2cSlave.c"
   947                           	line	7
   948                           	global	__size_of_i2cInit
   949  0023                     	__size_of_i2cInit	equ	__end_of_i2cInit-_i2cInit
   950                           	
   951  0771                     _i2cInit:	
   952                           	opt	stack 3
   953                           ; Regs used in _i2cInit: [wreg]
   954                           ;i2cInit@address stored from wreg
   955                           	line	9
   956  0771  1283               	bcf	status, 5	;RP0=0, select bank0
   957  0772  1303               	bcf	status, 6	;RP1=0, select bank0
   958  0773  00A4               	movwf	(i2cInit@address)
   959                           	
   960  0774                     l7415:	
   961                           ;i2cSlave.c: 9: TRISC6 = 1;
   962  0774  1683               	bsf	status, 5	;RP0=1, select bank1
   963  0775  1303               	bcf	status, 6	;RP1=0, select bank1
   964  0776  1707               	bsf	(1086/8)^080h,(1086)&7
   965                           	line	10
   966                           ;i2cSlave.c: 10: TRISC7 = 1;
   967  0777  1787               	bsf	(1087/8)^080h,(1087)&7
   968                           	line	11
   969                           ;i2cSlave.c: 11: SSPEN = 1;
   970  0778  1283               	bcf	status, 5	;RP0=0, select bank0
   971  0779  1303               	bcf	status, 6	;RP1=0, select bank0
   972  077A  1694               	bsf	(165/8),(165)&7
   973                           	line	12
   974                           ;i2cSlave.c: 12: CKE = 0;
   975  077B  1683               	bsf	status, 5	;RP0=1, select bank1
   976  077C  1303               	bcf	status, 6	;RP1=0, select bank1
   977  077D  1314               	bcf	(1190/8)^080h,(1190)&7
   978                           	line	13
   979                           ;i2cSlave.c: 13: SMP = 0;
   980  077E  1394               	bcf	(1191/8)^080h,(1191)&7
   981                           	line	14
   982                           ;i2cSlave.c: 14: CKP = 1;
   983  077F  1283               	bcf	status, 5	;RP0=0, select bank0
   984  0780  1303               	bcf	status, 6	;RP1=0, select bank0
   985  0781  1614               	bsf	(164/8),(164)&7
   986                           	line	16
   987                           ;i2cSlave.c: 16: SSPM0 = 0;
   988  0782  1014               	bcf	(160/8),(160)&7
   989                           	line	17
   990                           ;i2cSlave.c: 17: SSPM1 = 1;
   991  0783  1494               	bsf	(161/8),(161)&7
   992                           	line	18
   993                           ;i2cSlave.c: 18: SSPM2 = 1;
   994  0784  1514               	bsf	(162/8),(162)&7
   995                           	line	19
   996                           ;i2cSlave.c: 19: SSPM3 = 0;
   997  0785  1194               	bcf	(163/8),(163)&7
   998                           	line	21
   999                           ;i2cSlave.c: 21: SSPIE =1;
  1000  0786  1683               	bsf	status, 5	;RP0=1, select bank1
  1001  0787  1303               	bcf	status, 6	;RP1=0, select bank1
  1002  0788  158C               	bsf	(1123/8)^080h,(1123)&7
  1003                           	line	23
  1004                           	
  1005  0789                     l7417:	
  1006                           ;i2cSlave.c: 23: SSPADD = address;
  1007  0789  1283               	bcf	status, 5	;RP0=0, select bank0
  1008  078A  1303               	bcf	status, 6	;RP1=0, select bank0
  1009  078B  0824               	movf	(i2cInit@address),w
  1010  078C  1683               	bsf	status, 5	;RP0=1, select bank1
  1011  078D  1303               	bcf	status, 6	;RP1=0, select bank1
  1012  078E  0093               	movwf	(147)^080h	;volatile
  1013                           	line	24
  1014                           	
  1015  078F                     l7419:	
  1016                           ;i2cSlave.c: 24: PEIE = 1;
  1017  078F  170B               	bsf	(94/8),(94)&7
  1018                           	line	25
  1019                           	
  1020  0790                     l7421:	
  1021                           ;i2cSlave.c: 25: GIE = 1;
  1022  0790  178B               	bsf	(95/8),(95)&7
  1023                           	line	26
  1024                           	
  1025  0791                     l7423:	
  1026                           ;i2cSlave.c: 26: INTE = 1;
  1027  0791  160B               	bsf	(92/8),(92)&7
  1028                           	line	29
  1029                           	
  1030  0792                     l7425:	
  1031                           ;i2cSlave.c: 29: i2cBufferVal = 0;
  1032  0792  01FA               	clrf	(_i2cBufferVal)
  1033                           	line	30
  1034                           	
  1035  0793                     l1505:	
  1036  0793  0008               	return
  1037                           	opt stack 0
  1038                           GLOBAL	__end_of_i2cInit
  1039  0794                     	__end_of_i2cInit:
  1040 ;; =============== function _i2cInit ends ============
  1041                           
  1042                           	signat	_i2cInit,4216
  1043                           	global	_isr
  1044                           psect	text280,local,class=CODE,delta=2
  1045                           global __ptext280
  1046  06D3                     __ptext280:
  1047                           
  1048 ;; *************** function _isr *****************
  1049 ;; Defined at:
  1050 ;;		line 116 in file "PWMmain.c"
  1051 ;; Parameters:    Size  Location     Type
  1052 ;;		None
  1053 ;; Auto vars:     Size  Location     Type
  1054 ;;		None
  1055 ;; Return value:  Size  Location     Type
  1056 ;;		None               void
  1057 ;; Registers used:
  1058 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1059 ;; Tracked objects:
  1060 ;;		On entry : 0/0
  1061 ;;		On exit  : 0/0
  1062 ;;		Unchanged: 0/0
  1063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1064 ;;      Params:         0       0       0       0       0
  1065 ;;      Locals:         0       0       0       0       0
  1066 ;;      Temps:          4       0       0       0       0
  1067 ;;      Totals:         4       0       0       0       0
  1068 ;;Total ram usage:        4 bytes
  1069 ;; Hardware stack levels used:    1
  1070 ;; Hardware stack levels required when called:    2
  1071 ;; This function calls:
  1072 ;;		_i2cIsrHandler
  1073 ;; This function is called by:
  1074 ;;		Interrupt level 1
  1075 ;; This function uses a non-reentrant model
  1076 ;;
  1077                           psect	text280
  1078                           	file	"PWMmain.c"
  1079                           	line	116
  1080                           	global	__size_of_isr
  1081  0012                     	__size_of_isr	equ	__end_of_isr-_isr
  1082                           	
  1083  06D3                     _isr:	
  1084                           	opt	stack 3
  1085                           ; Regs used in _isr: [allreg]
  1086                           psect	intentry,class=CODE,delta=2
  1087                           global __pintentry
  1088  0004                     __pintentry:
  1089                           global interrupt_function
  1090  0004                     interrupt_function:
  1091                           	global saved_w
  1092  007E                     	saved_w	set	btemp+0
  1093  0004  00FE               	movwf	saved_w
  1094  0005  0E03               	swapf	status,w
  1095  0006  00F4               	movwf	(??_isr+0)
  1096  0007  0804               	movf	fsr0,w
  1097  0008  00F5               	movwf	(??_isr+1)
  1098  0009  080A               	movf	pclath,w
  1099  000A  00F6               	movwf	(??_isr+2)
  1100  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1101  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1102  000D  087F               	movf	btemp+1,w
  1103  000E  00F7               	movwf	(??_isr+3)
  1104  000F  120A  118A  2ED3   	ljmp	_isr
  1105                           psect	text280
  1106                           	line	117
  1107                           	
  1108  06D3                     i1l6505:	
  1109                           ;PWMmain.c: 117: i2cIsrHandler();
  1110  06D3  120A  118A  2794   	fcall	_i2cIsrHandler
              120A  118A         
  1111                           	line	119
  1112                           	
  1113  06D8                     i1l3063:	
  1114  06D8  0877               	movf	(??_isr+3),w
  1115  06D9  1283               	bcf	status, 5	;RP0=0, select bank0
  1116  06DA  1303               	bcf	status, 6	;RP1=0, select bank0
  1117  06DB  00FF               	movwf	btemp+1
  1118  06DC  0876               	movf	(??_isr+2),w
  1119  06DD  008A               	movwf	pclath
  1120  06DE  0875               	movf	(??_isr+1),w
  1121  06DF  0084               	movwf	fsr0
  1122  06E0  0E74               	swapf	(??_isr+0)^0FFFFFF80h,w
  1123  06E1  0083               	movwf	status
  1124  06E2  0EFE               	swapf	saved_w,f
  1125  06E3  0E7E               	swapf	saved_w,w
  1126  06E4  0009               	retfie
  1127                           	opt stack 0
  1128                           GLOBAL	__end_of_isr
  1129  06E5                     	__end_of_isr:
  1130 ;; =============== function _isr ends ============
  1131                           
  1132                           	signat	_isr,88
  1133                           	global	_i2cIsrHandler
  1134                           psect	text281,local,class=CODE,delta=2
  1135                           global __ptext281
  1136  0794                     __ptext281:
  1137                           
  1138 ;; *************** function _i2cIsrHandler *****************
  1139 ;; Defined at:
  1140 ;;		line 32 in file "i2cSlave.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;		None
  1145 ;; Return value:  Size  Location     Type
  1146 ;;		None               void
  1147 ;; Registers used:
  1148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1154 ;;      Params:         0       0       0       0       0
  1155 ;;      Locals:         0       0       0       0       0
  1156 ;;      Temps:          1       0       0       0       0
  1157 ;;      Totals:         1       0       0       0       0
  1158 ;;Total ram usage:        1 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:    1
  1161 ;; This function calls:
  1162 ;;		_i2cSend
  1163 ;;		_i2cDataUpdate
  1164 ;; This function is called by:
  1165 ;;		_isr
  1166 ;; This function uses a non-reentrant model
  1167 ;;
  1168                           psect	text281
  1169                           	file	"i2cSlave.c"
  1170                           	line	32
  1171                           	global	__size_of_i2cIsrHandler
  1172  006C                     	__size_of_i2cIsrHandler	equ	__end_of_i2cIsrHandler-_i2cIsrHandler
  1173                           	
  1174  0794                     _i2cIsrHandler:	
  1175                           	opt	stack 3
  1176                           ; Regs used in _i2cIsrHandler: [allreg]
  1177                           	line	42
  1178                           	
  1179  0794                     i1l6425:	
  1180                           ;i2cSlave.c: 42: if ((SSPSTAT & 0b00100100) == 0b00100000){
  1181  0794  1683               	bsf	status, 5	;RP0=1, select bank1
  1182  0795  1303               	bcf	status, 6	;RP1=0, select bank1
  1183  0796  0814               	movf	(148)^080h,w
  1184  0797  3924               	andlw	024h
  1185  0798  3A20               	xorlw	020h
  1186  0799  1D03               	skipz
  1187  079A  2F9C               	goto	u1_21
  1188  079B  2F9D               	goto	u1_20
  1189  079C                     u1_21:
  1190  079C  2FAB               	goto	i1l6431
  1191  079D                     u1_20:
  1192                           	line	43
  1193                           	
  1194  079D                     i1l6427:	
  1195                           ;i2cSlave.c: 43: i2cBuffer[i2cBufferVal] = SSPBUF;
  1196  079D  1283               	bcf	status, 5	;RP0=0, select bank0
  1197  079E  1303               	bcf	status, 6	;RP1=0, select bank0
  1198  079F  0813               	movf	(19),w	;volatile
  1199  07A0  00F3               	movwf	(??_i2cIsrHandler+0)+0
  1200  07A1  087A               	movf	(_i2cBufferVal),w
  1201  07A2  3E78               	addlw	_i2cBuffer&0ffh
  1202  07A3  0084               	movwf	fsr0
  1203  07A4  0873               	movf	(??_i2cIsrHandler+0)+0,w
  1204  07A5  0080               	movwf	indf
  1205                           	line	44
  1206                           	
  1207  07A6                     i1l6429:	
  1208                           ;i2cSlave.c: 44: i2cBufferVal++;
  1209  07A6  3001               	movlw	(01h)
  1210  07A7  00F3               	movwf	(??_i2cIsrHandler+0)+0
  1211  07A8  0873               	movf	(??_i2cIsrHandler+0)+0,w
  1212  07A9  07FA               	addwf	(_i2cBufferVal),f
  1213                           	line	46
  1214                           ;i2cSlave.c: 46: } else if ((SSPSTAT & 0b00100100) == 0b0000000){
  1215  07AA  2FEE               	goto	i1l6449
  1216                           	
  1217  07AB                     i1l1508:	
  1218                           	
  1219  07AB                     i1l6431:	
  1220  07AB  1683               	bsf	status, 5	;RP0=1, select bank1
  1221  07AC  1303               	bcf	status, 6	;RP1=0, select bank1
  1222  07AD  0814               	movf	(148)^080h,w
  1223  07AE  3924               	andlw	024h
  1224  07AF  1D03               	btfss	status,2
  1225  07B0  2FB2               	goto	u2_21
  1226  07B1  2FB3               	goto	u2_20
  1227  07B2                     u2_21:
  1228  07B2  2FB7               	goto	i1l6435
  1229  07B3                     u2_20:
  1230                           	line	48
  1231                           	
  1232  07B3                     i1l6433:	
  1233                           ;i2cSlave.c: 48: SSPBUF = 0;
  1234  07B3  1283               	bcf	status, 5	;RP0=0, select bank0
  1235  07B4  1303               	bcf	status, 6	;RP1=0, select bank0
  1236  07B5  0193               	clrf	(19)	;volatile
  1237                           	line	50
  1238                           ;i2cSlave.c: 50: } else if ((SSPSTAT & 0b00100100) == 0b0000100){
  1239  07B6  2FEE               	goto	i1l6449
  1240                           	
  1241  07B7                     i1l1510:	
  1242                           	
  1243  07B7                     i1l6435:	
  1244  07B7  1683               	bsf	status, 5	;RP0=1, select bank1
  1245  07B8  1303               	bcf	status, 6	;RP1=0, select bank1
  1246  07B9  0814               	movf	(148)^080h,w
  1247  07BA  3924               	andlw	024h
  1248  07BB  3A04               	xorlw	04h
  1249  07BC  1D03               	skipz
  1250  07BD  2FBF               	goto	u3_21
  1251  07BE  2FC0               	goto	u3_20
  1252  07BF                     u3_21:
  1253  07BF  2FC2               	goto	i1l6439
  1254  07C0                     u3_20:
  1255  07C0  2FEE               	goto	i1l6449
  1256                           	line	53
  1257                           	
  1258  07C1                     i1l6437:	
  1259                           ;i2cSlave.c: 53: } else if ((SSPSTAT & 0b00100100) == 0b0010100){
  1260  07C1  2FEE               	goto	i1l6449
  1261                           	
  1262  07C2                     i1l1512:	
  1263                           	
  1264  07C2                     i1l6439:	
  1265  07C2  0814               	movf	(148)^080h,w
  1266  07C3  3924               	andlw	024h
  1267  07C4  3A14               	xorlw	014h
  1268  07C5  1D03               	skipz
  1269  07C6  2FC8               	goto	u4_21
  1270  07C7  2FC9               	goto	u4_20
  1271  07C8                     u4_21:
  1272  07C8  2FEE               	goto	i1l6449
  1273  07C9                     u4_20:
  1274                           	line	55
  1275                           	
  1276  07C9                     i1l6441:	
  1277                           ;i2cSlave.c: 55: i2cRequest = SSPBUF;
  1278  07C9  1283               	bcf	status, 5	;RP0=0, select bank0
  1279  07CA  1303               	bcf	status, 6	;RP1=0, select bank0
  1280  07CB  0813               	movf	(19),w	;volatile
  1281  07CC  00F3               	movwf	(??_i2cIsrHandler+0)+0
  1282  07CD  0873               	movf	(??_i2cIsrHandler+0)+0,w
  1283  07CE  00FC               	movwf	(_i2cRequest)
  1284                           	line	57
  1285                           ;i2cSlave.c: 57: if (i2cRequest == 1){
  1286  07CF  087C               	movf	(_i2cRequest),w
  1287  07D0  3A01               	xorlw	01h
  1288  07D1  1D03               	skipz
  1289  07D2  2FD4               	goto	u5_21
  1290  07D3  2FD5               	goto	u5_20
  1291  07D4                     u5_21:
  1292  07D4  2FDC               	goto	i1l6445
  1293  07D5                     u5_20:
  1294                           	line	58
  1295                           	
  1296  07D5                     i1l6443:	
  1297                           ;i2cSlave.c: 58: i2cSend(0x00);
  1298  07D5  3000               	movlw	(0)
  1299  07D6  120A  118A  26BD   	fcall	_i2cSend
              120A  118A         
  1300                           	line	59
  1301                           ;i2cSlave.c: 59: } else if (i2cRequest == 2){
  1302  07DB  2FEE               	goto	i1l6449
  1303                           	
  1304  07DC                     i1l1515:	
  1305                           	
  1306  07DC                     i1l6445:	
  1307  07DC  087C               	movf	(_i2cRequest),w
  1308  07DD  3A02               	xorlw	02h
  1309  07DE  1D03               	skipz
  1310  07DF  2FE1               	goto	u6_21
  1311  07E0  2FE2               	goto	u6_20
  1312  07E1                     u6_21:
  1313  07E1  2FEE               	goto	i1l6449
  1314  07E2                     u6_20:
  1315                           	line	60
  1316                           	
  1317  07E2                     i1l6447:	
  1318                           ;i2cSlave.c: 60: i2cSend(0x00);
  1319  07E2  3000               	movlw	(0)
  1320  07E3  120A  118A  26BD   	fcall	_i2cSend
              120A  118A         
  1321  07E8  2FEE               	goto	i1l6449
  1322                           	line	61
  1323                           	
  1324  07E9                     i1l1517:	
  1325  07E9  2FEE               	goto	i1l6449
  1326                           	line	62
  1327                           	
  1328  07EA                     i1l1516:	
  1329  07EA  2FEE               	goto	i1l6449
  1330                           	
  1331  07EB                     i1l1514:	
  1332  07EB  2FEE               	goto	i1l6449
  1333                           	line	65
  1334                           	
  1335  07EC                     i1l1513:	
  1336  07EC  2FEE               	goto	i1l6449
  1337                           	
  1338  07ED                     i1l1511:	
  1339  07ED  2FEE               	goto	i1l6449
  1340                           	
  1341  07EE                     i1l1509:	
  1342                           	
  1343  07EE                     i1l6449:	
  1344                           ;i2cSlave.c: 61: }
  1345                           ;i2cSlave.c: 62: }
  1346                           ;i2cSlave.c: 65: SSPIF = 0;
  1347  07EE  1283               	bcf	status, 5	;RP0=0, select bank0
  1348  07EF  1303               	bcf	status, 6	;RP1=0, select bank0
  1349  07F0  118C               	bcf	(99/8),(99)&7
  1350                           	line	67
  1351                           	
  1352  07F1                     i1l6451:	
  1353                           ;i2cSlave.c: 67: if (i2cBufferVal == 2){
  1354  07F1  087A               	movf	(_i2cBufferVal),w
  1355  07F2  3A02               	xorlw	02h
  1356  07F3  1D03               	skipz
  1357  07F4  2FF6               	goto	u7_21
  1358  07F5  2FF7               	goto	u7_20
  1359  07F6                     u7_21:
  1360  07F6  2FFF               	goto	i1l1519
  1361  07F7                     u7_20:
  1362                           	line	68
  1363                           	
  1364  07F7                     i1l6453:	
  1365                           ;i2cSlave.c: 68: i2cBufferVal = 0;
  1366  07F7  01FA               	clrf	(_i2cBufferVal)
  1367                           	line	69
  1368                           	
  1369  07F8                     i1l6455:	
  1370                           ;i2cSlave.c: 69: i2cDataUpdate();
  1371  07F8  120A  118A  26FC   	fcall	_i2cDataUpdate
              120A  118A         
  1372  07FD  2FFF               	goto	i1l1519
  1373                           	line	70
  1374                           	
  1375  07FE                     i1l1518:	
  1376  07FE  2FFF               	goto	i1l1519
  1377                           	line	71
  1378                           	
  1379  07FF                     i1l6457:	
  1380                           	line	72
  1381                           ;i2cSlave.c: 70: }
  1382                           ;i2cSlave.c: 71: return;
  1383                           	
  1384  07FF                     i1l1519:	
  1385  07FF  0008               	return
  1386                           	opt stack 0
  1387                           GLOBAL	__end_of_i2cIsrHandler
  1388  0800                     	__end_of_i2cIsrHandler:
  1389 ;; =============== function _i2cIsrHandler ends ============
  1390                           
  1391                           	signat	_i2cIsrHandler,88
  1392                           	global	_i2cDataUpdate
  1393                           psect	text282,local,class=CODE,delta=2
  1394                           global __ptext282
  1395  06FC                     __ptext282:
  1396                           
  1397 ;; *************** function _i2cDataUpdate *****************
  1398 ;; Defined at:
  1399 ;;		line 75 in file "i2cSlave.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;		None
  1404 ;; Return value:  Size  Location     Type
  1405 ;;		None               void
  1406 ;; Registers used:
  1407 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1408 ;; Tracked objects:
  1409 ;;		On entry : 0/0
  1410 ;;		On exit  : 0/0
  1411 ;;		Unchanged: 0/0
  1412 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1413 ;;      Params:         0       0       0       0       0
  1414 ;;      Locals:         0       0       0       0       0
  1415 ;;      Temps:          2       0       0       0       0
  1416 ;;      Totals:         2       0       0       0       0
  1417 ;;Total ram usage:        2 bytes
  1418 ;; Hardware stack levels used:    1
  1419 ;; This function calls:
  1420 ;;		Nothing
  1421 ;; This function is called by:
  1422 ;;		_i2cIsrHandler
  1423 ;; This function uses a non-reentrant model
  1424 ;;
  1425                           psect	text282
  1426                           	file	"i2cSlave.c"
  1427                           	line	75
  1428                           	global	__size_of_i2cDataUpdate
  1429  001A                     	__size_of_i2cDataUpdate	equ	__end_of_i2cDataUpdate-_i2cDataUpdate
  1430                           	
  1431  06FC                     _i2cDataUpdate:	
  1432                           	opt	stack 3
  1433                           ; Regs used in _i2cDataUpdate: [wreg-fsr0h+status,2+status,0]
  1434                           	line	76
  1435                           	
  1436  06FC                     i1l6461:	
  1437                           ;i2cSlave.c: 76: switch (i2cBuffer[0]) {
  1438  06FC  2F10               	goto	i1l6469
  1439                           	line	77
  1440                           ;i2cSlave.c: 77: case 0 :
  1441                           	
  1442  06FD                     i1l1523:	
  1443                           	line	78
  1444                           	
  1445  06FD                     i1l6463:	
  1446                           ;i2cSlave.c: 78: i2cSpeed = (i2cBuffer[1] & 0b01111111);
  1447  06FD  0879               	movf	0+(_i2cBuffer)+01h,w
  1448  06FE  397F               	andlw	07Fh
  1449  06FF  00F1               	movwf	(??_i2cDataUpdate+0)+0
  1450  0700  0871               	movf	(??_i2cDataUpdate+0)+0,w
  1451  0701  00FD               	movwf	(_i2cSpeed)
  1452                           	line	79
  1453                           	
  1454  0702                     i1l6465:	
  1455                           ;i2cSlave.c: 79: i2cDirection = (i2cBuffer[1] >> 7);
  1456  0702  0879               	movf	0+(_i2cBuffer)+01h,w
  1457  0703  00F1               	movwf	(??_i2cDataUpdate+0)+0
  1458  0704  3007               	movlw	07h
  1459  0705                     u8_25:
  1460  0705  1003               	clrc
  1461  0706  0CF1               	rrf	(??_i2cDataUpdate+0)+0,f
  1462  0707  3EFF               	addlw	-1
  1463  0708  1D03               	skipz
  1464  0709  2F05               	goto	u8_25
  1465  070A  0871               	movf	0+(??_i2cDataUpdate+0)+0,w
  1466  070B  00F2               	movwf	(??_i2cDataUpdate+1)+0
  1467  070C  0872               	movf	(??_i2cDataUpdate+1)+0,w
  1468  070D  00FB               	movwf	(_i2cDirection)
  1469                           	line	80
  1470                           ;i2cSlave.c: 80: break;
  1471  070E  2F15               	goto	i1l1525
  1472                           	line	83
  1473                           	
  1474  070F                     i1l6467:	
  1475                           ;i2cSlave.c: 83: }
  1476  070F  2F15               	goto	i1l1525
  1477                           	line	76
  1478                           	
  1479  0710                     i1l1522:	
  1480                           	
  1481  0710                     i1l6469:	
  1482  0710  0878               	movf	(_i2cBuffer),w
  1483                           	; Switch size 1, requested type "space"
  1484                           ; Number of cases is 1, Range of values is 0 to 0
  1485                           ; switch strategies available:
  1486                           ; Name         Instructions Cycles
  1487                           ; simple_byte            4     3 (average)
  1488                           ; direct_byte           11     8 (fixed)
  1489                           ; jumptable            260     6 (fixed)
  1490                           ; rangetable             5     6 (fixed)
  1491                           ; spacedrange            8     9 (fixed)
  1492                           ; locatedrange           1     3 (fixed)
  1493                           ;	Chosen strategy is simple_byte
  1494                           
  1495                           	opt asmopt_off
  1496  0711  3A00               	xorlw	0^0	; case 0
  1497  0712  1903               	skipnz
  1498  0713  2EFD               	goto	i1l6463
  1499  0714  2F15               	goto	i1l1525
  1500                           	opt asmopt_on
  1501                           
  1502                           	line	83
  1503                           	
  1504  0715                     i1l1524:	
  1505                           	line	85
  1506                           ;i2cSlave.c: 84: return;
  1507                           	
  1508  0715                     i1l1525:	
  1509  0715  0008               	return
  1510                           	opt stack 0
  1511                           GLOBAL	__end_of_i2cDataUpdate
  1512  0716                     	__end_of_i2cDataUpdate:
  1513 ;; =============== function _i2cDataUpdate ends ============
  1514                           
  1515                           	signat	_i2cDataUpdate,88
  1516                           	global	_i2cSend
  1517                           psect	text283,local,class=CODE,delta=2
  1518                           global __ptext283
  1519  06BD                     __ptext283:
  1520                           
  1521 ;; *************** function _i2cSend *****************
  1522 ;; Defined at:
  1523 ;;		line 87 in file "i2cSlave.c"
  1524 ;; Parameters:    Size  Location     Type
  1525 ;;  msg             1    wreg     unsigned char 
  1526 ;; Auto vars:     Size  Location     Type
  1527 ;;		None
  1528 ;; Return value:  Size  Location     Type
  1529 ;;		None               void
  1530 ;; Registers used:
  1531 ;;		wreg
  1532 ;; Tracked objects:
  1533 ;;		On entry : 0/0
  1534 ;;		On exit  : 0/0
  1535 ;;		Unchanged: 0/0
  1536 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1537 ;;      Params:         0       0       0       0       0
  1538 ;;      Locals:         0       0       0       0       0
  1539 ;;      Temps:          0       0       0       0       0
  1540 ;;      Totals:         0       0       0       0       0
  1541 ;;Total ram usage:        0 bytes
  1542 ;; Hardware stack levels used:    1
  1543 ;; This function calls:
  1544 ;;		Nothing
  1545 ;; This function is called by:
  1546 ;;		_i2cIsrHandler
  1547 ;; This function uses a non-reentrant model
  1548 ;;
  1549                           psect	text283
  1550                           	file	"i2cSlave.c"
  1551                           	line	87
  1552                           	global	__size_of_i2cSend
  1553  0001                     	__size_of_i2cSend	equ	__end_of_i2cSend-_i2cSend
  1554                           	
  1555  06BD                     _i2cSend:	
  1556                           	opt	stack 3
  1557                           ; Regs used in _i2cSend: [wreg]
  1558                           	line	89
  1559                           	
  1560  06BD                     i1l6459:	
  1561                           	line	90
  1562                           ;i2cSlave.c: 89: return;
  1563                           	
  1564  06BD                     i1l1528:	
  1565  06BD  0008               	return
  1566                           	opt stack 0
  1567                           GLOBAL	__end_of_i2cSend
  1568  06BE                     	__end_of_i2cSend:
  1569 ;; =============== function _i2cSend ends ============
  1570                           
  1571                           	signat	_i2cSend,4216
  1572                           psect	text284,local,class=CODE,delta=2
  1573                           global __ptext284
  1574  0000                     __ptext284:
  1575                           	global	btemp
  1576  007E                     	btemp set 07Eh
  1577                           
  1578                           	DABS	1,126,2	;btemp
  1579                           	global	wtemp0
  1580  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Tue Feb 12 20:45:01 2013

                    _RD 0C60                      _WR 0C61                      _dc 0020                     _CKE 04A6  
                   _CKP 00A4                     _GIE 005F                     _PR2 0092                     _SMP 04A7  
                   _isr 06D3                     fsr0 0004                     indf 0000                    l1505 0793  
                  l3045 0720                    l3046 072F                    l3047 0730                    l3048 0730  
                  l3057 06FB                    l3066 06C4                    l4570 074E                    l4571 0750  
                  l4580 076C                    l4572 074F                    l4581 0770                    l4573 0750  
                  l4569 0744                    l7421 0790                    l7423 0791                    l7415 0774  
                  l7431 0766                    l7425 0792                    l7417 0789                    l7441 073F  
                  l7433 0733                    l7419 078F                    l7427 0751                    l7443 0740  
                  l7435 0737                    l7451 06BE                    ?_isr 0071                    l7429 0759  
                  l7445 0741                    l7437 073D                    l7447 0744                    l7439 073E  
                  l7471 06F8                    l7449 0749                    l7465 06E5                    l7473 0716  
                  l7467 06F0                    l7475 071B                    l7469 06F5                    l7477 0720  
                  l7479 072A                    u2360 0766                    u2361 0765                    u2370 0749  
                  u2371 0748                    u2365 0762                    _PEIE 005E                    _INTE 005C  
                  _TMR0 0001                    _WREN 0C62                    u1_20 079D                    u1_21 079C  
                  u2_20 07B3                    u2_21 07B2                    u3_20 07C0                    u3_21 07BF  
                  u4_20 07C9                    u4_21 07C8                    u5_20 07D5                    u5_21 07D4  
                  u6_20 07E2                    u6_21 07E1                    u7_20 07F7                    u7_21 07F6  
                  u8_25 0705         ??_directionInit 0024                    _main 0716                    btemp 007E  
                  start 0012         ??_i2cIsrHandler 0073         __end_of_i2cInit 0794         __end_of_i2cSend 06BE  
                 ??_isr 0074                   ?_main 0071                   _EEADR 010D                   _CARRY 0018  
                 _T2CON 0012                   _PORTD 0008                   _SSPM0 00A0                   _SSPM1 00A1  
                 _SSPM2 00A2                   _SSPM3 00A3                   _TRISD 0088                   _SSPIE 0463  
                 _SSPIF 0063                   _SSPEN 00A5                   pclath 000A        __end_of_BeginPWM 0751  
            _i2cRequest 007C                   status 0003                   wtemp0 007E            __end_of_main 0733  
            _Initialise 06E5                  ??_main 0028        __end_of_SetPulse 0771                  _EEDATA 010C  
                _CCPR1L 0015                  _EECON1 018C                  _EECON2 018D                  i1l1510 07B7  
                i1l1511 07ED                  i1l1512 07C2                  i1l1513 07EC                  i1l1522 0710  
                i1l1514 07EB                  i1l1523 06FD                  i1l1515 07DC                  i1l1524 0715  
                i1l1516 07EA                  i1l1508 07AB                  i1l1525 0715                  i1l1509 07EE  
                i1l1517 07E9                  i1l1518 07FE                  i1l1519 07FF                  i1l3063 06D8  
                i1l1528 06BD                  i1l6431 07AB                  i1l6441 07C9                  i1l6433 07B3  
                i1l6425 0794                  i1l6505 06D3                  i1l6451 07F1                  i1l6443 07D5  
                i1l6435 07B7                  i1l6427 079D                  i1l6461 06FC                  i1l6453 07F7  
                i1l6445 07DC                  i1l6437 07C1                  i1l6429 07A6                  i1l6463 06FD  
                i1l6455 07F8                  i1l6447 07E2                  i1l6439 07C2                  i1l6465 0702  
                i1l6457 07FF                  i1l6449 07EE                  i1l6459 06BD                  i1l6467 070F  
                i1l6469 0710                  _TMR2IF 0061                  _SSPADD 0093                  _TRISB3 0433  
                _TRISC6 043E                  _TRISC7 043F                  _SSPBUF 0013               ??_i2cInit 0024  
             ??_i2cSend 0071                  saved_w 007E          __pcstackCOMMON 0071             ?_Initialise 0071  
             ?_BeginPWM 0071   __end_of_i2cDataUpdate 0716              __pbssBANK0 0020               ?_SetPulse 0024  
            __pmaintext 0716              __pintentry 0004                 _CCP1CON 0017              ??_BeginPWM 0024  
               _SSPSTAT 0094     __size_of_Initialise 0017                 _i2cInit 0771                 _i2cSend 06BD  
 __end_of_directionInit 06C5              ??_SetPulse 0026   __end_of_i2cIsrHandler 0800            _i2cDirection 007B  
          _i2cBufferVal 007A               _T2CONbits 0012            __size_of_isr 0012    end_of_initialization 06CF  
             _PORTBbits 0006          SetPulse@length 0024               _TRISCbits 0087             _CCP1CONbits 0017  
          ??_Initialise 0025               _i2cBuffer 0078     start_initialization 06C5       __size_of_BeginPWM 001E  
           __end_of_isr 06E5      __end_of_Initialise 06FC       __size_of_SetPulse 0020            SetPulse@temp 0026  
           __pbssCOMMON 0078           __pcstackBANK0 0024                ?_i2cInit 0071                ?_i2cSend 0071  
             __ptext280 06D3               __ptext281 0794               __ptext282 06FC               __ptext274 0000  
             __ptext283 06BD               __ptext275 06E5               __ptext284 0000               __ptext276 06BE  
             __ptext277 0733               __ptext278 0751               __ptext279 0771  __size_of_i2cDataUpdate 001A  
     interrupt_function 0004                _PIE1bits 008C                _PIR1bits 000C                _BeginPWM 0733  
__size_of_directionInit 0007  __size_of_i2cIsrHandler 006C           _i2cDataUpdate 06FC                _i2cSpeed 007D  
      __size_of_i2cInit 0023        __size_of_i2cSend 0001                _SetPulse 0751          ?_i2cDataUpdate 0071  
         __size_of_main 001D           _directionInit 06BE                _setSpeed 0022           _i2cIsrHandler 0794  
              intlevel1 0000          ?_directionInit 0071          ?_i2cIsrHandler 0071              _OPTION_REG 0081  
       ??_i2cDataUpdate 0071          i2cInit@address 0024  
