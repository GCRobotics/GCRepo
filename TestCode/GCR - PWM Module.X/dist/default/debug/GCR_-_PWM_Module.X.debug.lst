

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Dec 14 15:34:06 2012

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 12 "PWMmain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 12 "PWMmain.c"
    45  2007  F4F4               	dw 0xFFFC & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFFFF & 0xF7FF ;#
    46                           	FNCALL	_main,_Initialise
    47                           	FNCALL	_main,_SetPulse
    48                           	FNCALL	_Initialise,_BeginPWM
    49                           	FNCALL	_Initialise,_i2c_init
    50                           	FNCALL	_Initialise,_directionInit
    51                           	FNROOT	_main
    52                           	FNCALL	intlevel1,_isr
    53                           	global	intlevel1
    54                           	FNROOT	intlevel1
    55                           	global	_i2cBuffer
    56                           	global	_setSpeed
    57                           	global	_val
    58                           	global	_CCP1CON
    59                           psect	text231,local,class=CODE,delta=2
    60                           global __ptext231
    61  0000                     __ptext231:
    62  0017                     _CCP1CON	set	23
    63                           	global	_CCP1CONbits
    64  0017                     _CCP1CONbits	set	23
    65                           	global	_CCPR1L
    66  0015                     _CCPR1L	set	21
    67                           	global	_PIR1bits
    68  000C                     _PIR1bits	set	12
    69                           	global	_PORTBbits
    70  0006                     _PORTBbits	set	6
    71                           	global	_PORTD
    72  0008                     _PORTD	set	8
    73                           	global	_SSPBUF
    74  0013                     _SSPBUF	set	19
    75                           	global	_T2CON
    76  0012                     _T2CON	set	18
    77                           	global	_T2CONbits
    78  0012                     _T2CONbits	set	18
    79                           	global	_CARRY
    80  0018                     _CARRY	set	24
    81                           	global	_CKP
    82  00A4                     _CKP	set	164
    83                           	global	_GIE
    84  005F                     _GIE	set	95
    85                           	global	_INTE
    86  005C                     _INTE	set	92
    87                           	global	_PEIE
    88  005E                     _PEIE	set	94
    89                           	global	_SSPEN
    90  00A5                     _SSPEN	set	165
    91                           	global	_SSPIF
    92  0063                     _SSPIF	set	99
    93                           	global	_SSPM0
    94  00A0                     _SSPM0	set	160
    95                           	global	_SSPM1
    96  00A1                     _SSPM1	set	161
    97                           	global	_SSPM2
    98  00A2                     _SSPM2	set	162
    99                           	global	_SSPM3
   100  00A3                     _SSPM3	set	163
   101                           	global	_TMR2IF
   102  0061                     _TMR2IF	set	97
   103                           	global	_PIE1bits
   104  008C                     _PIE1bits	set	140
   105                           	global	_PR2
   106  0092                     _PR2	set	146
   107                           	global	_SSPADD
   108  0093                     _SSPADD	set	147
   109                           	global	_SSPSTAT
   110  0094                     _SSPSTAT	set	148
   111                           	global	_TRISCbits
   112  0087                     _TRISCbits	set	135
   113                           	global	_TRISD
   114  0088                     _TRISD	set	136
   115                           	global	_CKE
   116  04A6                     _CKE	set	1190
   117                           	global	_SMP
   118  04A7                     _SMP	set	1191
   119                           	global	_SSPIE
   120  0463                     _SSPIE	set	1123
   121                           	global	_TRISB3
   122  0433                     _TRISB3	set	1075
   123                           	global	_TRISC6
   124  043E                     _TRISC6	set	1086
   125                           	global	_TRISC7
   126  043F                     _TRISC7	set	1087
   127                           	global	_EEADR
   128  010D                     _EEADR	set	269
   129                           	global	_EEDATA
   130  010C                     _EEDATA	set	268
   131                           	global	_EECON1
   132  018C                     _EECON1	set	396
   133                           	global	_EECON2
   134  018D                     _EECON2	set	397
   135                           	global	_RD
   136  0C60                     _RD	set	3168
   137                           	global	_WR
   138  0C61                     _WR	set	3169
   139                           	global	_WREN
   140  0C62                     _WREN	set	3170
   141                           	file	"C:\Users\josh\AppData\Local\Temp\s50k."
   142                           	line	#
   143                           psect cinit,class=CODE,delta=2
   144                           global start_initialization
   145  0726                     start_initialization:
   146                           
   147                           psect	bssCOMMON,class=COMMON,space=1
   148                           global __pbssCOMMON
   149  0078                     __pbssCOMMON:
   150  0078                     _val:
   151  0078                            ds      2
   152                           
   153                           psect	bssBANK0,class=BANK0,space=1
   154                           global __pbssBANK0
   155  0020                     __pbssBANK0:
   156  0020                     _i2cBuffer:
   157  0020                            ds      20
   158                           
   159  0034                     _setSpeed:
   160  0034                            ds      2
   161                           
   162                           psect clrtext,class=CODE,delta=2
   163                           global clear_ram
   164                           ;	Called with FSR containing the base address, and
   165                           ;	W with the last address+1
   166  071E                     clear_ram:
   167  071E  0064               	clrwdt			;clear the watchdog before getting into this loop
   168  071F                     clrloop:
   169  071F  0180               	clrf	indf		;clear RAM location pointed to by FSR
   170  0720  0A84               	incf	fsr,f		;increment pointer
   171  0721  0604               	xorwf	fsr,w		;XOR with final address
   172  0722  1903               	btfsc	status,2	;have we reached the end yet?
   173  0723  3400               	retlw	0		;all done for this memory range, return
   174  0724  0604               	xorwf	fsr,w		;XOR again to restore value
   175  0725  2F1F               	goto	clrloop		;do the next byte
   176                           
   177                           ; Clear objects allocated to COMMON
   178                           psect cinit,class=CODE,delta=2
   179  0726  01F8               	clrf	((__pbssCOMMON)+0)&07Fh
   180  0727  01F9               	clrf	((__pbssCOMMON)+1)&07Fh
   181                           ; Clear objects allocated to BANK0
   182                           psect cinit,class=CODE,delta=2
   183  0728  1383               	bcf	status, 7	;select IRP bank0
   184  0729  3020               	movlw	low(__pbssBANK0)
   185  072A  0084               	movwf	fsr
   186  072B  3036               	movlw	low((__pbssBANK0)+016h)
   187  072C  120A  118A  271E   	fcall	clear_ram
              120A  118A         
   188                           psect cinit,class=CODE,delta=2
   189                           global end_of_initialization
   190                           
   191                           ;End of C runtime variable initialization code
   192                           
   193  0731                     end_of_initialization:
   194  0731  0183               clrf status
   195  0732  120A  118A  2FA8   ljmp _main	;jump to C main() function
   196                           psect	cstackCOMMON,class=COMMON,space=1
   197                           global __pcstackCOMMON
   198  0071                     __pcstackCOMMON:
   199                           	global	?_Initialise
   200  0071                     ?_Initialise:	; 0 bytes @ 0x0
   201                           	global	?_BeginPWM
   202  0071                     ?_BeginPWM:	; 0 bytes @ 0x0
   203                           	global	?_i2c_init
   204  0071                     ?_i2c_init:	; 0 bytes @ 0x0
   205                           	global	?_directionInit
   206  0071                     ?_directionInit:	; 0 bytes @ 0x0
   207                           	global	?_main
   208  0071                     ?_main:	; 0 bytes @ 0x0
   209                           	global	?_isr
   210  0071                     ?_isr:	; 0 bytes @ 0x0
   211                           	global	??_isr
   212  0071                     ??_isr:	; 0 bytes @ 0x0
   213  0071                     	ds	7
   214                           psect	cstackBANK0,class=BANK0,space=1
   215                           global __pcstackBANK0
   216  0036                     __pcstackBANK0:
   217                           	global	??_Initialise
   218  0036                     ??_Initialise:	; 0 bytes @ 0x0
   219                           	global	?_SetPulse
   220  0036                     ?_SetPulse:	; 0 bytes @ 0x0
   221                           	global	??_BeginPWM
   222  0036                     ??_BeginPWM:	; 0 bytes @ 0x0
   223                           	global	??_i2c_init
   224  0036                     ??_i2c_init:	; 0 bytes @ 0x0
   225                           	global	??_directionInit
   226  0036                     ??_directionInit:	; 0 bytes @ 0x0
   227                           	global	SetPulse@length
   228  0036                     SetPulse@length:	; 2 bytes @ 0x0
   229  0036                     	ds	2
   230                           	global	??_SetPulse
   231  0038                     ??_SetPulse:	; 0 bytes @ 0x2
   232                           	global	SetPulse@temp
   233  0038                     SetPulse@temp:	; 2 bytes @ 0x2
   234  0038                     	ds	2
   235                           	global	??_main
   236  003A                     ??_main:	; 0 bytes @ 0x4
   237 ;;Data sizes: Strings 0, constant 0, data 0, bss 24, persistent 0 stack 0
   238 ;;Auto spaces:   Size  Autos    Used
   239 ;; COMMON          13      7       9
   240 ;; BANK0           80      4      26
   241 ;; BANK1           80      0       0
   242 ;; BANK3           96      0       0
   243 ;; BANK2           69      0       0
   244                           
   245 ;;
   246 ;; Pointer list with targets:
   247                           
   248                           
   249                           
   250 ;;
   251 ;; Critical Paths under _main in COMMON
   252 ;;
   253 ;;   None.
   254 ;;
   255 ;; Critical Paths under _isr in COMMON
   256 ;;
   257 ;;   None.
   258 ;;
   259 ;; Critical Paths under _main in BANK0
   260 ;;
   261 ;;   _main->_SetPulse
   262 ;;
   263 ;; Critical Paths under _isr in BANK0
   264 ;;
   265 ;;   None.
   266 ;;
   267 ;; Critical Paths under _main in BANK1
   268 ;;
   269 ;;   None.
   270 ;;
   271 ;; Critical Paths under _isr in BANK1
   272 ;;
   273 ;;   None.
   274 ;;
   275 ;; Critical Paths under _main in BANK3
   276 ;;
   277 ;;   None.
   278 ;;
   279 ;; Critical Paths under _isr in BANK3
   280 ;;
   281 ;;   None.
   282 ;;
   283 ;; Critical Paths under _main in BANK2
   284 ;;
   285 ;;   None.
   286 ;;
   287 ;; Critical Paths under _isr in BANK2
   288 ;;
   289 ;;   None.
   290                           
   291 ;;
   292 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   293 ;;
   294                           
   295 ;;
   296 ;;Call Graph Tables:
   297 ;;
   298 ;; ---------------------------------------------------------------------------------
   299 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   300 ;; ---------------------------------------------------------------------------------
   301 ;; (0) _main                                                 2     2      0      68
   302 ;;                         _Initialise
   303 ;;                           _SetPulse
   304 ;; ---------------------------------------------------------------------------------
   305 ;; (1) _Initialise                                           0     0      0       0
   306 ;;                           _BeginPWM
   307 ;;                           _i2c_init
   308 ;;                      _directionInit
   309 ;; ---------------------------------------------------------------------------------
   310 ;; (2) _directionInit                                        0     0      0       0
   311 ;; ---------------------------------------------------------------------------------
   312 ;; (2) _i2c_init                                             0     0      0       0
   313 ;; ---------------------------------------------------------------------------------
   314 ;; (2) _BeginPWM                                             0     0      0       0
   315 ;; ---------------------------------------------------------------------------------
   316 ;; (1) _SetPulse                                             4     2      2      68
   317 ;;                                              0 BANK0      4     2      2
   318 ;; ---------------------------------------------------------------------------------
   319 ;; Estimated maximum stack depth 2
   320 ;; ---------------------------------------------------------------------------------
   321 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   322 ;; ---------------------------------------------------------------------------------
   323 ;; (3) _isr                                                  7     7      0       0
   324 ;;                                              0 COMMON     7     7      0
   325 ;; ---------------------------------------------------------------------------------
   326 ;; Estimated maximum stack depth 3
   327 ;; ---------------------------------------------------------------------------------
   328                           
   329 ;; Call Graph Graphs:
   330                           
   331 ;; _main (ROOT)
   332 ;;   _Initialise
   333 ;;     _BeginPWM
   334 ;;     _i2c_init
   335 ;;     _directionInit
   336 ;;   _SetPulse
   337 ;;
   338 ;; _isr (ROOT)
   339 ;;
   340                           
   341 ;; Address spaces:
   342                           
   343 ;;Name               Size   Autos  Total    Cost      Usage
   344 ;;BITCOMMON            D      0       0       0        0.0%
   345 ;;EEDATA             100      0       0       0        0.0%
   346 ;;NULL                 0      0       0       0        0.0%
   347 ;;CODE                 0      0       0       0        0.0%
   348 ;;COMMON               D      7       9       1       69.2%
   349 ;;BITSFR0              0      0       0       1        0.0%
   350 ;;SFR0                 0      0       0       1        0.0%
   351 ;;BITSFR1              0      0       0       2        0.0%
   352 ;;SFR1                 0      0       0       2        0.0%
   353 ;;STACK                0      0       2       2        0.0%
   354 ;;BITBANK0            50      0       0       3        0.0%
   355 ;;BANK0               50      4      1A       4       32.5%
   356 ;;BITSFR3              0      0       0       4        0.0%
   357 ;;SFR3                 0      0       0       4        0.0%
   358 ;;BITBANK1            50      0       0       5        0.0%
   359 ;;BITSFR2              0      0       0       5        0.0%
   360 ;;SFR2                 0      0       0       5        0.0%
   361 ;;BANK1               50      0       0       6        0.0%
   362 ;;BITBANK3            60      0       0       7        0.0%
   363 ;;BANK3               60      0       0       8        0.0%
   364 ;;BANK2               45      0       0       9        0.0%
   365 ;;ABS                  0      0      23      10        0.0%
   366 ;;BITBANK2            45      0       0      11        0.0%
   367 ;;DATA                 0      0      25      12        0.0%
   368                           
   369                           	global	_main
   370                           psect	maintext,global,class=CODE,delta=2
   371                           global __pmaintext
   372  07A8                     __pmaintext:
   373                           
   374 ;; *************** function _main *****************
   375 ;; Defined at:
   376 ;;		line 36 in file "PWMmain.c"
   377 ;; Parameters:    Size  Location     Type
   378 ;;		None
   379 ;; Auto vars:     Size  Location     Type
   380 ;;  direction       2    0        int 
   381 ;; Return value:  Size  Location     Type
   382 ;;		None               void
   383 ;; Registers used:
   384 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   385 ;; Tracked objects:
   386 ;;		On entry : 17F/0
   387 ;;		On exit  : 0/0
   388 ;;		Unchanged: 0/0
   389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   390 ;;      Params:         0       0       0       0       0
   391 ;;      Locals:         0       0       0       0       0
   392 ;;      Temps:          0       0       0       0       0
   393 ;;      Totals:         0       0       0       0       0
   394 ;;Total ram usage:        0 bytes
   395 ;; Hardware stack levels required when called:    3
   396 ;; This function calls:
   397 ;;		_Initialise
   398 ;;		_SetPulse
   399 ;; This function is called by:
   400 ;;		Startup code after reset
   401 ;; This function uses a non-reentrant model
   402 ;;
   403                           psect	maintext
   404                           	file	"PWMmain.c"
   405                           	line	36
   406                           	global	__size_of_main
   407  0022                     	__size_of_main	equ	__end_of_main-_main
   408                           	
   409  07A8                     _main:	
   410                           	opt	stack 5
   411                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   412                           	line	39
   413                           	
   414  07A8                     l5907:	
   415                           ;PWMmain.c: 38: int direction;
   416                           ;PWMmain.c: 39: Initialise();
   417  07A8  120A  118A  2735   	fcall	_Initialise
              120A  118A         
   418  07AD  2FAE               	goto	l5909
   419                           	line	60
   420                           ;PWMmain.c: 60: while (1)
   421                           	
   422  07AE                     l1507:	
   423                           	line	64
   424                           	
   425  07AE                     l5909:	
   426                           ;PWMmain.c: 61: {
   427                           ;PWMmain.c: 64: setSpeed = i2cBuffer[1];
   428  07AE  1283               	bcf	status, 5	;RP0=0, select bank0
   429  07AF  1303               	bcf	status, 6	;RP1=0, select bank0
   430  07B0  0823               	movf	1+(_i2cBuffer)+02h,w
   431  07B1  01B5               	clrf	(_setSpeed+1)
   432  07B2  07B5               	addwf	(_setSpeed+1)
   433  07B3  0822               	movf	0+(_i2cBuffer)+02h,w
   434  07B4  01B4               	clrf	(_setSpeed)
   435  07B5  07B4               	addwf	(_setSpeed)
   436                           
   437                           	line	65
   438                           	
   439  07B6                     l5911:	
   440                           ;PWMmain.c: 65: SetPulse(setSpeed);
   441  07B6  0835               	movf	(_setSpeed+1),w
   442  07B7  01B7               	clrf	(?_SetPulse+1)
   443  07B8  07B7               	addwf	(?_SetPulse+1)
   444  07B9  0834               	movf	(_setSpeed),w
   445  07BA  01B6               	clrf	(?_SetPulse)
   446  07BB  07B6               	addwf	(?_SetPulse)
   447                           
   448  07BC  120A  118A  2788   	fcall	_SetPulse
              120A  118A         
   449                           	line	67
   450                           	
   451  07C1                     l5913:	
   452                           ;PWMmain.c: 67: PORTD = setSpeed;
   453  07C1  1283               	bcf	status, 5	;RP0=0, select bank0
   454  07C2  1303               	bcf	status, 6	;RP1=0, select bank0
   455  07C3  0834               	movf	(_setSpeed),w
   456  07C4  0088               	movwf	(8)	;volatile
   457  07C5  2FAE               	goto	l5909
   458                           	line	68
   459                           	
   460  07C6                     l1508:	
   461                           	line	60
   462  07C6  2FAE               	goto	l5909
   463                           	
   464  07C7                     l1509:	
   465                           	line	71
   466                           	
   467  07C7                     l1510:	
   468                           	global	start
   469  07C7  120A  118A  2812   	ljmp	start
   470                           	opt stack 0
   471                           GLOBAL	__end_of_main
   472  07CA                     	__end_of_main:
   473 ;; =============== function _main ends ============
   474                           
   475                           	signat	_main,88
   476                           	global	_Initialise
   477                           psect	text232,local,class=CODE,delta=2
   478                           global __ptext232
   479  0735                     __ptext232:
   480                           
   481 ;; *************** function _Initialise *****************
   482 ;; Defined at:
   483 ;;		line 87 in file "PWMmain.c"
   484 ;; Parameters:    Size  Location     Type
   485 ;;		None
   486 ;; Auto vars:     Size  Location     Type
   487 ;;		None
   488 ;; Return value:  Size  Location     Type
   489 ;;		None               void
   490 ;; Registers used:
   491 ;;		wreg, status,2, status,0, pclath, cstack
   492 ;; Tracked objects:
   493 ;;		On entry : 0/0
   494 ;;		On exit  : 0/0
   495 ;;		Unchanged: 0/0
   496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   497 ;;      Params:         0       0       0       0       0
   498 ;;      Locals:         0       0       0       0       0
   499 ;;      Temps:          0       0       0       0       0
   500 ;;      Totals:         0       0       0       0       0
   501 ;;Total ram usage:        0 bytes
   502 ;; Hardware stack levels used:    1
   503 ;; Hardware stack levels required when called:    2
   504 ;; This function calls:
   505 ;;		_BeginPWM
   506 ;;		_i2c_init
   507 ;;		_directionInit
   508 ;; This function is called by:
   509 ;;		_main
   510 ;; This function uses a non-reentrant model
   511 ;;
   512                           psect	text232
   513                           	file	"PWMmain.c"
   514                           	line	87
   515                           	global	__size_of_Initialise
   516  0016                     	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   517                           	
   518  0735                     _Initialise:	
   519                           	opt	stack 5
   520                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   521                           	line	88
   522                           	
   523  0735                     l5899:	
   524                           ;PWMmain.c: 88: BeginPWM();
   525  0735  120A  118A  274B   	fcall	_BeginPWM
              120A  118A         
   526                           	line	89
   527                           ;PWMmain.c: 89: i2c_init();
   528  073A  120A  118A  2769   	fcall	_i2c_init
              120A  118A         
   529                           	line	90
   530                           	
   531  073F                     l5901:	
   532                           ;PWMmain.c: 90: directionInit();
   533  073F  120A  118A  2717   	fcall	_directionInit
              120A  118A         
   534                           	line	92
   535                           	
   536  0744                     l5903:	
   537                           ;PWMmain.c: 92: TRISD = 0;
   538  0744  1683               	bsf	status, 5	;RP0=1, select bank1
   539  0745  1303               	bcf	status, 6	;RP1=0, select bank1
   540  0746  0188               	clrf	(136)^080h	;volatile
   541                           	line	93
   542                           	
   543  0747                     l5905:	
   544                           ;PWMmain.c: 93: PORTD = 0;
   545  0747  1283               	bcf	status, 5	;RP0=0, select bank0
   546  0748  1303               	bcf	status, 6	;RP1=0, select bank0
   547  0749  0188               	clrf	(8)	;volatile
   548                           	line	94
   549                           	
   550  074A                     l1519:	
   551  074A  0008               	return
   552                           	opt stack 0
   553                           GLOBAL	__end_of_Initialise
   554  074B                     	__end_of_Initialise:
   555 ;; =============== function _Initialise ends ============
   556                           
   557                           	signat	_Initialise,88
   558                           	global	_directionInit
   559                           psect	text233,local,class=CODE,delta=2
   560                           global __ptext233
   561  0717                     __ptext233:
   562                           
   563 ;; *************** function _directionInit *****************
   564 ;; Defined at:
   565 ;;		line 184 in file "PWMmain.c"
   566 ;; Parameters:    Size  Location     Type
   567 ;;		None
   568 ;; Auto vars:     Size  Location     Type
   569 ;;		None
   570 ;; Return value:  Size  Location     Type
   571 ;;		None               void
   572 ;; Registers used:
   573 ;;		None
   574 ;; Tracked objects:
   575 ;;		On entry : 0/0
   576 ;;		On exit  : 0/0
   577 ;;		Unchanged: 0/0
   578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   579 ;;      Params:         0       0       0       0       0
   580 ;;      Locals:         0       0       0       0       0
   581 ;;      Temps:          0       0       0       0       0
   582 ;;      Totals:         0       0       0       0       0
   583 ;;Total ram usage:        0 bytes
   584 ;; Hardware stack levels used:    1
   585 ;; Hardware stack levels required when called:    1
   586 ;; This function calls:
   587 ;;		Nothing
   588 ;; This function is called by:
   589 ;;		_Initialise
   590 ;; This function uses a non-reentrant model
   591 ;;
   592                           psect	text233
   593                           	file	"PWMmain.c"
   594                           	line	184
   595                           	global	__size_of_directionInit
   596  0007                     	__size_of_directionInit	equ	__end_of_directionInit-_directionInit
   597                           	
   598  0717                     _directionInit:	
   599                           	opt	stack 5
   600                           ; Regs used in _directionInit: []
   601                           	line	185
   602                           	
   603  0717                     l5885:	
   604                           ;PWMmain.c: 185: TRISB3 = 0;
   605  0717  1683               	bsf	status, 5	;RP0=1, select bank1
   606  0718  1303               	bcf	status, 6	;RP1=0, select bank1
   607  0719  1186               	bcf	(1075/8)^080h,(1075)&7
   608                           	line	186
   609                           ;PWMmain.c: 186: PORTBbits.RB3 = 0;
   610  071A  1283               	bcf	status, 5	;RP0=0, select bank0
   611  071B  1303               	bcf	status, 6	;RP1=0, select bank0
   612  071C  1186               	bcf	(6),3	;volatile
   613                           	line	187
   614                           	
   615  071D                     l1534:	
   616  071D  0008               	return
   617                           	opt stack 0
   618                           GLOBAL	__end_of_directionInit
   619  071E                     	__end_of_directionInit:
   620 ;; =============== function _directionInit ends ============
   621                           
   622                           	signat	_directionInit,88
   623                           	global	_i2c_init
   624                           psect	text234,local,class=CODE,delta=2
   625                           global __ptext234
   626  0769                     __ptext234:
   627                           
   628 ;; *************** function _i2c_init *****************
   629 ;; Defined at:
   630 ;;		line 108 in file "PWMmain.c"
   631 ;; Parameters:    Size  Location     Type
   632 ;;		None
   633 ;; Auto vars:     Size  Location     Type
   634 ;;		None
   635 ;; Return value:  Size  Location     Type
   636 ;;		None               void
   637 ;; Registers used:
   638 ;;		wreg, status,2
   639 ;; Tracked objects:
   640 ;;		On entry : 0/0
   641 ;;		On exit  : 0/0
   642 ;;		Unchanged: 0/0
   643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   644 ;;      Params:         0       0       0       0       0
   645 ;;      Locals:         0       0       0       0       0
   646 ;;      Temps:          0       0       0       0       0
   647 ;;      Totals:         0       0       0       0       0
   648 ;;Total ram usage:        0 bytes
   649 ;; Hardware stack levels used:    1
   650 ;; Hardware stack levels required when called:    1
   651 ;; This function calls:
   652 ;;		Nothing
   653 ;; This function is called by:
   654 ;;		_Initialise
   655 ;; This function uses a non-reentrant model
   656 ;;
   657                           psect	text234
   658                           	file	"PWMmain.c"
   659                           	line	108
   660                           	global	__size_of_i2c_init
   661  001F                     	__size_of_i2c_init	equ	__end_of_i2c_init-_i2c_init
   662                           	
   663  0769                     _i2c_init:	
   664                           	opt	stack 5
   665                           ; Regs used in _i2c_init: [wreg+status,2]
   666                           	line	109
   667                           	
   668  0769                     l5873:	
   669                           ;PWMmain.c: 109: TRISC6 = 1;
   670  0769  1683               	bsf	status, 5	;RP0=1, select bank1
   671  076A  1303               	bcf	status, 6	;RP1=0, select bank1
   672  076B  1707               	bsf	(1086/8)^080h,(1086)&7
   673                           	line	110
   674                           ;PWMmain.c: 110: TRISC7 = 1;
   675  076C  1787               	bsf	(1087/8)^080h,(1087)&7
   676                           	line	111
   677                           ;PWMmain.c: 111: SSPEN = 1;
   678  076D  1283               	bcf	status, 5	;RP0=0, select bank0
   679  076E  1303               	bcf	status, 6	;RP1=0, select bank0
   680  076F  1694               	bsf	(165/8),(165)&7
   681                           	line	112
   682                           ;PWMmain.c: 112: CKE = 0;
   683  0770  1683               	bsf	status, 5	;RP0=1, select bank1
   684  0771  1303               	bcf	status, 6	;RP1=0, select bank1
   685  0772  1314               	bcf	(1190/8)^080h,(1190)&7
   686                           	line	113
   687                           ;PWMmain.c: 113: SMP = 0;
   688  0773  1394               	bcf	(1191/8)^080h,(1191)&7
   689                           	line	114
   690                           ;PWMmain.c: 114: CKP = 1;
   691  0774  1283               	bcf	status, 5	;RP0=0, select bank0
   692  0775  1303               	bcf	status, 6	;RP1=0, select bank0
   693  0776  1614               	bsf	(164/8),(164)&7
   694                           	line	116
   695                           ;PWMmain.c: 116: SSPM0 = 0;
   696  0777  1014               	bcf	(160/8),(160)&7
   697                           	line	117
   698                           ;PWMmain.c: 117: SSPM1 = 1;
   699  0778  1494               	bsf	(161/8),(161)&7
   700                           	line	118
   701                           ;PWMmain.c: 118: SSPM2 = 1;
   702  0779  1514               	bsf	(162/8),(162)&7
   703                           	line	119
   704                           ;PWMmain.c: 119: SSPM3 = 0;
   705  077A  1194               	bcf	(163/8),(163)&7
   706                           	line	121
   707                           ;PWMmain.c: 121: SSPIE =1;
   708  077B  1683               	bsf	status, 5	;RP0=1, select bank1
   709  077C  1303               	bcf	status, 6	;RP1=0, select bank1
   710  077D  158C               	bsf	(1123/8)^080h,(1123)&7
   711                           	line	123
   712                           	
   713  077E                     l5875:	
   714                           ;PWMmain.c: 123: SSPADD = 0b10100100;
   715  077E  30A4               	movlw	(0A4h)
   716  077F  0093               	movwf	(147)^080h	;volatile
   717                           	line	124
   718                           	
   719  0780                     l5877:	
   720                           ;PWMmain.c: 124: PEIE = 1;
   721  0780  170B               	bsf	(94/8),(94)&7
   722                           	line	125
   723                           	
   724  0781                     l5879:	
   725                           ;PWMmain.c: 125: GIE = 1;
   726  0781  178B               	bsf	(95/8),(95)&7
   727                           	line	126
   728                           	
   729  0782                     l5881:	
   730                           ;PWMmain.c: 126: INTE = 1;
   731  0782  160B               	bsf	(92/8),(92)&7
   732                           	line	127
   733                           	
   734  0783                     l5883:	
   735                           ;PWMmain.c: 127: i2cBuffer[1] = 0;
   736  0783  1283               	bcf	status, 5	;RP0=0, select bank0
   737  0784  1303               	bcf	status, 6	;RP1=0, select bank0
   738  0785  01A2               	clrf	0+(_i2cBuffer)+02h
   739  0786  01A3               	clrf	1+(_i2cBuffer)+02h
   740                           	line	128
   741                           	
   742  0787                     l1525:	
   743  0787  0008               	return
   744                           	opt stack 0
   745                           GLOBAL	__end_of_i2c_init
   746  0788                     	__end_of_i2c_init:
   747 ;; =============== function _i2c_init ends ============
   748                           
   749                           	signat	_i2c_init,88
   750                           	global	_BeginPWM
   751                           psect	text235,local,class=CODE,delta=2
   752                           global __ptext235
   753  074B                     __ptext235:
   754                           
   755 ;; *************** function _BeginPWM *****************
   756 ;; Defined at:
   757 ;;		line 41 in file "pwmlib.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;		None
   760 ;; Auto vars:     Size  Location     Type
   761 ;;		None
   762 ;; Return value:  Size  Location     Type
   763 ;;		None               void
   764 ;; Registers used:
   765 ;;		wreg, status,2
   766 ;; Tracked objects:
   767 ;;		On entry : 0/0
   768 ;;		On exit  : 0/0
   769 ;;		Unchanged: 0/0
   770 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   771 ;;      Params:         0       0       0       0       0
   772 ;;      Locals:         0       0       0       0       0
   773 ;;      Temps:          0       0       0       0       0
   774 ;;      Totals:         0       0       0       0       0
   775 ;;Total ram usage:        0 bytes
   776 ;; Hardware stack levels used:    1
   777 ;; Hardware stack levels required when called:    1
   778 ;; This function calls:
   779 ;;		Nothing
   780 ;; This function is called by:
   781 ;;		_Initialise
   782 ;; This function uses a non-reentrant model
   783 ;;
   784                           psect	text235
   785                           	file	"pwmlib.c"
   786                           	line	41
   787                           	global	__size_of_BeginPWM
   788  001E                     	__size_of_BeginPWM	equ	__end_of_BeginPWM-_BeginPWM
   789                           	
   790  074B                     _BeginPWM:	
   791                           	opt	stack 5
   792                           ; Regs used in _BeginPWM: [wreg+status,2]
   793                           	line	44
   794                           	
   795  074B                     l5855:	
   796                           ;pwmlib.c: 44: TRISCbits.TRISC5 = 1;
   797  074B  1683               	bsf	status, 5	;RP0=1, select bank1
   798  074C  1303               	bcf	status, 6	;RP1=0, select bank1
   799  074D  1687               	bsf	(135)^080h,5	;volatile
   800                           	line	47
   801                           ;pwmlib.c: 47: PIE1bits.TMR2IE = 0;
   802  074E  108C               	bcf	(140)^080h,1	;volatile
   803                           	line	51
   804                           	
   805  074F                     l5857:	
   806                           ;pwmlib.c: 51: PR2 = 0xFF;
   807  074F  30FF               	movlw	(0FFh)
   808  0750  0092               	movwf	(146)^080h	;volatile
   809                           	line	55
   810                           ;pwmlib.c: 55: CCP1CON = 0b00001100;
   811  0751  300C               	movlw	(0Ch)
   812  0752  1283               	bcf	status, 5	;RP0=0, select bank0
   813  0753  1303               	bcf	status, 6	;RP1=0, select bank0
   814  0754  0097               	movwf	(23)	;volatile
   815                           	line	59
   816                           	
   817  0755                     l5859:	
   818                           ;pwmlib.c: 59: CCPR1L = 0;
   819  0755  0195               	clrf	(21)	;volatile
   820                           	line	60
   821                           	
   822  0756                     l5861:	
   823                           ;pwmlib.c: 60: CCP1CONbits.CCP1X = 0;
   824  0756  1297               	bcf	(23),5	;volatile
   825                           	line	61
   826                           	
   827  0757                     l5863:	
   828                           ;pwmlib.c: 61: CCP1CONbits.CCP1Y = 0;
   829  0757  1217               	bcf	(23),4	;volatile
   830                           	line	66
   831                           	
   832  0758                     l5865:	
   833                           ;pwmlib.c: 66: PIR1bits.TMR2IF = 0;
   834  0758  108C               	bcf	(12),1	;volatile
   835                           	line	70
   836                           	
   837  0759                     l5867:	
   838                           ;pwmlib.c: 70: T2CON = 0b00000100;
   839  0759  3004               	movlw	(04h)
   840  075A  0092               	movwf	(18)	;volatile
   841  075B  2F5C               	goto	l5869
   842                           	line	75
   843                           ;pwmlib.c: 75: while(1)
   844                           	
   845  075C                     l3037:	
   846                           	line	77
   847                           	
   848  075C                     l5869:	
   849                           ;pwmlib.c: 76: {
   850                           ;pwmlib.c: 77: if(PIR1bits.TMR2IF == 1)
   851  075C  1283               	bcf	status, 5	;RP0=0, select bank0
   852  075D  1C8C               	btfss	(12),1	;volatile
   853  075E  2F60               	goto	u2311
   854  075F  2F61               	goto	u2310
   855  0760                     u2311:
   856  0760  2F5C               	goto	l5869
   857  0761                     u2310:
   858                           	line	79
   859                           	
   860  0761                     l5871:	
   861                           ;pwmlib.c: 78: {
   862                           ;pwmlib.c: 79: TMR2IF = 0;
   863  0761  108C               	bcf	(97/8),(97)&7
   864                           	line	80
   865                           ;pwmlib.c: 80: TRISCbits.TRISC5 = 0;
   866  0762  1683               	bsf	status, 5	;RP0=1, select bank1
   867  0763  1303               	bcf	status, 6	;RP1=0, select bank1
   868  0764  1287               	bcf	(135)^080h,5	;volatile
   869                           	line	81
   870                           ;pwmlib.c: 81: break;
   871  0765  2F68               	goto	l3041
   872                           	line	82
   873                           	
   874  0766                     l3038:	
   875  0766  2F5C               	goto	l5869
   876                           	line	83
   877                           	
   878  0767                     l3040:	
   879                           	line	75
   880  0767  2F5C               	goto	l5869
   881                           	
   882  0768                     l3039:	
   883                           	line	84
   884                           	
   885  0768                     l3041:	
   886  0768  0008               	return
   887                           	opt stack 0
   888                           GLOBAL	__end_of_BeginPWM
   889  0769                     	__end_of_BeginPWM:
   890 ;; =============== function _BeginPWM ends ============
   891                           
   892                           	signat	_BeginPWM,88
   893                           	global	_SetPulse
   894                           psect	text236,local,class=CODE,delta=2
   895                           global __ptext236
   896  0788                     __ptext236:
   897                           
   898 ;; *************** function _SetPulse *****************
   899 ;; Defined at:
   900 ;;		line 105 in file "pwmlib.c"
   901 ;; Parameters:    Size  Location     Type
   902 ;;  length          2    0[BANK0 ] int 
   903 ;; Auto vars:     Size  Location     Type
   904 ;;  temp            2    2[BANK0 ] int 
   905 ;; Return value:  Size  Location     Type
   906 ;;		None               void
   907 ;; Registers used:
   908 ;;		wreg, status,2, status,0, btemp+1
   909 ;; Tracked objects:
   910 ;;		On entry : 0/0
   911 ;;		On exit  : 0/0
   912 ;;		Unchanged: 0/0
   913 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   914 ;;      Params:         0       2       0       0       0
   915 ;;      Locals:         0       2       0       0       0
   916 ;;      Temps:          0       0       0       0       0
   917 ;;      Totals:         0       4       0       0       0
   918 ;;Total ram usage:        4 bytes
   919 ;; Hardware stack levels used:    1
   920 ;; Hardware stack levels required when called:    1
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_main
   925 ;;		_CalcPulse
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           psect	text236
   929                           	file	"pwmlib.c"
   930                           	line	105
   931                           	global	__size_of_SetPulse
   932  0020                     	__size_of_SetPulse	equ	__end_of_SetPulse-_SetPulse
   933                           	
   934  0788                     _SetPulse:	
   935                           	opt	stack 6
   936                           ; Regs used in _SetPulse: [wreg+status,2+status,0+btemp+1]
   937                           	line	106
   938                           	
   939  0788                     l5849:	
   940                           ;pwmlib.c: 106: int temp = length;
   941  0788  1283               	bcf	status, 5	;RP0=0, select bank0
   942  0789  1303               	bcf	status, 6	;RP1=0, select bank0
   943  078A  0837               	movf	(SetPulse@length+1),w
   944  078B  01B9               	clrf	(SetPulse@temp+1)
   945  078C  07B9               	addwf	(SetPulse@temp+1)
   946  078D  0836               	movf	(SetPulse@length),w
   947  078E  01B8               	clrf	(SetPulse@temp)
   948  078F  07B8               	addwf	(SetPulse@temp)
   949                           
   950                           	line	107
   951                           	
   952  0790                     l5851:	
   953                           ;pwmlib.c: 107: if (temp > 255)
   954  0790  0839               	movf	(SetPulse@temp+1),w
   955  0791  3A80               	xorlw	80h
   956  0792  00FF               	movwf	btemp+1
   957  0793  3081               	movlw	(high(0100h))^80h
   958  0794  027F               	subwf	btemp+1,w
   959  0795  1D03               	skipz
   960  0796  2F99               	goto	u2305
   961  0797  3000               	movlw	low(0100h)
   962  0798  0238               	subwf	(SetPulse@temp),w
   963  0799                     u2305:
   964                           
   965  0799  1C03               	skipc
   966  079A  2F9C               	goto	u2301
   967  079B  2F9D               	goto	u2300
   968  079C                     u2301:
   969  079C  2FA3               	goto	l3048
   970  079D                     u2300:
   971                           	line	108
   972                           	
   973  079D                     l5853:	
   974                           ;pwmlib.c: 108: temp = 255;
   975  079D  30FF               	movlw	low(0FFh)
   976  079E  1283               	bcf	status, 5	;RP0=0, select bank0
   977  079F  1303               	bcf	status, 6	;RP1=0, select bank0
   978  07A0  00B8               	movwf	(SetPulse@temp)
   979  07A1  3000               	movlw	high(0FFh)
   980  07A2  00B9               	movwf	((SetPulse@temp))+1
   981                           	
   982  07A3                     l3048:	
   983                           	line	109
   984                           ;pwmlib.c: 109: CCPR1L = temp;
   985  07A3  1283               	bcf	status, 5	;RP0=0, select bank0
   986  07A4  1303               	bcf	status, 6	;RP1=0, select bank0
   987  07A5  0838               	movf	(SetPulse@temp),w
   988  07A6  0095               	movwf	(21)	;volatile
   989                           	line	113
   990                           	
   991  07A7                     l3049:	
   992  07A7  0008               	return
   993                           	opt stack 0
   994                           GLOBAL	__end_of_SetPulse
   995  07A8                     	__end_of_SetPulse:
   996 ;; =============== function _SetPulse ends ============
   997                           
   998                           	signat	_SetPulse,4216
   999                           	global	_isr
  1000                           psect	text237,local,class=CODE,delta=2
  1001                           global __ptext237
  1002  07CA                     __ptext237:
  1003                           
  1004 ;; *************** function _isr *****************
  1005 ;; Defined at:
  1006 ;;		line 134 in file "PWMmain.c"
  1007 ;; Parameters:    Size  Location     Type
  1008 ;;		None
  1009 ;; Auto vars:     Size  Location     Type
  1010 ;;		None
  1011 ;; Return value:  Size  Location     Type
  1012 ;;		None               void
  1013 ;; Registers used:
  1014 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1015 ;; Tracked objects:
  1016 ;;		On entry : 0/0
  1017 ;;		On exit  : 0/0
  1018 ;;		Unchanged: 0/0
  1019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1020 ;;      Params:         0       0       0       0       0
  1021 ;;      Locals:         0       0       0       0       0
  1022 ;;      Temps:          7       0       0       0       0
  1023 ;;      Totals:         7       0       0       0       0
  1024 ;;Total ram usage:        7 bytes
  1025 ;; Hardware stack levels used:    1
  1026 ;; This function calls:
  1027 ;;		Nothing
  1028 ;; This function is called by:
  1029 ;;		Interrupt level 1
  1030 ;; This function uses a non-reentrant model
  1031 ;;
  1032                           psect	text237
  1033                           	file	"PWMmain.c"
  1034                           	line	134
  1035                           	global	__size_of_isr
  1036  0036                     	__size_of_isr	equ	__end_of_isr-_isr
  1037                           	
  1038  07CA                     _isr:	
  1039                           	opt	stack 5
  1040                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1041                           psect	intentry,class=CODE,delta=2
  1042                           global __pintentry
  1043  0004                     __pintentry:
  1044                           global interrupt_function
  1045  0004                     interrupt_function:
  1046                           	global saved_w
  1047  007E                     	saved_w	set	btemp+0
  1048  0004  00FE               	movwf	saved_w
  1049  0005  0E03               	swapf	status,w
  1050  0006  00F4               	movwf	(??_isr+3)
  1051  0007  0804               	movf	fsr0,w
  1052  0008  00F5               	movwf	(??_isr+4)
  1053  0009  080A               	movf	pclath,w
  1054  000A  00F6               	movwf	(??_isr+5)
  1055  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1056  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1057  000D  087F               	movf	btemp+1,w
  1058  000E  00F7               	movwf	(??_isr+6)
  1059  000F  120A  118A  2FCA   	ljmp	_isr
  1060                           psect	text237
  1061                           	line	159
  1062                           	
  1063  07CA                     i1l4927:	
  1064                           ;PWMmain.c: 159: if (val == 2)
  1065  07CA  3002               	movlw	02h
  1066  07CB  0678               	xorwf	(_val),w
  1067  07CC  0479               	iorwf	(_val+1),w
  1068  07CD  1D03               	skipz
  1069  07CE  2FD0               	goto	u4_21
  1070  07CF  2FD1               	goto	u4_20
  1071  07D0                     u4_21:
  1072  07D0  2FD4               	goto	i1l4931
  1073  07D1                     u4_20:
  1074                           	line	160
  1075                           	
  1076  07D1                     i1l4929:	
  1077                           ;PWMmain.c: 160: val = 0;
  1078  07D1  01F8               	clrf	(_val)
  1079  07D2  01F9               	clrf	(_val+1)
  1080  07D3  2FD4               	goto	i1l4931
  1081                           	
  1082  07D4                     i1l1528:	
  1083                           	line	162
  1084                           	
  1085  07D4                     i1l4931:	
  1086                           ;PWMmain.c: 162: if ((SSPSTAT & 0b00100000) == 0b00100000){
  1087  07D4  1683               	bsf	status, 5	;RP0=1, select bank1
  1088  07D5  1303               	bcf	status, 6	;RP1=0, select bank1
  1089  07D6  1E94               	btfss	(148)^080h,(5)&7
  1090  07D7  2FD9               	goto	u5_21
  1091  07D8  2FDA               	goto	u5_20
  1092  07D9                     u5_21:
  1093  07D9  2FF1               	goto	i1l4937
  1094  07DA                     u5_20:
  1095                           	line	166
  1096                           	
  1097  07DA                     i1l4933:	
  1098                           ;PWMmain.c: 166: i2cBuffer[val] = SSPBUF;
  1099  07DA  1283               	bcf	status, 5	;RP0=0, select bank0
  1100  07DB  1303               	bcf	status, 6	;RP1=0, select bank0
  1101  07DC  0813               	movf	(19),w	;volatile
  1102  07DD  00F1               	movwf	(??_isr+0)+0
  1103  07DE  01F2               	clrf	(??_isr+0)+0+1
  1104  07DF  0878               	movf	(_val),w
  1105  07E0  00F3               	movwf	(??_isr+2)+0
  1106  07E1  0773               	addwf	(??_isr+2)+0,w
  1107  07E2  3E20               	addlw	_i2cBuffer&0ffh
  1108  07E3  0084               	movwf	fsr0
  1109  07E4  0871               	movf	0+(??_isr+0)+0,w
  1110  07E5  1383               	bcf	status, 7	;select IRP bank0
  1111  07E6  0080               	movwf	indf
  1112  07E7  0A84               	incf	fsr0,f
  1113  07E8  0872               	movf	1+(??_isr+0)+0,w
  1114  07E9  0080               	movwf	indf
  1115                           	line	167
  1116                           	
  1117  07EA                     i1l4935:	
  1118                           ;PWMmain.c: 167: val++;
  1119  07EA  3001               	movlw	low(01h)
  1120  07EB  07F8               	addwf	(_val),f
  1121  07EC  1803               	skipnc
  1122  07ED  0AF9               	incf	(_val+1),f
  1123  07EE  3000               	movlw	high(01h)
  1124  07EF  07F9               	addwf	(_val+1),f
  1125                           	line	168
  1126                           ;PWMmain.c: 168: }
  1127  07F0  2FF4               	goto	i1l4939
  1128                           	line	169
  1129                           	
  1130  07F1                     i1l1529:	
  1131                           	line	170
  1132                           	
  1133  07F1                     i1l4937:	
  1134                           ;PWMmain.c: 169: else{
  1135                           ;PWMmain.c: 170: SSPBUF = 0;
  1136  07F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1137  07F2  0193               	clrf	(19)	;volatile
  1138  07F3  2FF4               	goto	i1l4939
  1139                           	line	171
  1140                           	
  1141  07F4                     i1l1530:	
  1142                           	line	174
  1143                           	
  1144  07F4                     i1l4939:	
  1145                           ;PWMmain.c: 171: }
  1146                           ;PWMmain.c: 174: SSPIF = 0;
  1147  07F4  118C               	bcf	(99/8),(99)&7
  1148                           	line	177
  1149                           	
  1150  07F5                     i1l1531:	
  1151  07F5  0877               	movf	(??_isr+6),w
  1152  07F6  00FF               	movwf	btemp+1
  1153  07F7  0876               	movf	(??_isr+5),w
  1154  07F8  008A               	movwf	pclath
  1155  07F9  0875               	movf	(??_isr+4),w
  1156  07FA  0084               	movwf	fsr0
  1157  07FB  0E74               	swapf	(??_isr+3)^0FFFFFF80h,w
  1158  07FC  0083               	movwf	status
  1159  07FD  0EFE               	swapf	saved_w,f
  1160  07FE  0E7E               	swapf	saved_w,w
  1161  07FF  0009               	retfie
  1162                           	opt stack 0
  1163                           GLOBAL	__end_of_isr
  1164  0800                     	__end_of_isr:
  1165 ;; =============== function _isr ends ============
  1166                           
  1167                           	signat	_isr,88
  1168                           psect	text238,local,class=CODE,delta=2
  1169                           global __ptext238
  1170  0000                     __ptext238:
  1171                           	global	btemp
  1172  007E                     	btemp set 07Eh
  1173                           
  1174                           	DABS	1,126,2	;btemp
  1175                           	global	wtemp0
  1176  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Dec 14 15:34:06 2012

                    _RD 0C60                      _WR 0C61                      fsr 0004                     _CKE 04A6  
                   _CKP 00A4                     _GIE 005F                     _PR2 0092                     _SMP 04A7  
                   _isr 07CA                     _val 0078                     fsr0 0004                     indf 0000  
                  l1510 07C7                    l3040 0767                    l3041 0768                    l1507 07AE  
                  l1508 07C6                    l3037 075C                    l1525 0787                    l1509 07C7  
                  l3038 0766                    l1534 071D                    l3039 0768                    l1519 074A  
                  l3048 07A3                    l3049 07A7                    l5901 073F                    l5903 0744  
                  l5911 07B6                    l5905 0747                    l5913 07C1                    l5851 0790  
                  l5907 07A8                    ?_isr 0071                    l5853 079D                    l5861 0756  
                  l5909 07AE                    l5871 0761                    l5863 0757                    l5855 074B  
                  l5849 0788                    l5865 0758                    l5857 074F                    l5881 0782  
                  l5873 0769                    l5867 0759                    l5859 0755                    l5883 0783  
                  l5875 077E                    l5869 075C                    l5877 0780                    l5885 0717  
                  l5879 0781                    l5899 0735                    u2300 079D                    u2301 079C  
                  u2310 0761                    u2311 0760                    u2305 0799                    _PEIE 005E  
                  _INTE 005C                    _WREN 0C62                    u4_20 07D1                    u4_21 07D0  
                  u5_20 07DA                    u5_21 07D9         ??_directionInit 0036                    _main 07A8  
                  btemp 007E                    start 0012                   ??_isr 0071                   ?_main 0071  
                 _EEADR 010D                   _CARRY 0018                   _T2CON 0012                   _PORTD 0008  
                 _SSPM0 00A0                   _SSPM1 00A1                   _SSPM2 00A2                   _SSPM3 00A3  
                 _TRISD 0088                   _SSPIE 0463                   _SSPIF 0063                   _SSPEN 00A5  
                 pclath 000A        __end_of_BeginPWM 0769                   status 0003                   wtemp0 007E  
          __end_of_main 07CA        __end_of_i2c_init 0788              _Initialise 0735                  ??_main 003A  
      __end_of_SetPulse 07A8                  _EEDATA 010C                  _CCPR1L 0015                  _EECON1 018C  
                _EECON2 018D                  i1l1530 07F4                  i1l1531 07F5                  i1l1528 07D4  
                i1l1529 07F1                  i1l4931 07D4                  i1l4933 07DA                  i1l4935 07EA  
                i1l4927 07CA                  i1l4937 07F1                  i1l4929 07D1                  i1l4939 07F4  
                _TMR2IF 0061                  _SSPADD 0093                  _TRISB3 0433                  _TRISC6 043E  
                _TRISC7 043F                  _SSPBUF 0013                  clrloop 071F                  saved_w 007E  
        __pcstackCOMMON 0071             ?_Initialise 0071               ?_BeginPWM 0071              __pbssBANK0 0020  
             ?_i2c_init 0071               ?_SetPulse 0036              __pmaintext 07A8              __pintentry 0004  
               _CCP1CON 0017              ??_BeginPWM 0036                 _SSPSTAT 0094              ??_i2c_init 0036  
   __size_of_Initialise 0016   __end_of_directionInit 071E              ??_SetPulse 0038               _T2CONbits 0012  
          __size_of_isr 0036    end_of_initialization 0731               _PORTBbits 0006          SetPulse@length 0036  
             _TRISCbits 0087             _CCP1CONbits 0017            ??_Initialise 0036               _i2cBuffer 0020  
   start_initialization 0726       __size_of_BeginPWM 001E             __end_of_isr 0800      __end_of_Initialise 074B  
     __size_of_i2c_init 001F       __size_of_SetPulse 0020            SetPulse@temp 0038             __pbssCOMMON 0078  
         __pcstackBANK0 0036               __ptext231 0000               __ptext232 0735               __ptext233 0717  
             __ptext234 0769               __ptext235 074B               __ptext236 0788               __ptext237 07CA  
             __ptext238 0000       interrupt_function 0004                _PIE1bits 008C                _PIR1bits 000C  
              _BeginPWM 074B  __size_of_directionInit 0007                _i2c_init 0769                _SetPulse 0788  
         __size_of_main 0022                clear_ram 071E           _directionInit 0717                _setSpeed 0034  
              intlevel1 0000          ?_directionInit 0071  
