

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Mar 18 16:58:57 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 23 "primarymain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 23 "primarymain.c"
    45  2007  F4F2               	dw 0xFFFA & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFFFF & 0xF7FF ;#
    46                           	FNCALL	_main,_Initialise
    47                           	FNCALL	_main,_SetPulse
    48                           	FNCALL	_main,_setDirection
    49                           	FNCALL	_main,_EncUpdate
    50                           	FNCALL	_main,_UpdateData
    51                           	FNCALL	_Initialise,_BeginPWM
    52                           	FNCALL	_Initialise,_BeginEncoder
    53                           	FNCALL	_Initialise,_i2cInit
    54                           	FNROOT	_main
    55                           	FNCALL	_isr,_i2cIsrHandler
    56                           	FNCALL	_i2cIsrHandler,_i2cSend
    57                           	FNCALL	_i2cIsrHandler,_i2cDataUpdate
    58                           	FNCALL	intlevel1,_isr
    59                           	global	intlevel1
    60                           	FNROOT	intlevel1
    61                           	global	_i2cBuffer
    62                           	global	_COUNTS
    63                           	global	_DIRECTION
    64                           	global	_DIR_READ
    65                           	global	_TARGET
    66                           	global	_i2cDirection
    67                           	global	_i2cRequest
    68                           	global	_i2cSpeed
    69                           	global	_i2cWriteInt
    70                           	global	_i2cBufferVal
    71                           	global	_TMR1
    72                           psect	text361,local,class=CODE,delta=2
    73                           global __ptext361
    74  0000                     __ptext361:
    75  000E                     _TMR1	set	14
    76                           	global	_CCP2CON
    77  001D                     _CCP2CON	set	29
    78                           	global	_CCP2CONbits
    79  001D                     _CCP2CONbits	set	29
    80                           	global	_CCPR2L
    81  001B                     _CCPR2L	set	27
    82                           	global	_PIR1bits
    83  000C                     _PIR1bits	set	12
    84                           	global	_PORTBbits
    85  0006                     _PORTBbits	set	6
    86                           	global	_PORTD
    87  0008                     _PORTD	set	8
    88                           	global	_SSPBUF
    89  0013                     _SSPBUF	set	19
    90                           	global	_SSPCONbits
    91  0014                     _SSPCONbits	set	20
    92                           	global	_T1CON
    93  0010                     _T1CON	set	16
    94                           	global	_T2CON
    95  0012                     _T2CON	set	18
    96                           	global	_T2CONbits
    97  0012                     _T2CONbits	set	18
    98                           	global	_TMR0
    99  0001                     _TMR0	set	1
   100                           	global	_CARRY
   101  0018                     _CARRY	set	24
   102                           	global	_CKP
   103  00A4                     _CKP	set	164
   104                           	global	_GIE
   105  005F                     _GIE	set	95
   106                           	global	_PEIE
   107  005E                     _PEIE	set	94
   108                           	global	_RB5
   109  0035                     _RB5	set	53
   110                           	global	_RBIE
   111  005B                     _RBIE	set	91
   112                           	global	_RBIF
   113  0058                     _RBIF	set	88
   114                           	global	_SSPEN
   115  00A5                     _SSPEN	set	165
   116                           	global	_SSPIF
   117  0063                     _SSPIF	set	99
   118                           	global	_SSPM0
   119  00A0                     _SSPM0	set	160
   120                           	global	_SSPM1
   121  00A1                     _SSPM1	set	161
   122                           	global	_SSPM2
   123  00A2                     _SSPM2	set	162
   124                           	global	_SSPM3
   125  00A3                     _SSPM3	set	163
   126                           	global	_T0IE
   127  005D                     _T0IE	set	93
   128                           	global	_T0IF
   129  005A                     _T0IF	set	90
   130                           	global	_TMR1IF
   131  0060                     _TMR1IF	set	96
   132                           	global	_TMR2IF
   133  0061                     _TMR2IF	set	97
   134                           	global	_CMCON1
   135  0097                     _CMCON1	set	151
   136                           	global	_OPTION_REG
   137  0081                     _OPTION_REG	set	129
   138                           	global	_PIE1
   139  008C                     _PIE1	set	140
   140                           	global	_PIE1bits
   141  008C                     _PIE1bits	set	140
   142                           	global	_PIE2
   143  008D                     _PIE2	set	141
   144                           	global	_PR2
   145  0092                     _PR2	set	146
   146                           	global	_SSPADD
   147  0093                     _SSPADD	set	147
   148                           	global	_SSPSTAT
   149  0094                     _SSPSTAT	set	148
   150                           	global	_TRISB
   151  0086                     _TRISB	set	134
   152                           	global	_TRISD
   153  0088                     _TRISD	set	136
   154                           	global	_TRISDbits
   155  0088                     _TRISDbits	set	136
   156                           	global	_CKE
   157  04A6                     _CKE	set	1190
   158                           	global	_SMP
   159  04A7                     _SMP	set	1191
   160                           	global	_TRISC6
   161  043E                     _TRISC6	set	1086
   162                           	global	_TRISC7
   163  043F                     _TRISC7	set	1087
   164                           	global	_EEADR
   165  010D                     _EEADR	set	269
   166                           	global	_EEDATA
   167  010C                     _EEDATA	set	268
   168                           	global	_EECON1
   169  018C                     _EECON1	set	396
   170                           	global	_EECON2
   171  018D                     _EECON2	set	397
   172                           	global	_RD
   173  0C60                     _RD	set	3168
   174                           	global	_WR
   175  0C61                     _WR	set	3169
   176                           	global	_WREN
   177  0C62                     _WREN	set	3170
   178                           	global	_FLAG
   179  00AA                     _FLAG	set	170
   180                           	DABS	1,170,1	;_FLAG
   181                           
   182                           	global	_F
   183  00AA                     _F	set	170
   184                           	DABS	1,170,1	;_F
   185                           
   186                           	global	_DIR
   187  0553                     _DIR	set	1363
   188                           	DABS	1,170,1	;_DIR
   189                           
   190                           	global	_ERR
   191  0554                     _ERR	set	1364
   192                           	DABS	1,170,1	;_ERR
   193                           
   194                           	global	_I2C
   195  0550                     _I2C	set	1360
   196                           	DABS	1,170,1	;_I2C
   197                           
   198                           	global	_T0
   199  0551                     _T0	set	1361
   200                           	DABS	1,170,1	;_T0
   201                           
   202                           	global	_T1
   203  0552                     _T1	set	1362
   204                           	DABS	1,170,1	;_T1
   205                           
   206                           	file	"C:\Users\Alan\AppData\Local\Temp\s54o."
   207                           	line	#
   208                           psect cinit,class=CODE,delta=2
   209                           global start_initialization
   210  05BE                     start_initialization:
   211                           
   212                           psect	bssCOMMON,class=COMMON,space=1
   213                           global __pbssCOMMON
   214  007D                     __pbssCOMMON:
   215  007D                     _i2cBufferVal:
   216  007D                            ds      1
   217                           
   218                           psect	bssBANK0,class=BANK0,space=1
   219                           global __pbssBANK0
   220  0036                     __pbssBANK0:
   221  0036                     _i2cBuffer:
   222  0036                            ds      3
   223                           
   224  0039                     _COUNTS:
   225  0039                            ds      2
   226                           
   227  003B                     _DIRECTION:
   228  003B                            ds      2
   229                           
   230  003D                     _DIR_READ:
   231  003D                            ds      2
   232                           
   233  003F                     _TARGET:
   234  003F                            ds      2
   235                           
   236  0041                     _i2cDirection:
   237  0041                            ds      1
   238                           
   239  0042                     _i2cRequest:
   240  0042                            ds      1
   241                           
   242  0043                     _i2cSpeed:
   243  0043                            ds      1
   244                           
   245  0044                     _i2cWriteInt:
   246  0044                            ds      1
   247                           
   248                           ; Clear objects allocated to COMMON
   249                           psect cinit,class=CODE,delta=2
   250  05BE  01FD               	clrf	((__pbssCOMMON)+0)&07Fh
   251                           ; Clear objects allocated to BANK0
   252                           psect cinit,class=CODE,delta=2
   253  05BF  01B6               	clrf	((__pbssBANK0)+0)&07Fh
   254  05C0  01B7               	clrf	((__pbssBANK0)+1)&07Fh
   255  05C1  01B8               	clrf	((__pbssBANK0)+2)&07Fh
   256  05C2  01B9               	clrf	((__pbssBANK0)+3)&07Fh
   257  05C3  01BA               	clrf	((__pbssBANK0)+4)&07Fh
   258  05C4  01BB               	clrf	((__pbssBANK0)+5)&07Fh
   259  05C5  01BC               	clrf	((__pbssBANK0)+6)&07Fh
   260  05C6  01BD               	clrf	((__pbssBANK0)+7)&07Fh
   261  05C7  01BE               	clrf	((__pbssBANK0)+8)&07Fh
   262  05C8  01BF               	clrf	((__pbssBANK0)+9)&07Fh
   263  05C9  01C0               	clrf	((__pbssBANK0)+10)&07Fh
   264  05CA  01C1               	clrf	((__pbssBANK0)+11)&07Fh
   265  05CB  01C2               	clrf	((__pbssBANK0)+12)&07Fh
   266  05CC  01C3               	clrf	((__pbssBANK0)+13)&07Fh
   267  05CD  01C4               	clrf	((__pbssBANK0)+14)&07Fh
   268                           psect cinit,class=CODE,delta=2
   269                           global end_of_initialization
   270                           
   271                           ;End of C runtime variable initialization code
   272                           
   273  05CE                     end_of_initialization:
   274  05CE  0183               clrf status
   275  05CF  120A  118A  2F65   ljmp _main	;jump to C main() function
   276                           psect	cstackCOMMON,class=COMMON,space=1
   277                           global __pcstackCOMMON
   278  0071                     __pcstackCOMMON:
   279                           	global	?_Initialise
   280  0071                     ?_Initialise:	; 0 bytes @ 0x0
   281                           	global	?_BeginPWM
   282  0071                     ?_BeginPWM:	; 0 bytes @ 0x0
   283                           	global	?_BeginEncoder
   284  0071                     ?_BeginEncoder:	; 0 bytes @ 0x0
   285                           	global	?_i2cInit
   286  0071                     ?_i2cInit:	; 0 bytes @ 0x0
   287                           	global	?_i2cIsrHandler
   288  0071                     ?_i2cIsrHandler:	; 0 bytes @ 0x0
   289                           	global	?_i2cSend
   290  0071                     ?_i2cSend:	; 0 bytes @ 0x0
   291                           	global	??_i2cSend
   292  0071                     ??_i2cSend:	; 0 bytes @ 0x0
   293                           	global	?_i2cDataUpdate
   294  0071                     ?_i2cDataUpdate:	; 0 bytes @ 0x0
   295                           	global	??_i2cDataUpdate
   296  0071                     ??_i2cDataUpdate:	; 0 bytes @ 0x0
   297                           	global	?_isr
   298  0071                     ?_isr:	; 0 bytes @ 0x0
   299                           	global	?_main
   300  0071                     ?_main:	; 2 bytes @ 0x0
   301                           	global	i2cSend@i
   302  0071                     i2cSend@i:	; 2 bytes @ 0x0
   303  0071                     	ds	2
   304                           	global	i2cSend@msg
   305  0073                     i2cSend@msg:	; 1 bytes @ 0x2
   306  0073                     	ds	1
   307                           	global	??_i2cIsrHandler
   308  0074                     ??_i2cIsrHandler:	; 0 bytes @ 0x3
   309  0074                     	ds	1
   310                           	global	i2cIsrHandler@i
   311  0075                     i2cIsrHandler@i:	; 2 bytes @ 0x4
   312  0075                     	ds	2
   313                           	global	??_isr
   314  0077                     ??_isr:	; 0 bytes @ 0x6
   315  0077                     	ds	6
   316                           psect	cstackBANK0,class=BANK0,space=1
   317                           global __pcstackBANK0
   318  0020                     __pcstackBANK0:
   319                           	global	?_SetPulse
   320  0020                     ?_SetPulse:	; 0 bytes @ 0x0
   321                           	global	?_setDirection
   322  0020                     ?_setDirection:	; 0 bytes @ 0x0
   323                           	global	?_EncUpdate
   324  0020                     ?_EncUpdate:	; 0 bytes @ 0x0
   325                           	global	?_UpdateData
   326  0020                     ?_UpdateData:	; 0 bytes @ 0x0
   327                           	global	??_BeginPWM
   328  0020                     ??_BeginPWM:	; 0 bytes @ 0x0
   329                           	global	??_BeginEncoder
   330  0020                     ??_BeginEncoder:	; 0 bytes @ 0x0
   331                           	global	??_i2cInit
   332  0020                     ??_i2cInit:	; 0 bytes @ 0x0
   333                           	global	i2cInit@address
   334  0020                     i2cInit@address:	; 1 bytes @ 0x0
   335                           	global	UpdateData@t
   336  0020                     UpdateData@t:	; 2 bytes @ 0x0
   337                           	global	setDirection@dir
   338  0020                     setDirection@dir:	; 2 bytes @ 0x0
   339                           	global	SetPulse@length
   340  0020                     SetPulse@length:	; 2 bytes @ 0x0
   341                           	global	EncUpdate@t0
   342  0020                     EncUpdate@t0:	; 2 bytes @ 0x0
   343  0020                     	ds	1
   344                           	global	??_Initialise
   345  0021                     ??_Initialise:	; 0 bytes @ 0x1
   346  0021                     	ds	1
   347                           	global	??_SetPulse
   348  0022                     ??_SetPulse:	; 0 bytes @ 0x2
   349                           	global	??_setDirection
   350  0022                     ??_setDirection:	; 0 bytes @ 0x2
   351                           	global	UpdateData@c
   352  0022                     UpdateData@c:	; 2 bytes @ 0x2
   353                           	global	SetPulse@temp
   354  0022                     SetPulse@temp:	; 2 bytes @ 0x2
   355                           	global	EncUpdate@t1
   356  0022                     EncUpdate@t1:	; 2 bytes @ 0x2
   357  0022                     	ds	2
   358                           	global	??_EncUpdate
   359  0024                     ??_EncUpdate:	; 0 bytes @ 0x4
   360                           	global	??_UpdateData
   361  0024                     ??_UpdateData:	; 0 bytes @ 0x4
   362  0024                     	ds	2
   363                           	global	??_main
   364  0026                     ??_main:	; 0 bytes @ 0x6
   365  0026                     	ds	2
   366                           	global	main@currentPWM
   367  0028                     main@currentPWM:	; 2 bytes @ 0x8
   368  0028                     	ds	2
   369                           	global	main@I
   370  002A                     main@I:	; 2 bytes @ 0xA
   371  002A                     	ds	2
   372                           	global	main@D
   373  002C                     main@D:	; 2 bytes @ 0xC
   374  002C                     	ds	2
   375                           	global	main@P_old
   376  002E                     main@P_old:	; 2 bytes @ 0xE
   377  002E                     	ds	2
   378                           	global	main@time
   379  0030                     main@time:	; 2 bytes @ 0x10
   380  0030                     	ds	2
   381                           	global	main@counts
   382  0032                     main@counts:	; 2 bytes @ 0x12
   383  0032                     	ds	2
   384                           	global	main@t
   385  0034                     main@t:	; 1 bytes @ 0x14
   386  0034                     	ds	1
   387                           	global	main@c
   388  0035                     main@c:	; 1 bytes @ 0x15
   389  0035                     	ds	1
   390 ;;Data sizes: Strings 0, constant 0, data 0, bss 16, persistent 0 stack 0
   391 ;;Auto spaces:   Size  Autos    Used
   392 ;; COMMON          13     12      13
   393 ;; BANK0           80     22      37
   394 ;; BANK1h          69      0       0
   395 ;; BANK1l          10      0       0
   396 ;; BANK3           96      0       0
   397 ;; BANK2           69      0       0
   398                           
   399 ;;
   400 ;; Pointer list with targets:
   401                           
   402 ;; EncUpdate@t0	PTR int  size(2) Largest target is 512
   403 ;;		 -> RAM(DATA[512]), 
   404 ;;
   405 ;; EncUpdate@t1	PTR int  size(2) Largest target is 512
   406 ;;		 -> RAM(DATA[512]), 
   407 ;;
   408                           
   409                           
   410 ;;
   411 ;; Critical Paths under _main in COMMON
   412 ;;
   413 ;;   None.
   414 ;;
   415 ;; Critical Paths under _isr in COMMON
   416 ;;
   417 ;;   _isr->_i2cIsrHandler
   418 ;;   _i2cIsrHandler->_i2cSend
   419 ;;
   420 ;; Critical Paths under _main in BANK0
   421 ;;
   422 ;;   _main->_EncUpdate
   423 ;;   _Initialise->_i2cInit
   424 ;;
   425 ;; Critical Paths under _isr in BANK0
   426 ;;
   427 ;;   None.
   428 ;;
   429 ;; Critical Paths under _main in BANK1h
   430 ;;
   431 ;;   None.
   432 ;;
   433 ;; Critical Paths under _isr in BANK1h
   434 ;;
   435 ;;   None.
   436 ;;
   437 ;; Critical Paths under _main in BANK1l
   438 ;;
   439 ;;   None.
   440 ;;
   441 ;; Critical Paths under _isr in BANK1l
   442 ;;
   443 ;;   None.
   444 ;;
   445 ;; Critical Paths under _main in BANK3
   446 ;;
   447 ;;   None.
   448 ;;
   449 ;; Critical Paths under _isr in BANK3
   450 ;;
   451 ;;   None.
   452 ;;
   453 ;; Critical Paths under _main in BANK2
   454 ;;
   455 ;;   None.
   456 ;;
   457 ;; Critical Paths under _isr in BANK2
   458 ;;
   459 ;;   None.
   460                           
   461 ;;
   462 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   463 ;;
   464                           
   465 ;;
   466 ;;Call Graph Tables:
   467 ;;
   468 ;; ---------------------------------------------------------------------------------
   469 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   470 ;; ---------------------------------------------------------------------------------
   471 ;; (0) _main                                                22    22      0     341
   472 ;;                                              6 BANK0     16    16      0
   473 ;;                         _Initialise
   474 ;;                           _SetPulse
   475 ;;                       _setDirection
   476 ;;                          _EncUpdate
   477 ;;                         _UpdateData
   478 ;; ---------------------------------------------------------------------------------
   479 ;; (1) _Initialise                                           0     0      0      22
   480 ;;                           _BeginPWM
   481 ;;                       _BeginEncoder
   482 ;;                            _i2cInit
   483 ;; ---------------------------------------------------------------------------------
   484 ;; (2) _i2cInit                                              1     1      0      22
   485 ;;                                              0 BANK0      1     1      0
   486 ;; ---------------------------------------------------------------------------------
   487 ;; (2) _BeginEncoder                                         0     0      0       0
   488 ;; ---------------------------------------------------------------------------------
   489 ;; (2) _BeginPWM                                             0     0      0       0
   490 ;; ---------------------------------------------------------------------------------
   491 ;; (1) _UpdateData                                           4     0      4      44
   492 ;;                                              0 BANK0      4     0      4
   493 ;; ---------------------------------------------------------------------------------
   494 ;; (1) _EncUpdate                                            6     2      4      44
   495 ;;                                              0 BANK0      6     2      4
   496 ;; ---------------------------------------------------------------------------------
   497 ;; (1) _setDirection                                         2     0      2      44
   498 ;;                                              0 BANK0      2     0      2
   499 ;; ---------------------------------------------------------------------------------
   500 ;; (1) _SetPulse                                             4     2      2      68
   501 ;;                                              0 BANK0      4     2      2
   502 ;; ---------------------------------------------------------------------------------
   503 ;; Estimated maximum stack depth 2
   504 ;; ---------------------------------------------------------------------------------
   505 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   506 ;; ---------------------------------------------------------------------------------
   507 ;; (3) _isr                                                  6     6      0      26
   508 ;;                                              6 COMMON     6     6      0
   509 ;;                      _i2cIsrHandler
   510 ;; ---------------------------------------------------------------------------------
   511 ;; (4) _i2cIsrHandler                                        3     3      0      26
   512 ;;                                              3 COMMON     3     3      0
   513 ;;                            _i2cSend
   514 ;;                      _i2cDataUpdate
   515 ;; ---------------------------------------------------------------------------------
   516 ;; (5) _i2cDataUpdate                                        1     1      0       0
   517 ;;                                              0 COMMON     1     1      0
   518 ;; ---------------------------------------------------------------------------------
   519 ;; (5) _i2cSend                                              3     3      0      24
   520 ;;                                              0 COMMON     3     3      0
   521 ;; ---------------------------------------------------------------------------------
   522 ;; Estimated maximum stack depth 5
   523 ;; ---------------------------------------------------------------------------------
   524                           
   525 ;; Call Graph Graphs:
   526                           
   527 ;; _main (ROOT)
   528 ;;   _Initialise
   529 ;;     _BeginPWM
   530 ;;     _BeginEncoder
   531 ;;     _i2cInit
   532 ;;   _SetPulse
   533 ;;   _setDirection
   534 ;;   _EncUpdate
   535 ;;   _UpdateData
   536 ;;
   537 ;; _isr (ROOT)
   538 ;;   _i2cIsrHandler
   539 ;;     _i2cSend
   540 ;;     _i2cDataUpdate
   541 ;;
   542                           
   543 ;; Address spaces:
   544                           
   545 ;;Name               Size   Autos  Total    Cost      Usage
   546 ;;BITCOMMON            D      0       0       0        0.0%
   547 ;;EEDATA             100      0       0       0        0.0%
   548 ;;NULL                 0      0       0       0        0.0%
   549 ;;CODE                 0      0       0       0        0.0%
   550 ;;COMMON               D      C       D       1      100.0%
   551 ;;BITSFR0              0      0       0       1        0.0%
   552 ;;SFR0                 0      0       0       1        0.0%
   553 ;;BITSFR1              0      0       0       2        0.0%
   554 ;;SFR1                 0      0       0       2        0.0%
   555 ;;STACK                0      0       8       2        0.0%
   556 ;;BITBANK0            50      0       0       3        0.0%
   557 ;;BANK0               50     16      25       4       46.3%
   558 ;;BITSFR3              0      0       0       4        0.0%
   559 ;;SFR3                 0      0       0       4        0.0%
   560 ;;BITBANK1h           45      0       0       5        0.0%
   561 ;;BITSFR2              0      0       0       5        0.0%
   562 ;;SFR2                 0      0       0       5        0.0%
   563 ;;BITBANK1l            A      0       0       6        0.0%
   564 ;;BANK1h              45      0       0       7        0.0%
   565 ;;BANK1l               A      0       0       8        0.0%
   566 ;;BITBANK3            60      0       0       9        0.0%
   567 ;;BANK3               60      0       0      10        0.0%
   568 ;;BANK2               45      0       0      11        0.0%
   569 ;;ABS                  0      0      32      12        0.0%
   570 ;;BITBANK2            45      0       0      13        0.0%
   571 ;;DATA                 0      0      3A      14        0.0%
   572                           
   573                           	global	_main
   574                           psect	maintext,global,class=CODE,delta=2
   575                           global __pmaintext
   576  0765                     __pmaintext:
   577                           
   578 ;; *************** function _main *****************
   579 ;; Defined at:
   580 ;;		line 102 in file "primarymain.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  counts          2   18[BANK0 ] int 
   585 ;;  time            2   16[BANK0 ] int 
   586 ;;  P_old           2   14[BANK0 ] int 
   587 ;;  D               2   12[BANK0 ] int 
   588 ;;  I               2   10[BANK0 ] int 
   589 ;;  currentPWM      2    8[BANK0 ] int 
   590 ;;  PID             2    0        int 
   591 ;;  P               2    0        int 
   592 ;;  v               2    0        int 
   593 ;;  c               1   21[BANK0 ] PTR int 
   594 ;;  t               1   20[BANK0 ] PTR int 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  2  1542[COMMON] int 
   597 ;; Registers used:
   598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 17F/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0       0
   605 ;;      Locals:         0      14       0       0       0       0
   606 ;;      Temps:          0       2       0       0       0       0
   607 ;;      Totals:         0      16       0       0       0       0
   608 ;;Total ram usage:       16 bytes
   609 ;; Hardware stack levels required when called:    5
   610 ;; This function calls:
   611 ;;		_Initialise
   612 ;;		_SetPulse
   613 ;;		_setDirection
   614 ;;		_EncUpdate
   615 ;;		_UpdateData
   616 ;; This function is called by:
   617 ;;		Startup code after reset
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           psect	maintext
   621                           	file	"primarymain.c"
   622                           	line	102
   623                           	global	__size_of_main
   624  009B                     	__size_of_main	equ	__end_of_main-_main
   625                           	
   626  0765                     _main:	
   627                           	opt	stack 3
   628                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   629                           	line	104
   630                           	
   631  0765                     l9211:	
   632                           ;primarymain.c: 104: int time = 0, counts = 0;
   633  0765  1283               	bcf	status, 5	;RP0=0, select bank0
   634  0766  1303               	bcf	status, 6	;RP1=0, select bank0
   635  0767  01B0               	clrf	(main@time)
   636  0768  01B1               	clrf	(main@time+1)
   637                           ;primarymain.c: 109: *c = counts;
   638  0769  01B2               	clrf	(main@counts)
   639  076A  01B3               	clrf	(main@counts+1)
   640                           	line	110
   641                           ;primarymain.c: 110: int currentPWM = 0;
   642  076B  01A8               	clrf	(main@currentPWM)
   643  076C  01A9               	clrf	(main@currentPWM+1)
   644                           	line	113
   645                           ;primarymain.c: 111: int v;
   646                           ;primarymain.c: 113: int P, I, D, P_old = 0, PID;
   647  076D  01AE               	clrf	(main@P_old)
   648  076E  01AF               	clrf	(main@P_old+1)
   649                           	line	118
   650                           	
   651  076F                     l9213:	
   652                           ;primarymain.c: 118: Initialise();
   653  076F  120A  118A  2679   	fcall	_Initialise
              120A  118A         
   654                           	line	120
   655                           	
   656  0774                     l9215:	
   657                           ;primarymain.c: 120: TARGET = 30;
   658  0774  301E               	movlw	low(01Eh)
   659  0775  1283               	bcf	status, 5	;RP0=0, select bank0
   660  0776  1303               	bcf	status, 6	;RP1=0, select bank0
   661  0777  00BF               	movwf	(_TARGET)
   662  0778  3000               	movlw	high(01Eh)
   663  0779  00C0               	movwf	((_TARGET))+1
   664                           	line	121
   665                           	
   666  077A                     l9217:	
   667                           ;primarymain.c: 121: SetPulse(0);
   668  077A  3000               	movlw	low(0)
   669  077B  00A0               	movwf	(?_SetPulse)
   670  077C  3000               	movlw	high(0)
   671  077D  00A1               	movwf	((?_SetPulse))+1
   672  077E  120A  118A  2659   	fcall	_SetPulse
              120A  118A         
   673  0783  2F84               	goto	l9219
   674                           	line	123
   675                           ;primarymain.c: 123: while(1)
   676                           	
   677  0784                     l1543:	
   678                           	line	134
   679                           	
   680  0784                     l9219:	
   681                           ;primarymain.c: 124: {
   682                           ;primarymain.c: 134: PORTD = TMR1;
   683  0784  1283               	bcf	status, 5	;RP0=0, select bank0
   684  0785  1303               	bcf	status, 6	;RP1=0, select bank0
   685  0786  080E               	movf	(14),w	;volatile
   686  0787  0088               	movwf	(8)	;volatile
   687                           	line	135
   688                           	
   689  0788                     l9221:	
   690                           ;primarymain.c: 135: SetPulse(i2cSpeed);
   691  0788  0843               	movf	(_i2cSpeed),w
   692  0789  00A6               	movwf	(??_main+0)+0
   693  078A  01A7               	clrf	(??_main+0)+0+1
   694  078B  0826               	movf	0+(??_main+0)+0,w
   695  078C  00A0               	movwf	(?_SetPulse)
   696  078D  0827               	movf	1+(??_main+0)+0,w
   697  078E  00A1               	movwf	(?_SetPulse+1)
   698  078F  120A  118A  2659   	fcall	_SetPulse
              120A  118A         
   699                           	line	136
   700                           	
   701  0794                     l9223:	
   702                           ;primarymain.c: 136: DIRECTION = i2cDirection;
   703  0794  1283               	bcf	status, 5	;RP0=0, select bank0
   704  0795  1303               	bcf	status, 6	;RP1=0, select bank0
   705  0796  0841               	movf	(_i2cDirection),w
   706  0797  00A6               	movwf	(??_main+0)+0
   707  0798  01A7               	clrf	(??_main+0)+0+1
   708  0799  0826               	movf	0+(??_main+0)+0,w
   709  079A  00BB               	movwf	(_DIRECTION)
   710  079B  0827               	movf	1+(??_main+0)+0,w
   711  079C  00BC               	movwf	(_DIRECTION+1)
   712                           	line	137
   713                           	
   714  079D                     l9225:	
   715                           ;primarymain.c: 137: setDirection(DIRECTION);
   716  079D  083C               	movf	(_DIRECTION+1),w
   717  079E  01A1               	clrf	(?_setDirection+1)
   718  079F  07A1               	addwf	(?_setDirection+1)
   719  07A0  083B               	movf	(_DIRECTION),w
   720  07A1  01A0               	clrf	(?_setDirection)
   721  07A2  07A0               	addwf	(?_setDirection)
   722                           
   723  07A3  120A  118A  25D2   	fcall	_setDirection
              120A  118A         
   724                           	line	142
   725                           	
   726  07A8                     l9227:	
   727                           ;primarymain.c: 142: if (F.I2C == 1)
   728  07A8  1683               	bsf	status, 5	;RP0=1, select bank1
   729  07A9  1303               	bcf	status, 6	;RP1=0, select bank1
   730  07AA  1C2A               	btfss	(170)^080h,0
   731  07AB  2FAD               	goto	u2621
   732  07AC  2FAE               	goto	u2620
   733  07AD                     u2621:
   734  07AD  2FBC               	goto	l9233
   735  07AE                     u2620:
   736                           	line	149
   737                           	
   738  07AE                     l9229:	
   739                           ;primarymain.c: 143: {
   740                           ;primarymain.c: 149: COUNTS = 0;
   741  07AE  1283               	bcf	status, 5	;RP0=0, select bank0
   742  07AF  1303               	bcf	status, 6	;RP1=0, select bank0
   743  07B0  01B9               	clrf	(_COUNTS)
   744  07B1  01BA               	clrf	(_COUNTS+1)
   745                           	line	150
   746                           ;primarymain.c: 150: I = 0;
   747  07B2  01AA               	clrf	(main@I)
   748  07B3  01AB               	clrf	(main@I+1)
   749                           	line	151
   750                           ;primarymain.c: 151: D = 0;
   751  07B4  01AC               	clrf	(main@D)
   752  07B5  01AD               	clrf	(main@D+1)
   753                           	line	152
   754                           ;primarymain.c: 152: P_old = 0;
   755  07B6  01AE               	clrf	(main@P_old)
   756  07B7  01AF               	clrf	(main@P_old+1)
   757                           	line	155
   758                           	
   759  07B8                     l9231:	
   760                           ;primarymain.c: 155: F.I2C = 0;
   761  07B8  1683               	bsf	status, 5	;RP0=1, select bank1
   762  07B9  1303               	bcf	status, 6	;RP1=0, select bank1
   763  07BA  102A               	bcf	(170)^080h,0
   764  07BB  2FBC               	goto	l9233
   765                           	line	156
   766                           	
   767  07BC                     l1544:	
   768                           	line	158
   769                           	
   770  07BC                     l9233:	
   771                           ;primarymain.c: 156: }
   772                           ;primarymain.c: 158: if (F.DIR == 1)
   773  07BC  1DAA               	btfss	(170)^080h,3
   774  07BD  2FBF               	goto	u2631
   775  07BE  2FC0               	goto	u2630
   776  07BF                     u2631:
   777  07BF  2F84               	goto	l9219
   778  07C0                     u2630:
   779                           	line	161
   780                           	
   781  07C0                     l9235:	
   782                           ;primarymain.c: 159: {
   783                           ;primarymain.c: 161: EncUpdate(*t, *c);
   784  07C0  1283               	bcf	status, 5	;RP0=0, select bank0
   785  07C1  1303               	bcf	status, 6	;RP1=0, select bank0
   786  07C2  0834               	movf	(main@t),w
   787  07C3  0084               	movwf	fsr0
   788  07C4  1383               	bcf	status, 7	;select IRP bank0
   789  07C5  0800               	movf	indf,w
   790  07C6  00A0               	movwf	(?_EncUpdate)
   791  07C7  0A84               	incf	fsr0,f
   792  07C8  0800               	movf	indf,w
   793  07C9  00A1               	movwf	(?_EncUpdate+1)
   794  07CA  0835               	movf	(main@c),w
   795  07CB  0084               	movwf	fsr0
   796  07CC  0800               	movf	indf,w
   797  07CD  00A2               	movwf	(0+?_EncUpdate+02h)
   798  07CE  0A84               	incf	fsr0,f
   799  07CF  0800               	movf	indf,w
   800  07D0  00A3               	movwf	(1+?_EncUpdate+02h)
   801  07D1  120A  118A  2600   	fcall	_EncUpdate
              120A  118A         
   802                           	line	162
   803                           	
   804  07D6                     l9237:	
   805                           ;primarymain.c: 162: UpdateData(time, counts);
   806  07D6  1283               	bcf	status, 5	;RP0=0, select bank0
   807  07D7  1303               	bcf	status, 6	;RP1=0, select bank0
   808  07D8  0831               	movf	(main@time+1),w
   809  07D9  01A1               	clrf	(?_UpdateData+1)
   810  07DA  07A1               	addwf	(?_UpdateData+1)
   811  07DB  0830               	movf	(main@time),w
   812  07DC  01A0               	clrf	(?_UpdateData)
   813  07DD  07A0               	addwf	(?_UpdateData)
   814                           
   815  07DE  0833               	movf	(main@counts+1),w
   816  07DF  01A3               	clrf	1+(?_UpdateData)+02h
   817  07E0  07A3               	addwf	1+(?_UpdateData)+02h
   818  07E1  0832               	movf	(main@counts),w
   819  07E2  01A2               	clrf	0+(?_UpdateData)+02h
   820  07E3  07A2               	addwf	0+(?_UpdateData)+02h
   821                           
   822  07E4  120A  118A  25E9   	fcall	_UpdateData
              120A  118A         
   823                           	line	165
   824                           	
   825  07E9                     l9239:	
   826                           ;primarymain.c: 165: DIR_READ = RB5;
   827  07E9  1003               	clrc
   828  07EA  1283               	bcf	status, 5	;RP0=0, select bank0
   829  07EB  1303               	bcf	status, 6	;RP1=0, select bank0
   830  07EC  1A86               	btfsc	(53/8),(53)&7
   831  07ED  1403               	setc
   832  07EE  3000               	movlw	0
   833  07EF  1803               	skipnc
   834  07F0  3001               	movlw	1
   835                           
   836  07F1  00A6               	movwf	(??_main+0)+0
   837  07F2  01A7               	clrf	(??_main+0)+0+1
   838  07F3  0826               	movf	0+(??_main+0)+0,w
   839  07F4  00BD               	movwf	(_DIR_READ)
   840  07F5  0827               	movf	1+(??_main+0)+0,w
   841  07F6  00BE               	movwf	(_DIR_READ+1)
   842                           	line	168
   843                           	
   844  07F7                     l9241:	
   845                           ;primarymain.c: 168: F.DIR = 0;
   846  07F7  1683               	bsf	status, 5	;RP0=1, select bank1
   847  07F8  1303               	bcf	status, 6	;RP1=0, select bank1
   848  07F9  11AA               	bcf	(170)^080h,3
   849  07FA  2F84               	goto	l9219
   850                           	line	169
   851                           	
   852  07FB                     l1545:	
   853  07FB  2F84               	goto	l9219
   854                           	line	205
   855                           	
   856  07FC                     l1546:	
   857                           	line	123
   858  07FC  2F84               	goto	l9219
   859                           	
   860  07FD                     l1547:	
   861                           	line	208
   862                           ;primarymain.c: 169: }
   863                           ;primarymain.c: 205: }
   864                           ;primarymain.c: 207: return 1;
   865                           ;	Return value of _main is never used
   866                           	
   867  07FD                     l1548:	
   868                           	global	start
   869  07FD  120A  118A  2812   	ljmp	start
   870                           	opt stack 0
   871                           GLOBAL	__end_of_main
   872  0800                     	__end_of_main:
   873 ;; =============== function _main ends ============
   874                           
   875                           	signat	_main,90
   876                           	global	_Initialise
   877                           psect	text362,local,class=CODE,delta=2
   878                           global __ptext362
   879  0679                     __ptext362:
   880                           
   881 ;; *************** function _Initialise *****************
   882 ;; Defined at:
   883 ;;		line 214 in file "primarymain.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;		None               void
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0, pclath, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
   897 ;;      Params:         0       0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0
   900 ;;      Totals:         0       0       0       0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    4
   904 ;; This function calls:
   905 ;;		_BeginPWM
   906 ;;		_BeginEncoder
   907 ;;		_i2cInit
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           psect	text362
   913                           	file	"primarymain.c"
   914                           	line	214
   915                           	global	__size_of_Initialise
   916  002D                     	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   917                           	
   918  0679                     _Initialise:	
   919                           	opt	stack 3
   920                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   921                           	line	215
   922                           	
   923  0679                     l9181:	
   924                           ;primarymain.c: 215: FLAG = 0;
   925  0679  1683               	bsf	status, 5	;RP0=1, select bank1
   926  067A  1303               	bcf	status, 6	;RP1=0, select bank1
   927  067B  01AA               	clrf	(170)^080h
   928                           	line	216
   929                           	
   930  067C                     l9183:	
   931                           ;primarymain.c: 216: BeginPWM();
   932  067C  120A  118A  261D   	fcall	_BeginPWM
              120A  118A         
   933                           	line	217
   934                           ;primarymain.c: 217: BeginEncoder();
   935  0681  120A  118A  2594   	fcall	_BeginEncoder
              120A  118A         
   936                           	line	218
   937                           ;primarymain.c: 218: i2cInit(0x10);
   938  0686  3010               	movlw	(010h)
   939  0687  120A  118A  263B   	fcall	_i2cInit
              120A  118A         
   940                           	line	221
   941                           	
   942  068C                     l9185:	
   943                           ;primarymain.c: 221: PEIE = 1;
   944  068C  170B               	bsf	(94/8),(94)&7
   945                           	line	222
   946                           	
   947  068D                     l9187:	
   948                           ;primarymain.c: 222: RBIE = 1;
   949  068D  158B               	bsf	(91/8),(91)&7
   950                           	line	223
   951                           	
   952  068E                     l9189:	
   953                           ;primarymain.c: 223: T0IE = 0;
   954  068E  128B               	bcf	(93/8),(93)&7
   955                           	line	224
   956                           	
   957  068F                     l9191:	
   958                           ;primarymain.c: 224: PIE1 = 0b00001001;
   959  068F  3009               	movlw	(09h)
   960  0690  1683               	bsf	status, 5	;RP0=1, select bank1
   961  0691  1303               	bcf	status, 6	;RP1=0, select bank1
   962  0692  008C               	movwf	(140)^080h	;volatile
   963                           	line	225
   964                           	
   965  0693                     l9193:	
   966                           ;primarymain.c: 225: PIE2 = 0;
   967  0693  018D               	clrf	(141)^080h	;volatile
   968                           	line	227
   969                           	
   970  0694                     l9195:	
   971                           ;primarymain.c: 227: SSPIF = 0;
   972  0694  1283               	bcf	status, 5	;RP0=0, select bank0
   973  0695  1303               	bcf	status, 6	;RP1=0, select bank0
   974  0696  118C               	bcf	(99/8),(99)&7
   975                           	line	228
   976                           	
   977  0697                     l9197:	
   978                           ;primarymain.c: 228: RBIF = 0;
   979  0697  100B               	bcf	(88/8),(88)&7
   980                           	line	229
   981                           	
   982  0698                     l9199:	
   983                           ;primarymain.c: 229: T0IF = 0;
   984  0698  110B               	bcf	(90/8),(90)&7
   985                           	line	230
   986                           	
   987  0699                     l9201:	
   988                           ;primarymain.c: 230: TMR1IF = 0;
   989  0699  100C               	bcf	(96/8),(96)&7
   990                           	line	232
   991                           	
   992  069A                     l9203:	
   993                           ;primarymain.c: 232: GIE = 1;
   994  069A  178B               	bsf	(95/8),(95)&7
   995                           	line	234
   996                           	
   997  069B                     l9205:	
   998                           ;primarymain.c: 234: TRISB = 0b11110111;
   999  069B  30F7               	movlw	(0F7h)
  1000  069C  1683               	bsf	status, 5	;RP0=1, select bank1
  1001  069D  1303               	bcf	status, 6	;RP1=0, select bank1
  1002  069E  0086               	movwf	(134)^080h	;volatile
  1003                           	line	235
  1004                           	
  1005  069F                     l9207:	
  1006                           ;primarymain.c: 235: PORTBbits.RB3 = 0;
  1007  069F  1283               	bcf	status, 5	;RP0=0, select bank0
  1008  06A0  1303               	bcf	status, 6	;RP1=0, select bank0
  1009  06A1  1186               	bcf	(6),3	;volatile
  1010                           	line	237
  1011                           	
  1012  06A2                     l9209:	
  1013                           ;primarymain.c: 237: TRISD = 0;
  1014  06A2  1683               	bsf	status, 5	;RP0=1, select bank1
  1015  06A3  1303               	bcf	status, 6	;RP1=0, select bank1
  1016  06A4  0188               	clrf	(136)^080h	;volatile
  1017                           	line	238
  1018                           	
  1019  06A5                     l1551:	
  1020  06A5  0008               	return
  1021                           	opt stack 0
  1022                           GLOBAL	__end_of_Initialise
  1023  06A6                     	__end_of_Initialise:
  1024 ;; =============== function _Initialise ends ============
  1025                           
  1026                           	signat	_Initialise,88
  1027                           	global	_i2cInit
  1028                           psect	text363,local,class=CODE,delta=2
  1029                           global __ptext363
  1030  063B                     __ptext363:
  1031                           
  1032 ;; *************** function _i2cInit *****************
  1033 ;; Defined at:
  1034 ;;		line 17 in file "i2cSlave.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  address         1    wreg     unsigned char 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  address         1    0[BANK0 ] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;		None               void
  1041 ;; Registers used:
  1042 ;;		wreg
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1048 ;;      Params:         0       0       0       0       0       0
  1049 ;;      Locals:         0       1       0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0       0
  1051 ;;      Totals:         0       1       0       0       0       0
  1052 ;;Total ram usage:        1 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    3
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_Initialise
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           psect	text363
  1062                           	file	"i2cSlave.c"
  1063                           	line	17
  1064                           	global	__size_of_i2cInit
  1065  001E                     	__size_of_i2cInit	equ	__end_of_i2cInit-_i2cInit
  1066                           	
  1067  063B                     _i2cInit:	
  1068                           	opt	stack 3
  1069                           ; Regs used in _i2cInit: [wreg]
  1070                           ;i2cInit@address stored from wreg
  1071                           	line	19
  1072  063B  1283               	bcf	status, 5	;RP0=0, select bank0
  1073  063C  1303               	bcf	status, 6	;RP1=0, select bank0
  1074  063D  00A0               	movwf	(i2cInit@address)
  1075                           	
  1076  063E                     l9095:	
  1077                           ;i2cSlave.c: 19: TRISC6 = 1;
  1078  063E  1683               	bsf	status, 5	;RP0=1, select bank1
  1079  063F  1303               	bcf	status, 6	;RP1=0, select bank1
  1080  0640  1707               	bsf	(1086/8)^080h,(1086)&7
  1081                           	line	20
  1082                           ;i2cSlave.c: 20: TRISC7 = 1;
  1083  0641  1787               	bsf	(1087/8)^080h,(1087)&7
  1084                           	line	21
  1085                           ;i2cSlave.c: 21: SSPEN = 1;
  1086  0642  1283               	bcf	status, 5	;RP0=0, select bank0
  1087  0643  1303               	bcf	status, 6	;RP1=0, select bank0
  1088  0644  1694               	bsf	(165/8),(165)&7
  1089                           	line	22
  1090                           ;i2cSlave.c: 22: CKE = 0;
  1091  0645  1683               	bsf	status, 5	;RP0=1, select bank1
  1092  0646  1303               	bcf	status, 6	;RP1=0, select bank1
  1093  0647  1314               	bcf	(1190/8)^080h,(1190)&7
  1094                           	line	23
  1095                           ;i2cSlave.c: 23: SMP = 0;
  1096  0648  1394               	bcf	(1191/8)^080h,(1191)&7
  1097                           	line	24
  1098                           ;i2cSlave.c: 24: CKP = 1;
  1099  0649  1283               	bcf	status, 5	;RP0=0, select bank0
  1100  064A  1303               	bcf	status, 6	;RP1=0, select bank0
  1101  064B  1614               	bsf	(164/8),(164)&7
  1102                           	line	26
  1103                           ;i2cSlave.c: 26: SSPM0 = 0;
  1104  064C  1014               	bcf	(160/8),(160)&7
  1105                           	line	27
  1106                           ;i2cSlave.c: 27: SSPM1 = 1;
  1107  064D  1494               	bsf	(161/8),(161)&7
  1108                           	line	28
  1109                           ;i2cSlave.c: 28: SSPM2 = 1;
  1110  064E  1514               	bsf	(162/8),(162)&7
  1111                           	line	29
  1112                           ;i2cSlave.c: 29: SSPM3 = 0;
  1113  064F  1194               	bcf	(163/8),(163)&7
  1114                           	line	33
  1115                           	
  1116  0650                     l9097:	
  1117                           ;i2cSlave.c: 33: SSPADD = address;
  1118  0650  0820               	movf	(i2cInit@address),w
  1119  0651  1683               	bsf	status, 5	;RP0=1, select bank1
  1120  0652  1303               	bcf	status, 6	;RP1=0, select bank1
  1121  0653  0093               	movwf	(147)^080h	;volatile
  1122                           	line	39
  1123                           	
  1124  0654                     l9099:	
  1125                           ;i2cSlave.c: 39: i2cBufferVal = 0;
  1126  0654  01FD               	clrf	(_i2cBufferVal)
  1127                           	line	40
  1128                           	
  1129  0655                     l9101:	
  1130                           ;i2cSlave.c: 40: i2cWriteInt = 0;
  1131  0655  1283               	bcf	status, 5	;RP0=0, select bank0
  1132  0656  1303               	bcf	status, 6	;RP1=0, select bank0
  1133  0657  01C4               	clrf	(_i2cWriteInt)
  1134                           	line	41
  1135                           	
  1136  0658                     l6106:	
  1137  0658  0008               	return
  1138                           	opt stack 0
  1139                           GLOBAL	__end_of_i2cInit
  1140  0659                     	__end_of_i2cInit:
  1141 ;; =============== function _i2cInit ends ============
  1142                           
  1143                           	signat	_i2cInit,4216
  1144                           	global	_BeginEncoder
  1145                           psect	text364,local,class=CODE,delta=2
  1146                           global __ptext364
  1147  0594                     __ptext364:
  1148                           
  1149 ;; *************** function _BeginEncoder *****************
  1150 ;; Defined at:
  1151 ;;		line 22 in file "enclib.c"
  1152 ;; Parameters:    Size  Location     Type
  1153 ;;		None
  1154 ;; Auto vars:     Size  Location     Type
  1155 ;;		None
  1156 ;; Return value:  Size  Location     Type
  1157 ;;		None               void
  1158 ;; Registers used:
  1159 ;;		wreg
  1160 ;; Tracked objects:
  1161 ;;		On entry : 0/0
  1162 ;;		On exit  : 0/0
  1163 ;;		Unchanged: 0/0
  1164 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1165 ;;      Params:         0       0       0       0       0       0
  1166 ;;      Locals:         0       0       0       0       0       0
  1167 ;;      Temps:          0       0       0       0       0       0
  1168 ;;      Totals:         0       0       0       0       0       0
  1169 ;;Total ram usage:        0 bytes
  1170 ;; Hardware stack levels used:    1
  1171 ;; Hardware stack levels required when called:    3
  1172 ;; This function calls:
  1173 ;;		Nothing
  1174 ;; This function is called by:
  1175 ;;		_Initialise
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           psect	text364
  1179                           	file	"enclib.c"
  1180                           	line	22
  1181                           	global	__size_of_BeginEncoder
  1182  000B                     	__size_of_BeginEncoder	equ	__end_of_BeginEncoder-_BeginEncoder
  1183                           	
  1184  0594                     _BeginEncoder:	
  1185                           	opt	stack 3
  1186                           ; Regs used in _BeginEncoder: [wreg]
  1187                           	line	28
  1188                           	
  1189  0594                     l9093:	
  1190                           ;enclib.c: 28: OPTION_REG = 0b10010111;
  1191  0594  3097               	movlw	(097h)
  1192  0595  1683               	bsf	status, 5	;RP0=1, select bank1
  1193  0596  1303               	bcf	status, 6	;RP1=0, select bank1
  1194  0597  0081               	movwf	(129)^080h	;volatile
  1195                           	line	34
  1196                           ;enclib.c: 34: CMCON1 = 0x02;
  1197  0598  3002               	movlw	(02h)
  1198  0599  0097               	movwf	(151)^080h	;volatile
  1199                           	line	35
  1200                           ;enclib.c: 35: T1CON = 0b00000111;
  1201  059A  3007               	movlw	(07h)
  1202  059B  1283               	bcf	status, 5	;RP0=0, select bank0
  1203  059C  1303               	bcf	status, 6	;RP1=0, select bank0
  1204  059D  0090               	movwf	(16)	;volatile
  1205                           	line	36
  1206                           	
  1207  059E                     l4594:	
  1208  059E  0008               	return
  1209                           	opt stack 0
  1210                           GLOBAL	__end_of_BeginEncoder
  1211  059F                     	__end_of_BeginEncoder:
  1212 ;; =============== function _BeginEncoder ends ============
  1213                           
  1214                           	signat	_BeginEncoder,88
  1215                           	global	_BeginPWM
  1216                           psect	text365,local,class=CODE,delta=2
  1217                           global __ptext365
  1218  061D                     __ptext365:
  1219                           
  1220 ;; *************** function _BeginPWM *****************
  1221 ;; Defined at:
  1222 ;;		line 41 in file "pwmlib.c"
  1223 ;; Parameters:    Size  Location     Type
  1224 ;;		None
  1225 ;; Auto vars:     Size  Location     Type
  1226 ;;		None
  1227 ;; Return value:  Size  Location     Type
  1228 ;;		None               void
  1229 ;; Registers used:
  1230 ;;		wreg, status,2
  1231 ;; Tracked objects:
  1232 ;;		On entry : 0/0
  1233 ;;		On exit  : 0/0
  1234 ;;		Unchanged: 0/0
  1235 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1236 ;;      Params:         0       0       0       0       0       0
  1237 ;;      Locals:         0       0       0       0       0       0
  1238 ;;      Temps:          0       0       0       0       0       0
  1239 ;;      Totals:         0       0       0       0       0       0
  1240 ;;Total ram usage:        0 bytes
  1241 ;; Hardware stack levels used:    1
  1242 ;; Hardware stack levels required when called:    3
  1243 ;; This function calls:
  1244 ;;		Nothing
  1245 ;; This function is called by:
  1246 ;;		_Initialise
  1247 ;; This function uses a non-reentrant model
  1248 ;;
  1249                           psect	text365
  1250                           	file	"pwmlib.c"
  1251                           	line	41
  1252                           	global	__size_of_BeginPWM
  1253  001E                     	__size_of_BeginPWM	equ	__end_of_BeginPWM-_BeginPWM
  1254                           	
  1255  061D                     _BeginPWM:	
  1256                           	opt	stack 3
  1257                           ; Regs used in _BeginPWM: [wreg+status,2]
  1258                           	line	44
  1259                           	
  1260  061D                     l9075:	
  1261                           ;pwmlib.c: 44: TRISDbits.TRISD2 = 1;
  1262  061D  1683               	bsf	status, 5	;RP0=1, select bank1
  1263  061E  1303               	bcf	status, 6	;RP1=0, select bank1
  1264  061F  1508               	bsf	(136)^080h,2	;volatile
  1265                           	line	47
  1266                           ;pwmlib.c: 47: PIE1bits.TMR2IE = 0;
  1267  0620  108C               	bcf	(140)^080h,1	;volatile
  1268                           	line	51
  1269                           	
  1270  0621                     l9077:	
  1271                           ;pwmlib.c: 51: PR2 = 0xFF;
  1272  0621  30FF               	movlw	(0FFh)
  1273  0622  0092               	movwf	(146)^080h	;volatile
  1274                           	line	55
  1275                           ;pwmlib.c: 55: CCP2CON = 0b00001100;
  1276  0623  300C               	movlw	(0Ch)
  1277  0624  1283               	bcf	status, 5	;RP0=0, select bank0
  1278  0625  1303               	bcf	status, 6	;RP1=0, select bank0
  1279  0626  009D               	movwf	(29)	;volatile
  1280                           	line	59
  1281                           	
  1282  0627                     l9079:	
  1283                           ;pwmlib.c: 59: CCPR2L = 0;
  1284  0627  019B               	clrf	(27)	;volatile
  1285                           	line	60
  1286                           	
  1287  0628                     l9081:	
  1288                           ;pwmlib.c: 60: CCP2CONbits.CCP2X = 0;
  1289  0628  129D               	bcf	(29),5	;volatile
  1290                           	line	61
  1291                           	
  1292  0629                     l9083:	
  1293                           ;pwmlib.c: 61: CCP2CONbits.CCP2Y = 0;
  1294  0629  121D               	bcf	(29),4	;volatile
  1295                           	line	66
  1296                           	
  1297  062A                     l9085:	
  1298                           ;pwmlib.c: 66: PIR1bits.TMR2IF = 0;
  1299  062A  108C               	bcf	(12),1	;volatile
  1300                           	line	70
  1301                           	
  1302  062B                     l9087:	
  1303                           ;pwmlib.c: 70: T2CON = 0b00000100;
  1304  062B  3004               	movlw	(04h)
  1305  062C  0092               	movwf	(18)	;volatile
  1306  062D  2E2E               	goto	l9089
  1307                           	line	75
  1308                           ;pwmlib.c: 75: while(1)
  1309                           	
  1310  062E                     l3088:	
  1311                           	line	77
  1312                           	
  1313  062E                     l9089:	
  1314                           ;pwmlib.c: 76: {
  1315                           ;pwmlib.c: 77: if(PIR1bits.TMR2IF == 1)
  1316  062E  1283               	bcf	status, 5	;RP0=0, select bank0
  1317  062F  1C8C               	btfss	(12),1	;volatile
  1318  0630  2E32               	goto	u2501
  1319  0631  2E33               	goto	u2500
  1320  0632                     u2501:
  1321  0632  2E2E               	goto	l9089
  1322  0633                     u2500:
  1323                           	line	79
  1324                           	
  1325  0633                     l9091:	
  1326                           ;pwmlib.c: 78: {
  1327                           ;pwmlib.c: 79: TMR2IF = 0;
  1328  0633  108C               	bcf	(97/8),(97)&7
  1329                           	line	80
  1330                           ;pwmlib.c: 80: TRISDbits.TRISD2 = 0;
  1331  0634  1683               	bsf	status, 5	;RP0=1, select bank1
  1332  0635  1303               	bcf	status, 6	;RP1=0, select bank1
  1333  0636  1108               	bcf	(136)^080h,2	;volatile
  1334                           	line	81
  1335                           ;pwmlib.c: 81: break;
  1336  0637  2E3A               	goto	l3092
  1337                           	line	82
  1338                           	
  1339  0638                     l3089:	
  1340  0638  2E2E               	goto	l9089
  1341                           	line	83
  1342                           	
  1343  0639                     l3091:	
  1344                           	line	75
  1345  0639  2E2E               	goto	l9089
  1346                           	
  1347  063A                     l3090:	
  1348                           	line	84
  1349                           	
  1350  063A                     l3092:	
  1351  063A  0008               	return
  1352                           	opt stack 0
  1353                           GLOBAL	__end_of_BeginPWM
  1354  063B                     	__end_of_BeginPWM:
  1355 ;; =============== function _BeginPWM ends ============
  1356                           
  1357                           	signat	_BeginPWM,88
  1358                           	global	_UpdateData
  1359                           psect	text366,local,class=CODE,delta=2
  1360                           global __ptext366
  1361  05E9                     __ptext366:
  1362                           
  1363 ;; *************** function _UpdateData *****************
  1364 ;; Defined at:
  1365 ;;		line 279 in file "primarymain.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  t               2    0[BANK0 ] int 
  1368 ;;  c               2    2[BANK0 ] int 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;		None
  1371 ;; Return value:  Size  Location     Type
  1372 ;;		None               void
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1380 ;;      Params:         0       4       0       0       0       0
  1381 ;;      Locals:         0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0
  1383 ;;      Totals:         0       4       0       0       0       0
  1384 ;;Total ram usage:        4 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; Hardware stack levels required when called:    3
  1387 ;; This function calls:
  1388 ;;		Nothing
  1389 ;; This function is called by:
  1390 ;;		_main
  1391 ;; This function uses a non-reentrant model
  1392 ;;
  1393                           psect	text366
  1394                           	file	"primarymain.c"
  1395                           	line	279
  1396                           	global	__size_of_UpdateData
  1397  0017                     	__size_of_UpdateData	equ	__end_of_UpdateData-_UpdateData
  1398                           	
  1399  05E9                     _UpdateData:	
  1400                           	opt	stack 4
  1401                           ; Regs used in _UpdateData: [wreg+status,2+status,0]
  1402                           	line	283
  1403                           	
  1404  05E9                     l9069:	
  1405                           ;primarymain.c: 283: if (DIR_READ == 0)
  1406  05E9  1283               	bcf	status, 5	;RP0=0, select bank0
  1407  05EA  1303               	bcf	status, 6	;RP1=0, select bank0
  1408  05EB  083E               	movf	((_DIR_READ+1)),w
  1409  05EC  043D               	iorwf	((_DIR_READ)),w
  1410  05ED  1D03               	skipz
  1411  05EE  2DF0               	goto	u2491
  1412  05EF  2DF1               	goto	u2490
  1413  05F0                     u2491:
  1414  05F0  2DF8               	goto	l9073
  1415  05F1                     u2490:
  1416                           	line	286
  1417                           	
  1418  05F1                     l9071:	
  1419                           ;primarymain.c: 284: {
  1420                           ;primarymain.c: 286: COUNTS += c;
  1421  05F1  0822               	movf	(UpdateData@c),w
  1422  05F2  07B9               	addwf	(_COUNTS),f
  1423  05F3  1803               	skipnc
  1424  05F4  0ABA               	incf	(_COUNTS+1),f
  1425  05F5  0823               	movf	(UpdateData@c+1),w
  1426  05F6  07BA               	addwf	(_COUNTS+1),f
  1427                           	line	287
  1428                           ;primarymain.c: 287: } else
  1429  05F7  2DFF               	goto	l1569
  1430                           	
  1431  05F8                     l1567:	
  1432                           	line	290
  1433                           	
  1434  05F8                     l9073:	
  1435                           ;primarymain.c: 288: {
  1436                           ;primarymain.c: 290: COUNTS -= c;
  1437  05F8  0822               	movf	(UpdateData@c),w
  1438  05F9  02B9               	subwf	(_COUNTS),f
  1439  05FA  0823               	movf	(UpdateData@c+1),w
  1440  05FB  1C03               	skipc
  1441  05FC  03BA               	decf	(_COUNTS+1),f
  1442  05FD  02BA               	subwf	(_COUNTS+1),f
  1443  05FE  2DFF               	goto	l1569
  1444                           	line	291
  1445                           	
  1446  05FF                     l1568:	
  1447                           	line	292
  1448                           	
  1449  05FF                     l1569:	
  1450  05FF  0008               	return
  1451                           	opt stack 0
  1452                           GLOBAL	__end_of_UpdateData
  1453  0600                     	__end_of_UpdateData:
  1454 ;; =============== function _UpdateData ends ============
  1455                           
  1456                           	signat	_UpdateData,8312
  1457                           	global	_EncUpdate
  1458                           psect	text367,local,class=CODE,delta=2
  1459                           global __ptext367
  1460  0600                     __ptext367:
  1461                           
  1462 ;; *************** function _EncUpdate *****************
  1463 ;; Defined at:
  1464 ;;		line 42 in file "enclib.c"
  1465 ;; Parameters:    Size  Location     Type
  1466 ;;  t0              2    0[BANK0 ] PTR int 
  1467 ;;		 -> RAM(512), 
  1468 ;;  t1              2    2[BANK0 ] PTR int 
  1469 ;;		 -> RAM(512), 
  1470 ;; Auto vars:     Size  Location     Type
  1471 ;;		None
  1472 ;; Return value:  Size  Location     Type
  1473 ;;		None               void
  1474 ;; Registers used:
  1475 ;;		wreg, fsr0l, fsr0h, status,2
  1476 ;; Tracked objects:
  1477 ;;		On entry : 0/0
  1478 ;;		On exit  : 0/0
  1479 ;;		Unchanged: 0/0
  1480 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1481 ;;      Params:         0       4       0       0       0       0
  1482 ;;      Locals:         0       0       0       0       0       0
  1483 ;;      Temps:          0       2       0       0       0       0
  1484 ;;      Totals:         0       6       0       0       0       0
  1485 ;;Total ram usage:        6 bytes
  1486 ;; Hardware stack levels used:    1
  1487 ;; Hardware stack levels required when called:    3
  1488 ;; This function calls:
  1489 ;;		Nothing
  1490 ;; This function is called by:
  1491 ;;		_main
  1492 ;; This function uses a non-reentrant model
  1493 ;;
  1494                           psect	text367
  1495                           	file	"enclib.c"
  1496                           	line	42
  1497                           	global	__size_of_EncUpdate
  1498  001D                     	__size_of_EncUpdate	equ	__end_of_EncUpdate-_EncUpdate
  1499                           	
  1500  0600                     _EncUpdate:	
  1501                           	opt	stack 4
  1502                           ; Regs used in _EncUpdate: [wreg-fsr0h+status,2]
  1503                           	line	43
  1504                           	
  1505  0600                     l9063:	
  1506                           ;enclib.c: 43: *t1 = TMR1;
  1507  0600  1283               	bcf	status, 5	;RP0=0, select bank0
  1508  0601  1303               	bcf	status, 6	;RP1=0, select bank0
  1509  0602  0822               	movf	(EncUpdate@t1),w
  1510  0603  0084               	movwf	fsr0
  1511  0604  1783               	bsf	status,7
  1512  0605  1C23               	btfss	(EncUpdate@t1+1),0
  1513  0606  1383               	bcf	status,7
  1514  0607  080E               	movf	(14),w	;volatile
  1515  0608  0080               	movwf	indf
  1516  0609  0A84               	incf	fsr0,f
  1517  060A  080F               	movf	(14+1),w	;volatile
  1518  060B  0080               	movwf	indf
  1519                           	line	44
  1520                           ;enclib.c: 44: *t0 = TMR0;
  1521  060C  0801               	movf	(1),w	;volatile
  1522  060D  00A4               	movwf	(??_EncUpdate+0)+0
  1523  060E  01A5               	clrf	(??_EncUpdate+0)+0+1
  1524  060F  0820               	movf	(EncUpdate@t0),w
  1525  0610  0084               	movwf	fsr0
  1526  0611  1783               	bsf	status,7
  1527  0612  1C21               	btfss	(EncUpdate@t0+1),0
  1528  0613  1383               	bcf	status,7
  1529  0614  0824               	movf	0+(??_EncUpdate+0)+0,w
  1530  0615  0080               	movwf	indf
  1531  0616  0A84               	incf	fsr0,f
  1532  0617  0825               	movf	1+(??_EncUpdate+0)+0,w
  1533  0618  0080               	movwf	indf
  1534                           	line	45
  1535                           	
  1536  0619                     l9065:	
  1537                           ;enclib.c: 45: TMR1 = 0;
  1538  0619  018E               	clrf	(14)	;volatile
  1539  061A  018F               	clrf	(14+1)	;volatile
  1540                           	line	46
  1541                           	
  1542  061B                     l9067:	
  1543                           ;enclib.c: 46: TMR0 = 0;
  1544  061B  0181               	clrf	(1)	;volatile
  1545                           	line	47
  1546                           	
  1547  061C                     l4597:	
  1548  061C  0008               	return
  1549                           	opt stack 0
  1550                           GLOBAL	__end_of_EncUpdate
  1551  061D                     	__end_of_EncUpdate:
  1552 ;; =============== function _EncUpdate ends ============
  1553                           
  1554                           	signat	_EncUpdate,8312
  1555                           	global	_setDirection
  1556                           psect	text368,local,class=CODE,delta=2
  1557                           global __ptext368
  1558  05D2                     __ptext368:
  1559                           
  1560 ;; *************** function _setDirection *****************
  1561 ;; Defined at:
  1562 ;;		line 297 in file "primarymain.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  dir             2    0[BANK0 ] int 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;		None
  1567 ;; Return value:  Size  Location     Type
  1568 ;;		None               void
  1569 ;; Registers used:
  1570 ;;		wreg, status,2, status,0
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1576 ;;      Params:         0       2       0       0       0       0
  1577 ;;      Locals:         0       0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0
  1579 ;;      Totals:         0       2       0       0       0       0
  1580 ;;Total ram usage:        2 bytes
  1581 ;; Hardware stack levels used:    1
  1582 ;; Hardware stack levels required when called:    3
  1583 ;; This function calls:
  1584 ;;		Nothing
  1585 ;; This function is called by:
  1586 ;;		_main
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           psect	text368
  1590                           	file	"primarymain.c"
  1591                           	line	297
  1592                           	global	__size_of_setDirection
  1593  0017                     	__size_of_setDirection	equ	__end_of_setDirection-_setDirection
  1594                           	
  1595  05D2                     _setDirection:	
  1596                           	opt	stack 4
  1597                           ; Regs used in _setDirection: [wreg+status,2+status,0]
  1598                           	line	298
  1599                           	
  1600  05D2                     l9055:	
  1601                           ;primarymain.c: 298: if (dir == 0)
  1602  05D2  1283               	bcf	status, 5	;RP0=0, select bank0
  1603  05D3  1303               	bcf	status, 6	;RP1=0, select bank0
  1604  05D4  0821               	movf	((setDirection@dir+1)),w
  1605  05D5  0420               	iorwf	((setDirection@dir)),w
  1606  05D6  1D03               	skipz
  1607  05D7  2DD9               	goto	u2471
  1608  05D8  2DDA               	goto	u2470
  1609  05D9                     u2471:
  1610  05D9  2DDC               	goto	l9059
  1611  05DA                     u2470:
  1612                           	line	299
  1613                           	
  1614  05DA                     l9057:	
  1615                           ;primarymain.c: 299: PORTBbits.RB3 = 0;
  1616  05DA  1186               	bcf	(6),3	;volatile
  1617  05DB  2DE8               	goto	l1576
  1618                           	line	300
  1619                           	
  1620  05DC                     l1572:	
  1621                           	
  1622  05DC                     l9059:	
  1623                           ;primarymain.c: 300: else if (dir == 1)
  1624  05DC  3001               	movlw	01h
  1625  05DD  0620               	xorwf	(setDirection@dir),w
  1626  05DE  0421               	iorwf	(setDirection@dir+1),w
  1627  05DF  1D03               	skipz
  1628  05E0  2DE2               	goto	u2481
  1629  05E1  2DE3               	goto	u2480
  1630  05E2                     u2481:
  1631  05E2  2DE5               	goto	l1574
  1632  05E3                     u2480:
  1633                           	line	301
  1634                           	
  1635  05E3                     l9061:	
  1636                           ;primarymain.c: 301: PORTBbits.RB3 = !0;
  1637  05E3  1586               	bsf	(6),3	;volatile
  1638  05E4  2DE8               	goto	l1576
  1639                           	line	302
  1640                           	
  1641  05E5                     l1574:	
  1642                           	line	303
  1643                           ;primarymain.c: 302: else
  1644                           ;primarymain.c: 303: PORTBbits.RB3 = 0;
  1645  05E5  1186               	bcf	(6),3	;volatile
  1646  05E6  2DE8               	goto	l1576
  1647                           	
  1648  05E7                     l1575:	
  1649  05E7  2DE8               	goto	l1576
  1650                           	
  1651  05E8                     l1573:	
  1652                           	line	304
  1653                           	
  1654  05E8                     l1576:	
  1655  05E8  0008               	return
  1656                           	opt stack 0
  1657                           GLOBAL	__end_of_setDirection
  1658  05E9                     	__end_of_setDirection:
  1659 ;; =============== function _setDirection ends ============
  1660                           
  1661                           	signat	_setDirection,4216
  1662                           	global	_SetPulse
  1663                           psect	text369,local,class=CODE,delta=2
  1664                           global __ptext369
  1665  0659                     __ptext369:
  1666                           
  1667 ;; *************** function _SetPulse *****************
  1668 ;; Defined at:
  1669 ;;		line 105 in file "pwmlib.c"
  1670 ;; Parameters:    Size  Location     Type
  1671 ;;  length          2    0[BANK0 ] int 
  1672 ;; Auto vars:     Size  Location     Type
  1673 ;;  temp            2    2[BANK0 ] int 
  1674 ;; Return value:  Size  Location     Type
  1675 ;;		None               void
  1676 ;; Registers used:
  1677 ;;		wreg, status,2, status,0, btemp+1
  1678 ;; Tracked objects:
  1679 ;;		On entry : 0/0
  1680 ;;		On exit  : 0/0
  1681 ;;		Unchanged: 0/0
  1682 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1683 ;;      Params:         0       2       0       0       0       0
  1684 ;;      Locals:         0       2       0       0       0       0
  1685 ;;      Temps:          0       0       0       0       0       0
  1686 ;;      Totals:         0       4       0       0       0       0
  1687 ;;Total ram usage:        4 bytes
  1688 ;; Hardware stack levels used:    1
  1689 ;; Hardware stack levels required when called:    3
  1690 ;; This function calls:
  1691 ;;		Nothing
  1692 ;; This function is called by:
  1693 ;;		_main
  1694 ;;		_CalcPulse
  1695 ;; This function uses a non-reentrant model
  1696 ;;
  1697                           psect	text369
  1698                           	file	"pwmlib.c"
  1699                           	line	105
  1700                           	global	__size_of_SetPulse
  1701  0020                     	__size_of_SetPulse	equ	__end_of_SetPulse-_SetPulse
  1702                           	
  1703  0659                     _SetPulse:	
  1704                           	opt	stack 4
  1705                           ; Regs used in _SetPulse: [wreg+status,2+status,0+btemp+1]
  1706                           	line	106
  1707                           	
  1708  0659                     l9049:	
  1709                           ;pwmlib.c: 106: int temp = length;
  1710  0659  1283               	bcf	status, 5	;RP0=0, select bank0
  1711  065A  1303               	bcf	status, 6	;RP1=0, select bank0
  1712  065B  0821               	movf	(SetPulse@length+1),w
  1713  065C  01A3               	clrf	(SetPulse@temp+1)
  1714  065D  07A3               	addwf	(SetPulse@temp+1)
  1715  065E  0820               	movf	(SetPulse@length),w
  1716  065F  01A2               	clrf	(SetPulse@temp)
  1717  0660  07A2               	addwf	(SetPulse@temp)
  1718                           
  1719                           	line	107
  1720                           	
  1721  0661                     l9051:	
  1722                           ;pwmlib.c: 107: if (temp > 255)
  1723  0661  0823               	movf	(SetPulse@temp+1),w
  1724  0662  3A80               	xorlw	80h
  1725  0663  00FF               	movwf	btemp+1
  1726  0664  3081               	movlw	(high(0100h))^80h
  1727  0665  027F               	subwf	btemp+1,w
  1728  0666  1D03               	skipz
  1729  0667  2E6A               	goto	u2465
  1730  0668  3000               	movlw	low(0100h)
  1731  0669  0222               	subwf	(SetPulse@temp),w
  1732  066A                     u2465:
  1733                           
  1734  066A  1C03               	skipc
  1735  066B  2E6D               	goto	u2461
  1736  066C  2E6E               	goto	u2460
  1737  066D                     u2461:
  1738  066D  2E74               	goto	l3099
  1739  066E                     u2460:
  1740                           	line	108
  1741                           	
  1742  066E                     l9053:	
  1743                           ;pwmlib.c: 108: temp = 255;
  1744  066E  30FF               	movlw	low(0FFh)
  1745  066F  1283               	bcf	status, 5	;RP0=0, select bank0
  1746  0670  1303               	bcf	status, 6	;RP1=0, select bank0
  1747  0671  00A2               	movwf	(SetPulse@temp)
  1748  0672  3000               	movlw	high(0FFh)
  1749  0673  00A3               	movwf	((SetPulse@temp))+1
  1750                           	
  1751  0674                     l3099:	
  1752                           	line	109
  1753                           ;pwmlib.c: 109: CCPR2L = temp;
  1754  0674  1283               	bcf	status, 5	;RP0=0, select bank0
  1755  0675  1303               	bcf	status, 6	;RP1=0, select bank0
  1756  0676  0822               	movf	(SetPulse@temp),w
  1757  0677  009B               	movwf	(27)	;volatile
  1758                           	line	113
  1759                           	
  1760  0678                     l3100:	
  1761  0678  0008               	return
  1762                           	opt stack 0
  1763                           GLOBAL	__end_of_SetPulse
  1764  0679                     	__end_of_SetPulse:
  1765 ;; =============== function _SetPulse ends ============
  1766                           
  1767                           	signat	_SetPulse,4216
  1768                           	global	_isr
  1769                           psect	text370,local,class=CODE,delta=2
  1770                           global __ptext370
  1771  06A6                     __ptext370:
  1772                           
  1773 ;; *************** function _isr *****************
  1774 ;; Defined at:
  1775 ;;		line 243 in file "primarymain.c"
  1776 ;; Parameters:    Size  Location     Type
  1777 ;;		None
  1778 ;; Auto vars:     Size  Location     Type
  1779 ;;		None
  1780 ;; Return value:  Size  Location     Type
  1781 ;;		None               void
  1782 ;; Registers used:
  1783 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1784 ;; Tracked objects:
  1785 ;;		On entry : 0/0
  1786 ;;		On exit  : 0/0
  1787 ;;		Unchanged: 0/0
  1788 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1789 ;;      Params:         0       0       0       0       0       0
  1790 ;;      Locals:         0       0       0       0       0       0
  1791 ;;      Temps:          6       0       0       0       0       0
  1792 ;;      Totals:         6       0       0       0       0       0
  1793 ;;Total ram usage:        6 bytes
  1794 ;; Hardware stack levels used:    1
  1795 ;; Hardware stack levels required when called:    2
  1796 ;; This function calls:
  1797 ;;		_i2cIsrHandler
  1798 ;; This function is called by:
  1799 ;;		Interrupt level 1
  1800 ;; This function uses a non-reentrant model
  1801 ;;
  1802                           psect	text370
  1803                           	file	"primarymain.c"
  1804                           	line	243
  1805                           	global	__size_of_isr
  1806  0052                     	__size_of_isr	equ	__end_of_isr-_isr
  1807                           	
  1808  06A6                     _isr:	
  1809                           	opt	stack 3
  1810                           ; Regs used in _isr: [allreg]
  1811                           psect	intentry,class=CODE,delta=2
  1812                           global __pintentry
  1813  0004                     __pintentry:
  1814                           global interrupt_function
  1815  0004                     interrupt_function:
  1816                           	global saved_w
  1817  007E                     	saved_w	set	btemp+0
  1818  0004  00FE               	movwf	saved_w
  1819  0005  0E03               	swapf	status,w
  1820  0006  00F9               	movwf	(??_isr+2)
  1821  0007  0804               	movf	fsr0,w
  1822  0008  00FA               	movwf	(??_isr+3)
  1823  0009  080A               	movf	pclath,w
  1824  000A  00FB               	movwf	(??_isr+4)
  1825  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1826  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1827  000D  087F               	movf	btemp+1,w
  1828  000E  00FC               	movwf	(??_isr+5)
  1829  000F  120A  118A  2EA6   	ljmp	_isr
  1830                           psect	text370
  1831                           	line	244
  1832                           	
  1833  06A6                     i1l9103:	
  1834                           ;primarymain.c: 244: if (SSPIF == 1)
  1835  06A6  1D8C               	btfss	(99/8),(99)&7
  1836  06A7  2EA9               	goto	u251_21
  1837  06A8  2EAA               	goto	u251_20
  1838  06A9                     u251_21:
  1839  06A9  2EB0               	goto	i1l1554
  1840  06AA                     u251_20:
  1841                           	line	248
  1842                           	
  1843  06AA                     i1l9105:	
  1844                           ;primarymain.c: 245: {
  1845                           ;primarymain.c: 248: i2cIsrHandler();
  1846  06AA  120A  118A  26F8   	fcall	_i2cIsrHandler
              120A  118A         
  1847                           	line	249
  1848                           ;primarymain.c: 249: } else if (T0IF == 1)
  1849  06AF  2EEB               	goto	i1l1564
  1850                           	
  1851  06B0                     i1l1554:	
  1852  06B0  1D0B               	btfss	(90/8),(90)&7
  1853  06B1  2EB3               	goto	u252_21
  1854  06B2  2EB4               	goto	u252_20
  1855  06B3                     u252_21:
  1856  06B3  2EB6               	goto	i1l1556
  1857  06B4                     u252_20:
  1858                           	line	252
  1859                           	
  1860  06B4                     i1l9107:	
  1861                           ;primarymain.c: 250: {
  1862                           ;primarymain.c: 252: T0IF = 0;
  1863  06B4  110B               	bcf	(90/8),(90)&7
  1864                           	line	253
  1865                           ;primarymain.c: 253: } else if (TMR1IF == 1)
  1866  06B5  2EEB               	goto	i1l1564
  1867                           	
  1868  06B6                     i1l1556:	
  1869  06B6  1C0C               	btfss	(96/8),(96)&7
  1870  06B7  2EB9               	goto	u253_21
  1871  06B8  2EBA               	goto	u253_20
  1872  06B9                     u253_21:
  1873  06B9  2EBC               	goto	i1l1558
  1874  06BA                     u253_20:
  1875                           	line	256
  1876                           	
  1877  06BA                     i1l9109:	
  1878                           ;primarymain.c: 256: TMR1IF = 0;
  1879  06BA  100C               	bcf	(96/8),(96)&7
  1880                           	line	257
  1881                           ;primarymain.c: 257: } else if (RBIF == 1)
  1882  06BB  2EEB               	goto	i1l1564
  1883                           	
  1884  06BC                     i1l1558:	
  1885  06BC  1C0B               	btfss	(88/8),(88)&7
  1886  06BD  2EBF               	goto	u254_21
  1887  06BE  2EC0               	goto	u254_20
  1888  06BF                     u254_21:
  1889  06BF  2EE0               	goto	i1l9121
  1890  06C0                     u254_20:
  1891                           	line	259
  1892                           	
  1893  06C0                     i1l9111:	
  1894                           ;primarymain.c: 258: {
  1895                           ;primarymain.c: 259: if (RB5 != DIR_READ)
  1896  06C0  1003               	clrc
  1897  06C1  1A86               	btfsc	(53/8),(53)&7
  1898  06C2  1403               	setc
  1899  06C3  3000               	movlw	0
  1900  06C4  1803               	skipnc
  1901  06C5  3001               	movlw	1
  1902                           
  1903  06C6  00F7               	movwf	(??_isr+0)+0
  1904  06C7  01F8               	clrf	(??_isr+0)+0+1
  1905  06C8  083E               	movf	(_DIR_READ+1),w
  1906  06C9  0678               	xorwf	1+(??_isr+0)+0,w
  1907  06CA  1D03               	skipz
  1908  06CB  2ECE               	goto	u255_25
  1909  06CC  083D               	movf	(_DIR_READ),w
  1910  06CD  0677               	xorwf	0+(??_isr+0)+0,w
  1911  06CE                     u255_25:
  1912                           
  1913  06CE  1903               	skipnz
  1914  06CF  2ED1               	goto	u255_21
  1915  06D0  2ED2               	goto	u255_20
  1916  06D1                     u255_21:
  1917  06D1  2ED6               	goto	i1l9115
  1918  06D2                     u255_20:
  1919                           	line	261
  1920                           	
  1921  06D2                     i1l9113:	
  1922                           ;primarymain.c: 260: {
  1923                           ;primarymain.c: 261: F.DIR = 1;
  1924  06D2  1683               	bsf	status, 5	;RP0=1, select bank1
  1925  06D3  1303               	bcf	status, 6	;RP1=0, select bank1
  1926  06D4  15AA               	bsf	(170)^080h,3
  1927                           	line	262
  1928                           ;primarymain.c: 262: } else
  1929  06D5  2EDE               	goto	i1l9119
  1930                           	
  1931  06D6                     i1l1561:	
  1932                           	line	264
  1933                           	
  1934  06D6                     i1l9115:	
  1935                           ;primarymain.c: 263: {
  1936                           ;primarymain.c: 264: TRISD = 0;
  1937  06D6  1683               	bsf	status, 5	;RP0=1, select bank1
  1938  06D7  1303               	bcf	status, 6	;RP1=0, select bank1
  1939  06D8  0188               	clrf	(136)^080h	;volatile
  1940                           	line	265
  1941                           	
  1942  06D9                     i1l9117:	
  1943                           ;primarymain.c: 265: PORTD = 0xE0;
  1944  06D9  30E0               	movlw	(0E0h)
  1945  06DA  1283               	bcf	status, 5	;RP0=0, select bank0
  1946  06DB  1303               	bcf	status, 6	;RP1=0, select bank0
  1947  06DC  0088               	movwf	(8)	;volatile
  1948  06DD  2EDE               	goto	i1l9119
  1949                           	line	266
  1950                           	
  1951  06DE                     i1l1562:	
  1952                           	line	267
  1953                           	
  1954  06DE                     i1l9119:	
  1955                           ;primarymain.c: 266: }
  1956                           ;primarymain.c: 267: RBIF = 0;
  1957  06DE  100B               	bcf	(88/8),(88)&7
  1958                           	line	268
  1959                           ;primarymain.c: 268: } else
  1960  06DF  2EEB               	goto	i1l1564
  1961                           	
  1962  06E0                     i1l1560:	
  1963                           	line	270
  1964                           	
  1965  06E0                     i1l9121:	
  1966                           ;primarymain.c: 269: {
  1967                           ;primarymain.c: 270: TRISD = 0;
  1968  06E0  1683               	bsf	status, 5	;RP0=1, select bank1
  1969  06E1  1303               	bcf	status, 6	;RP1=0, select bank1
  1970  06E2  0188               	clrf	(136)^080h	;volatile
  1971                           	line	271
  1972                           	
  1973  06E3                     i1l9123:	
  1974                           ;primarymain.c: 271: PORTD = 0xF0;
  1975  06E3  30F0               	movlw	(0F0h)
  1976  06E4  1283               	bcf	status, 5	;RP0=0, select bank0
  1977  06E5  1303               	bcf	status, 6	;RP1=0, select bank0
  1978  06E6  0088               	movwf	(8)	;volatile
  1979  06E7  2EEB               	goto	i1l1564
  1980                           	line	272
  1981                           	
  1982  06E8                     i1l1563:	
  1983  06E8  2EEB               	goto	i1l1564
  1984                           	
  1985  06E9                     i1l1559:	
  1986  06E9  2EEB               	goto	i1l1564
  1987                           	
  1988  06EA                     i1l1557:	
  1989  06EA  2EEB               	goto	i1l1564
  1990                           	
  1991  06EB                     i1l1555:	
  1992                           	line	273
  1993                           	
  1994  06EB                     i1l1564:	
  1995  06EB  087C               	movf	(??_isr+5),w
  1996  06EC  1283               	bcf	status, 5	;RP0=0, select bank0
  1997  06ED  1303               	bcf	status, 6	;RP1=0, select bank0
  1998  06EE  00FF               	movwf	btemp+1
  1999  06EF  087B               	movf	(??_isr+4),w
  2000  06F0  008A               	movwf	pclath
  2001  06F1  087A               	movf	(??_isr+3),w
  2002  06F2  0084               	movwf	fsr0
  2003  06F3  0E79               	swapf	(??_isr+2)^0FFFFFF80h,w
  2004  06F4  0083               	movwf	status
  2005  06F5  0EFE               	swapf	saved_w,f
  2006  06F6  0E7E               	swapf	saved_w,w
  2007  06F7  0009               	retfie
  2008                           	opt stack 0
  2009                           GLOBAL	__end_of_isr
  2010  06F8                     	__end_of_isr:
  2011 ;; =============== function _isr ends ============
  2012                           
  2013                           	signat	_isr,88
  2014                           	global	_i2cIsrHandler
  2015                           psect	text371,local,class=CODE,delta=2
  2016                           global __ptext371
  2017  06F8                     __ptext371:
  2018                           
  2019 ;; *************** function _i2cIsrHandler *****************
  2020 ;; Defined at:
  2021 ;;		line 43 in file "i2cSlave.c"
  2022 ;; Parameters:    Size  Location     Type
  2023 ;;		None
  2024 ;; Auto vars:     Size  Location     Type
  2025 ;;  i               2    4[COMMON] int 
  2026 ;; Return value:  Size  Location     Type
  2027 ;;		None               void
  2028 ;; Registers used:
  2029 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2030 ;; Tracked objects:
  2031 ;;		On entry : 0/0
  2032 ;;		On exit  : 0/0
  2033 ;;		Unchanged: 0/0
  2034 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  2035 ;;      Params:         0       0       0       0       0       0
  2036 ;;      Locals:         2       0       0       0       0       0
  2037 ;;      Temps:          1       0       0       0       0       0
  2038 ;;      Totals:         3       0       0       0       0       0
  2039 ;;Total ram usage:        3 bytes
  2040 ;; Hardware stack levels used:    1
  2041 ;; Hardware stack levels required when called:    1
  2042 ;; This function calls:
  2043 ;;		_i2cSend
  2044 ;;		_i2cDataUpdate
  2045 ;; This function is called by:
  2046 ;;		_isr
  2047 ;; This function uses a non-reentrant model
  2048 ;;
  2049                           psect	text371
  2050                           	file	"i2cSlave.c"
  2051                           	line	43
  2052                           	global	__size_of_i2cIsrHandler
  2053  006D                     	__size_of_i2cIsrHandler	equ	__end_of_i2cIsrHandler-_i2cIsrHandler
  2054                           	
  2055  06F8                     _i2cIsrHandler:	
  2056                           	opt	stack 3
  2057                           ; Regs used in _i2cIsrHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2058                           	line	51
  2059                           	
  2060  06F8                     i1l9125:	
  2061                           ;i2cSlave.c: 51: int i = 0;
  2062  06F8  01F5               	clrf	(i2cIsrHandler@i)
  2063  06F9  01F6               	clrf	(i2cIsrHandler@i+1)
  2064                           	line	52
  2065                           	
  2066  06FA                     i1l9127:	
  2067                           ;i2cSlave.c: 52: i++;
  2068  06FA  3001               	movlw	low(01h)
  2069  06FB  07F5               	addwf	(i2cIsrHandler@i),f
  2070  06FC  1803               	skipnc
  2071  06FD  0AF6               	incf	(i2cIsrHandler@i+1),f
  2072  06FE  3000               	movlw	high(01h)
  2073  06FF  07F6               	addwf	(i2cIsrHandler@i+1),f
  2074                           	line	54
  2075                           ;i2cSlave.c: 54: if ((SSPSTAT & 0b00100100) == 0b00100000){
  2076  0700  1683               	bsf	status, 5	;RP0=1, select bank1
  2077  0701  1303               	bcf	status, 6	;RP1=0, select bank1
  2078  0702  0814               	movf	(148)^080h,w
  2079  0703  3924               	andlw	024h
  2080  0704  3A20               	xorlw	020h
  2081  0705  1D03               	skipz
  2082  0706  2F08               	goto	u256_21
  2083  0707  2F09               	goto	u256_20
  2084  0708                     u256_21:
  2085  0708  2F18               	goto	i1l9133
  2086  0709                     u256_20:
  2087                           	line	55
  2088                           	
  2089  0709                     i1l9129:	
  2090                           ;i2cSlave.c: 55: i2cBuffer[i2cBufferVal] = SSPBUF;
  2091  0709  1283               	bcf	status, 5	;RP0=0, select bank0
  2092  070A  1303               	bcf	status, 6	;RP1=0, select bank0
  2093  070B  0813               	movf	(19),w	;volatile
  2094  070C  00F4               	movwf	(??_i2cIsrHandler+0)+0
  2095  070D  087D               	movf	(_i2cBufferVal),w
  2096  070E  3E36               	addlw	_i2cBuffer&0ffh
  2097  070F  0084               	movwf	fsr0
  2098  0710  0874               	movf	(??_i2cIsrHandler+0)+0,w
  2099  0711  1383               	bcf	status, 7	;select IRP bank0
  2100  0712  0080               	movwf	indf
  2101                           	line	56
  2102                           	
  2103  0713                     i1l9131:	
  2104                           ;i2cSlave.c: 56: i2cBufferVal++;
  2105  0713  3001               	movlw	(01h)
  2106  0714  00F4               	movwf	(??_i2cIsrHandler+0)+0
  2107  0715  0874               	movf	(??_i2cIsrHandler+0)+0,w
  2108  0716  07FD               	addwf	(_i2cBufferVal),f
  2109                           	line	58
  2110                           ;i2cSlave.c: 58: } else if ((SSPSTAT & 0b00100100) == 0b0000000){
  2111  0717  2F53               	goto	i1l9151
  2112                           	
  2113  0718                     i1l6109:	
  2114                           	
  2115  0718                     i1l9133:	
  2116  0718  1683               	bsf	status, 5	;RP0=1, select bank1
  2117  0719  1303               	bcf	status, 6	;RP1=0, select bank1
  2118  071A  0814               	movf	(148)^080h,w
  2119  071B  3924               	andlw	024h
  2120  071C  1D03               	btfss	status,2
  2121  071D  2F1F               	goto	u257_21
  2122  071E  2F20               	goto	u257_20
  2123  071F                     u257_21:
  2124  071F  2F24               	goto	i1l9137
  2125  0720                     u257_20:
  2126                           	line	60
  2127                           	
  2128  0720                     i1l9135:	
  2129                           ;i2cSlave.c: 60: SSPBUF = 0;
  2130  0720  1283               	bcf	status, 5	;RP0=0, select bank0
  2131  0721  1303               	bcf	status, 6	;RP1=0, select bank0
  2132  0722  0193               	clrf	(19)	;volatile
  2133                           	line	62
  2134                           ;i2cSlave.c: 62: } else if ((SSPSTAT & 0b00100100) == 0b0000100){
  2135  0723  2F53               	goto	i1l9151
  2136                           	
  2137  0724                     i1l6111:	
  2138                           	
  2139  0724                     i1l9137:	
  2140  0724  1683               	bsf	status, 5	;RP0=1, select bank1
  2141  0725  1303               	bcf	status, 6	;RP1=0, select bank1
  2142  0726  0814               	movf	(148)^080h,w
  2143  0727  3924               	andlw	024h
  2144  0728  3A04               	xorlw	04h
  2145  0729  1D03               	skipz
  2146  072A  2F2C               	goto	u258_21
  2147  072B  2F2D               	goto	u258_20
  2148  072C                     u258_21:
  2149  072C  2F2F               	goto	i1l9141
  2150  072D                     u258_20:
  2151  072D  2F53               	goto	i1l9151
  2152                           	line	65
  2153                           	
  2154  072E                     i1l9139:	
  2155                           ;i2cSlave.c: 65: } else if ((SSPSTAT & 0b00001100) == 0b00001100){
  2156  072E  2F53               	goto	i1l9151
  2157                           	
  2158  072F                     i1l6113:	
  2159                           	
  2160  072F                     i1l9141:	
  2161  072F  0814               	movf	(148)^080h,w
  2162  0730  390C               	andlw	0Ch
  2163  0731  3A0C               	xorlw	0Ch
  2164  0732  1D03               	skipz
  2165  0733  2F35               	goto	u259_21
  2166  0734  2F36               	goto	u259_20
  2167  0735                     u259_21:
  2168  0735  2F53               	goto	i1l9151
  2169  0736                     u259_20:
  2170                           	line	67
  2171                           	
  2172  0736                     i1l9143:	
  2173                           ;i2cSlave.c: 67: if (i2cWriteInt == 0)
  2174  0736  1283               	bcf	status, 5	;RP0=0, select bank0
  2175  0737  1303               	bcf	status, 6	;RP1=0, select bank0
  2176  0738  08C4               	movf	(_i2cWriteInt),f
  2177  0739  1D03               	skipz
  2178  073A  2F3C               	goto	u260_21
  2179  073B  2F3D               	goto	u260_20
  2180  073C                     u260_21:
  2181  073C  2F47               	goto	i1l6116
  2182  073D                     u260_20:
  2183                           	line	69
  2184                           	
  2185  073D                     i1l9145:	
  2186                           ;i2cSlave.c: 68: {
  2187                           ;i2cSlave.c: 69: i2cWriteInt = 1;
  2188  073D  01C4               	clrf	(_i2cWriteInt)
  2189  073E  1403               	bsf	status,0
  2190  073F  0DC4               	rlf	(_i2cWriteInt),f
  2191                           	line	70
  2192                           	
  2193  0740                     i1l9147:	
  2194                           ;i2cSlave.c: 70: i2cSend(COUNTS);
  2195  0740  0839               	movf	(_COUNTS),w
  2196  0741  120A  118A  25AE   	fcall	_i2cSend
              120A  118A         
  2197                           	line	71
  2198                           ;i2cSlave.c: 71: } else
  2199  0746  2F53               	goto	i1l9151
  2200                           	
  2201  0747                     i1l6116:	
  2202                           	line	73
  2203                           ;i2cSlave.c: 72: {
  2204                           ;i2cSlave.c: 73: i2cWriteInt = 0;
  2205  0747  01C4               	clrf	(_i2cWriteInt)
  2206                           	line	74
  2207                           	
  2208  0748                     i1l9149:	
  2209                           ;i2cSlave.c: 74: i2cSend(COUNTS >> 8);
  2210  0748  083A               	movf	(_COUNTS+1),w
  2211  0749  120A  118A  25AE   	fcall	_i2cSend
              120A  118A         
  2212  074E  2F53               	goto	i1l9151
  2213                           	line	75
  2214                           	
  2215  074F                     i1l6117:	
  2216  074F  2F53               	goto	i1l9151
  2217                           	line	85
  2218                           	
  2219  0750                     i1l6115:	
  2220  0750  2F53               	goto	i1l9151
  2221                           	line	88
  2222                           	
  2223  0751                     i1l6114:	
  2224  0751  2F53               	goto	i1l9151
  2225                           	
  2226  0752                     i1l6112:	
  2227  0752  2F53               	goto	i1l9151
  2228                           	
  2229  0753                     i1l6110:	
  2230                           	
  2231  0753                     i1l9151:	
  2232                           ;i2cSlave.c: 75: }
  2233                           ;i2cSlave.c: 85: }
  2234                           ;i2cSlave.c: 88: SSPIF = 0;
  2235  0753  1283               	bcf	status, 5	;RP0=0, select bank0
  2236  0754  1303               	bcf	status, 6	;RP1=0, select bank0
  2237  0755  118C               	bcf	(99/8),(99)&7
  2238                           	line	90
  2239                           	
  2240  0756                     i1l9153:	
  2241                           ;i2cSlave.c: 90: if (i2cBufferVal == 3){
  2242  0756  087D               	movf	(_i2cBufferVal),w
  2243  0757  3A03               	xorlw	03h
  2244  0758  1D03               	skipz
  2245  0759  2F5B               	goto	u261_21
  2246  075A  2F5C               	goto	u261_20
  2247  075B                     u261_21:
  2248  075B  2F64               	goto	i1l6119
  2249  075C                     u261_20:
  2250                           	line	91
  2251                           	
  2252  075C                     i1l9155:	
  2253                           ;i2cSlave.c: 91: i2cBufferVal = 0;
  2254  075C  01FD               	clrf	(_i2cBufferVal)
  2255                           	line	92
  2256                           	
  2257  075D                     i1l9157:	
  2258                           ;i2cSlave.c: 92: i2cDataUpdate();
  2259  075D  120A  118A  259F   	fcall	_i2cDataUpdate
              120A  118A         
  2260  0762  2F64               	goto	i1l6119
  2261                           	line	93
  2262                           	
  2263  0763                     i1l6118:	
  2264  0763  2F64               	goto	i1l6119
  2265                           	line	94
  2266                           	
  2267  0764                     i1l9159:	
  2268                           	line	95
  2269                           ;i2cSlave.c: 93: }
  2270                           ;i2cSlave.c: 94: return;
  2271                           	
  2272  0764                     i1l6119:	
  2273  0764  0008               	return
  2274                           	opt stack 0
  2275                           GLOBAL	__end_of_i2cIsrHandler
  2276  0765                     	__end_of_i2cIsrHandler:
  2277 ;; =============== function _i2cIsrHandler ends ============
  2278                           
  2279                           	signat	_i2cIsrHandler,88
  2280                           	global	_i2cDataUpdate
  2281                           psect	text372,local,class=CODE,delta=2
  2282                           global __ptext372
  2283  059F                     __ptext372:
  2284                           
  2285 ;; *************** function _i2cDataUpdate *****************
  2286 ;; Defined at:
  2287 ;;		line 98 in file "i2cSlave.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;		None               void
  2294 ;; Registers used:
  2295 ;;		wreg
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  2301 ;;      Params:         0       0       0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0
  2303 ;;      Temps:          1       0       0       0       0       0
  2304 ;;      Totals:         1       0       0       0       0       0
  2305 ;;Total ram usage:        1 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_i2cIsrHandler
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           psect	text372
  2314                           	file	"i2cSlave.c"
  2315                           	line	98
  2316                           	global	__size_of_i2cDataUpdate
  2317  000F                     	__size_of_i2cDataUpdate	equ	__end_of_i2cDataUpdate-_i2cDataUpdate
  2318                           	
  2319  059F                     _i2cDataUpdate:	
  2320                           	opt	stack 3
  2321                           ; Regs used in _i2cDataUpdate: [wreg]
  2322                           	line	99
  2323                           	
  2324  059F                     i1l9175:	
  2325                           ;i2cSlave.c: 99: switch (i2cBuffer[0]) {
  2326  059F  2DA0               	goto	i1l9177
  2327                           	line	100
  2328                           ;i2cSlave.c: 100: default :
  2329                           	
  2330  05A0                     i1l6123:	
  2331                           	line	101
  2332                           	
  2333  05A0                     i1l9177:	
  2334                           ;i2cSlave.c: 101: i2cSpeed = (i2cBuffer[1]);
  2335  05A0  1283               	bcf	status, 5	;RP0=0, select bank0
  2336  05A1  1303               	bcf	status, 6	;RP1=0, select bank0
  2337  05A2  0837               	movf	0+(_i2cBuffer)+01h,w
  2338  05A3  00F1               	movwf	(??_i2cDataUpdate+0)+0
  2339  05A4  0871               	movf	(??_i2cDataUpdate+0)+0,w
  2340  05A5  00C3               	movwf	(_i2cSpeed)
  2341                           	line	102
  2342                           ;i2cSlave.c: 102: i2cDirection = (i2cBuffer[2]);
  2343  05A6  0838               	movf	0+(_i2cBuffer)+02h,w
  2344  05A7  00F1               	movwf	(??_i2cDataUpdate+0)+0
  2345  05A8  0871               	movf	(??_i2cDataUpdate+0)+0,w
  2346  05A9  00C1               	movwf	(_i2cDirection)
  2347                           	line	103
  2348                           ;i2cSlave.c: 103: break;
  2349  05AA  2DAD               	goto	i1l6125
  2350                           	line	106
  2351                           	
  2352  05AB                     i1l9179:	
  2353                           ;i2cSlave.c: 106: }
  2354  05AB  2DAD               	goto	i1l6125
  2355                           	line	99
  2356                           	
  2357  05AC                     i1l6122:	
  2358  05AC  2DA0               	goto	i1l9177
  2359                           	line	106
  2360                           	
  2361  05AD                     i1l6124:	
  2362                           	line	108
  2363                           ;i2cSlave.c: 107: return;
  2364                           	
  2365  05AD                     i1l6125:	
  2366  05AD  0008               	return
  2367                           	opt stack 0
  2368                           GLOBAL	__end_of_i2cDataUpdate
  2369  05AE                     	__end_of_i2cDataUpdate:
  2370 ;; =============== function _i2cDataUpdate ends ============
  2371                           
  2372                           	signat	_i2cDataUpdate,88
  2373                           	global	_i2cSend
  2374                           psect	text373,local,class=CODE,delta=2
  2375                           global __ptext373
  2376  05AE                     __ptext373:
  2377                           
  2378 ;; *************** function _i2cSend *****************
  2379 ;; Defined at:
  2380 ;;		line 111 in file "i2cSlave.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  msg             1    wreg     unsigned char 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  msg             1    2[COMMON] unsigned char 
  2385 ;;  i               2    0[COMMON] int 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;		None               void
  2388 ;; Registers used:
  2389 ;;		wreg, status,2
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  2395 ;;      Params:         0       0       0       0       0       0
  2396 ;;      Locals:         3       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0
  2398 ;;      Totals:         3       0       0       0       0       0
  2399 ;;Total ram usage:        3 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_i2cIsrHandler
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           psect	text373
  2408                           	file	"i2cSlave.c"
  2409                           	line	111
  2410                           	global	__size_of_i2cSend
  2411  0010                     	__size_of_i2cSend	equ	__end_of_i2cSend-_i2cSend
  2412                           	
  2413  05AE                     _i2cSend:	
  2414                           	opt	stack 3
  2415                           ; Regs used in _i2cSend: [wreg+status,2]
  2416                           ;i2cSend@msg stored from wreg
  2417  05AE  00F3               	movwf	(i2cSend@msg)
  2418                           	line	112
  2419                           	
  2420  05AF                     i1l9165:	
  2421                           ;i2cSlave.c: 112: int i = 0;
  2422  05AF  01F1               	clrf	(i2cSend@i)
  2423  05B0  01F2               	clrf	(i2cSend@i+1)
  2424                           	line	113
  2425                           	
  2426  05B1                     i1l9167:	
  2427                           ;i2cSlave.c: 113: i++;
  2428  05B1  3001               	movlw	low(01h)
  2429  05B2  07F1               	addwf	(i2cSend@i),f
  2430  05B3  1803               	skipnc
  2431  05B4  0AF2               	incf	(i2cSend@i+1),f
  2432  05B5  3000               	movlw	high(01h)
  2433  05B6  07F2               	addwf	(i2cSend@i+1),f
  2434                           	line	114
  2435                           	
  2436  05B7                     i1l9169:	
  2437                           ;i2cSlave.c: 114: SSPBUF = msg;
  2438  05B7  0873               	movf	(i2cSend@msg),w
  2439  05B8  1283               	bcf	status, 5	;RP0=0, select bank0
  2440  05B9  1303               	bcf	status, 6	;RP1=0, select bank0
  2441  05BA  0093               	movwf	(19)	;volatile
  2442                           	line	115
  2443                           	
  2444  05BB                     i1l9171:	
  2445                           ;i2cSlave.c: 115: SSPCONbits.CKP = 1;
  2446  05BB  1614               	bsf	(20),4	;volatile
  2447  05BC  2DBD               	goto	i1l6128
  2448                           	line	117
  2449                           	
  2450  05BD                     i1l9173:	
  2451                           	line	118
  2452                           ;i2cSlave.c: 117: return;
  2453                           	
  2454  05BD                     i1l6128:	
  2455  05BD  0008               	return
  2456                           	opt stack 0
  2457                           GLOBAL	__end_of_i2cSend
  2458  05BE                     	__end_of_i2cSend:
  2459 ;; =============== function _i2cSend ends ============
  2460                           
  2461                           	signat	_i2cSend,4216
  2462                           psect	text374,local,class=CODE,delta=2
  2463                           global __ptext374
  2464  0000                     __ptext374:
  2465                           	global	btemp
  2466  007E                     	btemp set 07Eh
  2467                           
  2468                           	DABS	1,126,2	;btemp
  2469                           	global	wtemp0
  2470  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Mar 18 16:58:57 2013

                     _F 00AA              i2cSend@msg 0073                      _T0 0551                      _T1 0552  
                    _RD 0C60                      _WR 0C61                     _I2C 0550                     _CKE 04A6  
                   _CKP 00A4                     _GIE 005F                     _DIR 0553                     _RB5 0035  
                   _ERR 0554                     _PR2 0092                     _SMP 04A7                     _isr 06A6  
                   fsr0 0004                     indf 0000          i2cIsrHandler@i 0075                    l3100 0678  
                  l1551 06A5                    l1543 0784                    l1544 07BC                    l1545 07FB  
                  l3090 063A                    l1546 07FC                    l3091 0639                    l1547 07FD  
                  l1572 05DC                    l3092 063A                    l1548 07FD                    l1573 05E8  
                  l1574 05E5                    l1575 05E7                    l1567 05F8                    l1576 05E8  
                  l1568 05FF                    l3088 062E                    l1569 05FF                    l3089 0638  
                  l3099 0674                    l6106 0658                    l4594 059E                    l4597 061C  
                  l9101 0655                    l9201 0699                    l9051 0661                    l9203 069A  
                  l9211 0765                    ?_isr 0071                    l9053 066E                    l9061 05E3  
                  l9205 069B                    l9221 0788                    l9213 076F                    l9055 05D2  
                  l9063 0600                    l9071 05F1                    l9207 069F                    l9231 07B8  
                  l9223 0794                    l9215 0774                    l9049 0659                    l9057 05DA  
                  l9065 0619                    l9073 05F8                    l9081 0628                    l9209 06A2  
                  l9241 07F7                    l9233 07BC                    l9225 079D                    l9217 077A  
                  l9059 05DC                    l9067 061B                    l9091 0633                    l9083 0629  
                  l9075 061D                    l9235 07C0                    l9227 07A8                    l9219 0784  
                  l9069 05E9                    l9085 062A                    l9077 0621                    l9093 0594  
                  l9181 0679                    l9237 07D6                    l9229 07AE                    l9087 062B  
                  l9079 0627                    l9095 063E                    l9191 068F                    l9183 067C  
                  l9239 07E9                    l9089 062E                    l9097 0650                    l9193 0693  
                  l9185 068C                    l9099 0654                    l9195 0694                    l9187 068D  
                  l9197 0697                    l9189 068E                    l9199 0698                    _FLAG 00AA  
                  _T0IE 005D                    _T0IF 005A                    u2500 0633                    u2501 0632  
                  u2460 066E                    u2620 07AE                    u2461 066D                    u2621 07AD  
                  u2470 05DA                    u2630 07C0                    u2471 05D9                    u2631 07BF  
                  _PIE1 008C                    u2480 05E3                    _PIE2 008D                    u2465 066A  
                  u2481 05E2                    u2490 05F1                    u2491 05F0                    _PEIE 005E  
                  _RBIE 005B                    _RBIF 0058                    _TMR0 0001                    _TMR1 000E  
                  _WREN 0C62                    _main 0765                    btemp 007E                    start 0012  
 __size_of_BeginEncoder 000B         ??_i2cIsrHandler 0074         __end_of_i2cInit 0659         __end_of_i2cSend 05BE  
                 ??_isr 0077                   ?_main 0071                   _EEADR 010D                   _CARRY 0018  
                 _T1CON 0010                   _T2CON 0012                   _PORTD 0008                   _SSPM0 00A0  
                 _SSPM1 00A1                   _SSPM2 00A2                   _SSPM3 00A3                   _TRISB 0086  
                 _TRISD 0088                   _SSPIF 0063                   _SSPEN 00A5                   main@D 002C  
                 main@I 002A                   main@c 0035                   main@t 0034            _BeginEncoder 0594  
                 pclath 000A        __end_of_BeginPWM 063B              _i2cRequest 0042                   status 0003  
                 wtemp0 007E            __end_of_main 0800              _Initialise 0679                  ??_main 0026  
    __size_of_EncUpdate 001D        __end_of_SetPulse 0679                  _EEDATA 010C                  _CCPR2L 001B  
                _EECON1 018C                  _EECON2 018D                  _CMCON1 0097                  _COUNTS 0039  
                i1l1560 06E0                  i1l1561 06D6                  i1l1562 06DE                  i1l1554 06B0  
                i1l1555 06EB                  i1l1563 06E8                  i1l1556 06B6                  i1l1564 06EB  
                i1l1557 06EA                  i1l1558 06BC                  i1l1559 06E9                  i1l6110 0753  
                i1l6111 0724                  i1l6112 0752                  i1l6113 072F                  i1l6122 05AC  
                i1l6114 0751                  i1l6123 05A0                  i1l6115 0750                  i1l6124 05AD  
                i1l6116 0747                  i1l6125 05AD                  i1l6117 074F                  i1l6109 0718  
                i1l6118 0763                  i1l6119 0764                  i1l6128 05BD                  i1l9111 06C0  
                i1l9103 06A6                  i1l9113 06D2                  i1l9121 06E0                  i1l9105 06AA  
                i1l9131 0713                  i1l9123 06E3                  i1l9115 06D6                  i1l9107 06B4  
                i1l9141 072F                  i1l9133 0718                  i1l9125 06F8                  i1l9117 06D9  
                i1l9109 06BA                  i1l9143 0736                  i1l9135 0720                  i1l9151 0753  
                i1l9127 06FA                  i1l9119 06DE                  i1l9153 0756                  i1l9145 073D  
                i1l9137 0724                  i1l9129 0709                  i1l9171 05BB                  i1l9155 075C  
                i1l9147 0740                  i1l9139 072E                  i1l9173 05BD                  i1l9165 05AF  
                i1l9157 075D                  i1l9149 0748                  i1l9167 05B1                  i1l9175 059F  
                i1l9159 0764                  i1l9169 05B7                  i1l9177 05A0                  i1l9179 05AB  
                u251_20 06AA                  u251_21 06A9                  u260_20 073D                  u252_20 06B4  
                u260_21 073C                  u252_21 06B3                  u261_20 075C                  u253_20 06BA  
                u261_21 075B                  u253_21 06B9                  u254_20 06C0                  u254_21 06BF  
                u255_20 06D2                  u255_21 06D1                  u255_25 06CE                  u256_20 0709  
                u256_21 0708                  u257_20 0720                  u257_21 071F                  u258_20 072D  
                u258_21 072C                  u259_20 0736                  u259_21 0735                  _TARGET 003F  
                _TMR1IF 0060                  _TMR2IF 0061                  _SSPADD 0093         setDirection@dir 0020  
                _TRISC6 043E                  _TRISC7 043F                  _SSPBUF 0013               ??_i2cInit 0020  
             ??_i2cSend 0071              _UpdateData 05E9                  saved_w 007E             _i2cWriteInt 0044  
     __end_of_EncUpdate 061D          __pcstackCOMMON 0071             ?_Initialise 0071           ?_setDirection 0020  
             ?_BeginPWM 0071   __end_of_i2cDataUpdate 05AE              __pbssBANK0 0036               ?_SetPulse 0020  
            __pmaintext 0765              __pintentry 0004                 _CCP2CON 001D          ??_setDirection 0022  
            ??_BeginPWM 0020             ?_UpdateData 0020                 _SSPSTAT 0094          main@currentPWM 0028  
   __size_of_Initialise 002D                 _i2cInit 063B                 _i2cSend 05AE              ??_SetPulse 0022  
 __end_of_i2cIsrHandler 0765               _DIRECTION 003B            _i2cDirection 0041            _i2cBufferVal 007D  
             _T2CONbits 0012            __size_of_isr 0052    end_of_initialization 05CE     __size_of_UpdateData 0017  
           UpdateData@c 0022             UpdateData@t 0020               _PORTBbits 0006          SetPulse@length 0020  
             _TRISDbits 0088    __end_of_setDirection 05E9             _CCP2CONbits 001D              main@counts 0032  
             _EncUpdate 0600            ??_Initialise 0021               _i2cBuffer 0036     start_initialization 05BE  
     __size_of_BeginPWM 001E             __end_of_isr 06F8      __end_of_Initialise 06A6              ?_EncUpdate 0020  
     __size_of_SetPulse 0020            SetPulse@temp 0022            ??_UpdateData 0024             __pbssCOMMON 007D  
         __pcstackBANK0 0020           ?_BeginEncoder 0071                ?_i2cInit 0071                ?_i2cSend 0071  
    __end_of_UpdateData 0600               __ptext361 0000               __ptext370 06A6               __ptext362 0679  
             __ptext371 06F8               __ptext363 063B               __ptext372 059F               __ptext364 0594  
             __ptext373 05AE               __ptext365 061D               __ptext374 0000               __ptext366 05E9  
             __ptext367 0600               __ptext368 05D2               __ptext369 0659  __size_of_i2cDataUpdate 000F  
        ??_BeginEncoder 0020   __size_of_setDirection 0017                _DIR_READ 003D       interrupt_function 0004  
              _PIE1bits 008C                _PIR1bits 000C             ??_EncUpdate 0024                i2cSend@i 0071  
             main@P_old 002E                _BeginPWM 061D            _setDirection 05D2  __size_of_i2cIsrHandler 006D  
         _i2cDataUpdate 059F                _i2cSpeed 0043        __size_of_i2cInit 001E        __size_of_i2cSend 0010  
              _SetPulse 0659          ?_i2cDataUpdate 0071             EncUpdate@t0 0020             EncUpdate@t1 0022  
         __size_of_main 009B           _i2cIsrHandler 06F8    __end_of_BeginEncoder 059F                main@time 0030  
              intlevel1 0000          ?_i2cIsrHandler 0071              _OPTION_REG 0081         ??_i2cDataUpdate 0071  
        i2cInit@address 0020              _SSPCONbits 0014  
