

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Apr 12 12:35:53 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 23 "primarymain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 23 "primarymain.c"
    45  2007  F4F2               	dw 0xFFFA & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFFFF & 0xF7FF ;#
    46                           	FNCALL	_main,_Initialise
    47                           	FNCALL	_main,_SetPulse
    48                           	FNCALL	_main,_setDirection
    49                           	FNCALL	_main,_EncUpdate
    50                           	FNCALL	_main,_UpdateData
    51                           	FNCALL	_Initialise,_BeginPWM
    52                           	FNCALL	_Initialise,_BeginEncoder
    53                           	FNCALL	_Initialise,_i2cInit
    54                           	FNROOT	_main
    55                           	FNCALL	_isr,_i2cIsrHandler
    56                           	FNCALL	_i2cIsrHandler,_i2cSend
    57                           	FNCALL	_i2cIsrHandler,_i2cDataUpdate
    58                           	FNCALL	intlevel1,_isr
    59                           	global	intlevel1
    60                           	FNROOT	intlevel1
    61                           	global	_i2cBuffer
    62                           	global	_COUNTS
    63                           	global	_DIRECTION
    64                           	global	_DIR_READ
    65                           	global	_TARGET
    66                           	global	_i2cDirection
    67                           	global	_i2cSpeed
    68                           	global	_i2cBufferVal
    69                           	global	_i2cRequest
    70                           	global	_i2cWriteInt
    71                           	global	_TMR1
    72                           psect	text361,local,class=CODE,delta=2
    73                           global __ptext361
    74  0000                     __ptext361:
    75  000E                     _TMR1	set	14
    76                           	global	_CCP2CON
    77  001D                     _CCP2CON	set	29
    78                           	global	_CCP2CONbits
    79  001D                     _CCP2CONbits	set	29
    80                           	global	_CCPR2L
    81  001B                     _CCPR2L	set	27
    82                           	global	_PIR1bits
    83  000C                     _PIR1bits	set	12
    84                           	global	_PORTBbits
    85  0006                     _PORTBbits	set	6
    86                           	global	_PORTD
    87  0008                     _PORTD	set	8
    88                           	global	_SSPBUF
    89  0013                     _SSPBUF	set	19
    90                           	global	_SSPCONbits
    91  0014                     _SSPCONbits	set	20
    92                           	global	_T1CON
    93  0010                     _T1CON	set	16
    94                           	global	_T2CON
    95  0012                     _T2CON	set	18
    96                           	global	_T2CONbits
    97  0012                     _T2CONbits	set	18
    98                           	global	_TMR0
    99  0001                     _TMR0	set	1
   100                           	global	_CARRY
   101  0018                     _CARRY	set	24
   102                           	global	_CKP
   103  00A4                     _CKP	set	164
   104                           	global	_GIE
   105  005F                     _GIE	set	95
   106                           	global	_PEIE
   107  005E                     _PEIE	set	94
   108                           	global	_RB5
   109  0035                     _RB5	set	53
   110                           	global	_RBIE
   111  005B                     _RBIE	set	91
   112                           	global	_RBIF
   113  0058                     _RBIF	set	88
   114                           	global	_SSPEN
   115  00A5                     _SSPEN	set	165
   116                           	global	_SSPIF
   117  0063                     _SSPIF	set	99
   118                           	global	_SSPM0
   119  00A0                     _SSPM0	set	160
   120                           	global	_SSPM1
   121  00A1                     _SSPM1	set	161
   122                           	global	_SSPM2
   123  00A2                     _SSPM2	set	162
   124                           	global	_SSPM3
   125  00A3                     _SSPM3	set	163
   126                           	global	_T0IE
   127  005D                     _T0IE	set	93
   128                           	global	_T0IF
   129  005A                     _T0IF	set	90
   130                           	global	_TMR1IF
   131  0060                     _TMR1IF	set	96
   132                           	global	_TMR2IF
   133  0061                     _TMR2IF	set	97
   134                           	global	_CMCON1
   135  0097                     _CMCON1	set	151
   136                           	global	_OPTION_REG
   137  0081                     _OPTION_REG	set	129
   138                           	global	_PIE1
   139  008C                     _PIE1	set	140
   140                           	global	_PIE1bits
   141  008C                     _PIE1bits	set	140
   142                           	global	_PIE2
   143  008D                     _PIE2	set	141
   144                           	global	_PR2
   145  0092                     _PR2	set	146
   146                           	global	_SSPADD
   147  0093                     _SSPADD	set	147
   148                           	global	_SSPSTAT
   149  0094                     _SSPSTAT	set	148
   150                           	global	_TRISB
   151  0086                     _TRISB	set	134
   152                           	global	_TRISD
   153  0088                     _TRISD	set	136
   154                           	global	_TRISDbits
   155  0088                     _TRISDbits	set	136
   156                           	global	_CKE
   157  04A6                     _CKE	set	1190
   158                           	global	_SMP
   159  04A7                     _SMP	set	1191
   160                           	global	_TRISC6
   161  043E                     _TRISC6	set	1086
   162                           	global	_TRISC7
   163  043F                     _TRISC7	set	1087
   164                           	global	_EEADR
   165  010D                     _EEADR	set	269
   166                           	global	_EEDATA
   167  010C                     _EEDATA	set	268
   168                           	global	_EECON1
   169  018C                     _EECON1	set	396
   170                           	global	_EECON2
   171  018D                     _EECON2	set	397
   172                           	global	_RD
   173  0C60                     _RD	set	3168
   174                           	global	_WR
   175  0C61                     _WR	set	3169
   176                           	global	_WREN
   177  0C62                     _WREN	set	3170
   178                           	global	_FLAG
   179  00AA                     _FLAG	set	170
   180                           	DABS	1,170,1	;_FLAG
   181                           
   182                           	global	_F
   183  00AA                     _F	set	170
   184                           	DABS	1,170,1	;_F
   185                           
   186                           	global	_DIR
   187  0553                     _DIR	set	1363
   188                           	DABS	1,170,1	;_DIR
   189                           
   190                           	global	_ERR
   191  0554                     _ERR	set	1364
   192                           	DABS	1,170,1	;_ERR
   193                           
   194                           	global	_I2C
   195  0550                     _I2C	set	1360
   196                           	DABS	1,170,1	;_I2C
   197                           
   198                           	global	_T0
   199  0551                     _T0	set	1361
   200                           	DABS	1,170,1	;_T0
   201                           
   202                           	global	_T1
   203  0552                     _T1	set	1362
   204                           	DABS	1,170,1	;_T1
   205                           
   206                           	file	"C:\Users\josh\AppData\Local\Temp\s5ok."
   207                           	line	#
   208                           psect cinit,class=CODE,delta=2
   209                           global start_initialization
   210  05A6                     start_initialization:
   211                           
   212                           psect	bssCOMMON,class=COMMON,space=1
   213                           global __pbssCOMMON
   214  007B                     __pbssCOMMON:
   215  007B                     _i2cBufferVal:
   216  007B                            ds      1
   217                           
   218  007C                     _i2cRequest:
   219  007C                            ds      1
   220                           
   221  007D                     _i2cWriteInt:
   222  007D                            ds      1
   223                           
   224                           psect	bssBANK0,class=BANK0,space=1
   225                           global __pbssBANK0
   226  0036                     __pbssBANK0:
   227  0036                     _i2cBuffer:
   228  0036                            ds      3
   229                           
   230  0039                     _COUNTS:
   231  0039                            ds      2
   232                           
   233  003B                     _DIRECTION:
   234  003B                            ds      2
   235                           
   236  003D                     _DIR_READ:
   237  003D                            ds      2
   238                           
   239  003F                     _TARGET:
   240  003F                            ds      2
   241                           
   242  0041                     _i2cDirection:
   243  0041                            ds      1
   244                           
   245  0042                     _i2cSpeed:
   246  0042                            ds      1
   247                           
   248                           ; Clear objects allocated to COMMON
   249                           psect cinit,class=CODE,delta=2
   250  05A6  01FB               	clrf	((__pbssCOMMON)+0)&07Fh
   251  05A7  01FC               	clrf	((__pbssCOMMON)+1)&07Fh
   252  05A8  01FD               	clrf	((__pbssCOMMON)+2)&07Fh
   253                           ; Clear objects allocated to BANK0
   254                           psect cinit,class=CODE,delta=2
   255  05A9  01B6               	clrf	((__pbssBANK0)+0)&07Fh
   256  05AA  01B7               	clrf	((__pbssBANK0)+1)&07Fh
   257  05AB  01B8               	clrf	((__pbssBANK0)+2)&07Fh
   258  05AC  01B9               	clrf	((__pbssBANK0)+3)&07Fh
   259  05AD  01BA               	clrf	((__pbssBANK0)+4)&07Fh
   260  05AE  01BB               	clrf	((__pbssBANK0)+5)&07Fh
   261  05AF  01BC               	clrf	((__pbssBANK0)+6)&07Fh
   262  05B0  01BD               	clrf	((__pbssBANK0)+7)&07Fh
   263  05B1  01BE               	clrf	((__pbssBANK0)+8)&07Fh
   264  05B2  01BF               	clrf	((__pbssBANK0)+9)&07Fh
   265  05B3  01C0               	clrf	((__pbssBANK0)+10)&07Fh
   266  05B4  01C1               	clrf	((__pbssBANK0)+11)&07Fh
   267  05B5  01C2               	clrf	((__pbssBANK0)+12)&07Fh
   268                           psect cinit,class=CODE,delta=2
   269                           global end_of_initialization
   270                           
   271                           ;End of C runtime variable initialization code
   272                           
   273  05B6                     end_of_initialization:
   274  05B6  0183               clrf status
   275  05B7  120A  118A  2F65   ljmp _main	;jump to C main() function
   276                           psect	cstackCOMMON,class=COMMON,space=1
   277                           global __pcstackCOMMON
   278  0071                     __pcstackCOMMON:
   279                           	global	?_Initialise
   280  0071                     ?_Initialise:	; 0 bytes @ 0x0
   281                           	global	?_BeginPWM
   282  0071                     ?_BeginPWM:	; 0 bytes @ 0x0
   283                           	global	?_BeginEncoder
   284  0071                     ?_BeginEncoder:	; 0 bytes @ 0x0
   285                           	global	?_i2cInit
   286  0071                     ?_i2cInit:	; 0 bytes @ 0x0
   287                           	global	?_i2cIsrHandler
   288  0071                     ?_i2cIsrHandler:	; 0 bytes @ 0x0
   289                           	global	?_i2cSend
   290  0071                     ?_i2cSend:	; 0 bytes @ 0x0
   291                           	global	??_i2cSend
   292  0071                     ??_i2cSend:	; 0 bytes @ 0x0
   293                           	global	?_i2cDataUpdate
   294  0071                     ?_i2cDataUpdate:	; 0 bytes @ 0x0
   295                           	global	??_i2cDataUpdate
   296  0071                     ??_i2cDataUpdate:	; 0 bytes @ 0x0
   297                           	global	?_isr
   298  0071                     ?_isr:	; 0 bytes @ 0x0
   299                           	global	?_main
   300  0071                     ?_main:	; 2 bytes @ 0x0
   301                           	global	i2cSend@msg
   302  0071                     i2cSend@msg:	; 1 bytes @ 0x0
   303  0071                     	ds	1
   304                           	global	??_i2cIsrHandler
   305  0072                     ??_i2cIsrHandler:	; 0 bytes @ 0x1
   306  0072                     	ds	1
   307                           	global	i2cIsrHandler@i
   308  0073                     i2cIsrHandler@i:	; 2 bytes @ 0x2
   309  0073                     	ds	2
   310                           	global	??_isr
   311  0075                     ??_isr:	; 0 bytes @ 0x4
   312  0075                     	ds	6
   313                           psect	cstackBANK0,class=BANK0,space=1
   314                           global __pcstackBANK0
   315  0020                     __pcstackBANK0:
   316                           	global	?_SetPulse
   317  0020                     ?_SetPulse:	; 0 bytes @ 0x0
   318                           	global	?_setDirection
   319  0020                     ?_setDirection:	; 0 bytes @ 0x0
   320                           	global	?_EncUpdate
   321  0020                     ?_EncUpdate:	; 0 bytes @ 0x0
   322                           	global	?_UpdateData
   323  0020                     ?_UpdateData:	; 0 bytes @ 0x0
   324                           	global	??_BeginPWM
   325  0020                     ??_BeginPWM:	; 0 bytes @ 0x0
   326                           	global	??_BeginEncoder
   327  0020                     ??_BeginEncoder:	; 0 bytes @ 0x0
   328                           	global	??_i2cInit
   329  0020                     ??_i2cInit:	; 0 bytes @ 0x0
   330                           	global	i2cInit@address
   331  0020                     i2cInit@address:	; 1 bytes @ 0x0
   332                           	global	UpdateData@t
   333  0020                     UpdateData@t:	; 2 bytes @ 0x0
   334                           	global	setDirection@dir
   335  0020                     setDirection@dir:	; 2 bytes @ 0x0
   336                           	global	SetPulse@length
   337  0020                     SetPulse@length:	; 2 bytes @ 0x0
   338                           	global	EncUpdate@t0
   339  0020                     EncUpdate@t0:	; 2 bytes @ 0x0
   340  0020                     	ds	1
   341                           	global	??_Initialise
   342  0021                     ??_Initialise:	; 0 bytes @ 0x1
   343  0021                     	ds	1
   344                           	global	??_SetPulse
   345  0022                     ??_SetPulse:	; 0 bytes @ 0x2
   346                           	global	??_setDirection
   347  0022                     ??_setDirection:	; 0 bytes @ 0x2
   348                           	global	UpdateData@c
   349  0022                     UpdateData@c:	; 2 bytes @ 0x2
   350                           	global	SetPulse@temp
   351  0022                     SetPulse@temp:	; 2 bytes @ 0x2
   352                           	global	EncUpdate@t1
   353  0022                     EncUpdate@t1:	; 2 bytes @ 0x2
   354  0022                     	ds	2
   355                           	global	??_EncUpdate
   356  0024                     ??_EncUpdate:	; 0 bytes @ 0x4
   357                           	global	??_UpdateData
   358  0024                     ??_UpdateData:	; 0 bytes @ 0x4
   359  0024                     	ds	2
   360                           	global	??_main
   361  0026                     ??_main:	; 0 bytes @ 0x6
   362  0026                     	ds	2
   363                           	global	main@currentPWM
   364  0028                     main@currentPWM:	; 2 bytes @ 0x8
   365  0028                     	ds	2
   366                           	global	main@I
   367  002A                     main@I:	; 2 bytes @ 0xA
   368  002A                     	ds	2
   369                           	global	main@D
   370  002C                     main@D:	; 2 bytes @ 0xC
   371  002C                     	ds	2
   372                           	global	main@P_old
   373  002E                     main@P_old:	; 2 bytes @ 0xE
   374  002E                     	ds	2
   375                           	global	main@time
   376  0030                     main@time:	; 2 bytes @ 0x10
   377  0030                     	ds	2
   378                           	global	main@counts
   379  0032                     main@counts:	; 2 bytes @ 0x12
   380  0032                     	ds	2
   381                           	global	main@t
   382  0034                     main@t:	; 1 bytes @ 0x14
   383  0034                     	ds	1
   384                           	global	main@c
   385  0035                     main@c:	; 1 bytes @ 0x15
   386  0035                     	ds	1
   387 ;;Data sizes: Strings 0, constant 0, data 0, bss 16, persistent 0 stack 0
   388 ;;Auto spaces:   Size  Autos    Used
   389 ;; COMMON          13     10      13
   390 ;; BANK0           80     22      35
   391 ;; BANK1h          69      0       0
   392 ;; BANK1l          10      0       0
   393 ;; BANK3           96      0       0
   394 ;; BANK2           69      0       0
   395                           
   396 ;;
   397 ;; Pointer list with targets:
   398                           
   399 ;; EncUpdate@t0	PTR int  size(2) Largest target is 512
   400 ;;		 -> RAM(DATA[512]), 
   401 ;;
   402 ;; EncUpdate@t1	PTR int  size(2) Largest target is 512
   403 ;;		 -> RAM(DATA[512]), 
   404 ;;
   405                           
   406                           
   407 ;;
   408 ;; Critical Paths under _main in COMMON
   409 ;;
   410 ;;   None.
   411 ;;
   412 ;; Critical Paths under _isr in COMMON
   413 ;;
   414 ;;   _isr->_i2cIsrHandler
   415 ;;   _i2cIsrHandler->_i2cSend
   416 ;;   _i2cIsrHandler->_i2cDataUpdate
   417 ;;
   418 ;; Critical Paths under _main in BANK0
   419 ;;
   420 ;;   _main->_EncUpdate
   421 ;;   _Initialise->_i2cInit
   422 ;;
   423 ;; Critical Paths under _isr in BANK0
   424 ;;
   425 ;;   None.
   426 ;;
   427 ;; Critical Paths under _main in BANK1h
   428 ;;
   429 ;;   None.
   430 ;;
   431 ;; Critical Paths under _isr in BANK1h
   432 ;;
   433 ;;   None.
   434 ;;
   435 ;; Critical Paths under _main in BANK1l
   436 ;;
   437 ;;   None.
   438 ;;
   439 ;; Critical Paths under _isr in BANK1l
   440 ;;
   441 ;;   None.
   442 ;;
   443 ;; Critical Paths under _main in BANK3
   444 ;;
   445 ;;   None.
   446 ;;
   447 ;; Critical Paths under _isr in BANK3
   448 ;;
   449 ;;   None.
   450 ;;
   451 ;; Critical Paths under _main in BANK2
   452 ;;
   453 ;;   None.
   454 ;;
   455 ;; Critical Paths under _isr in BANK2
   456 ;;
   457 ;;   None.
   458                           
   459 ;;
   460 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   461 ;;
   462                           
   463 ;;
   464 ;;Call Graph Tables:
   465 ;;
   466 ;; ---------------------------------------------------------------------------------
   467 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   468 ;; ---------------------------------------------------------------------------------
   469 ;; (0) _main                                                22    22      0     341
   470 ;;                                              6 BANK0     16    16      0
   471 ;;                         _Initialise
   472 ;;                           _SetPulse
   473 ;;                       _setDirection
   474 ;;                          _EncUpdate
   475 ;;                         _UpdateData
   476 ;; ---------------------------------------------------------------------------------
   477 ;; (1) _Initialise                                           0     0      0      22
   478 ;;                           _BeginPWM
   479 ;;                       _BeginEncoder
   480 ;;                            _i2cInit
   481 ;; ---------------------------------------------------------------------------------
   482 ;; (2) _i2cInit                                              1     1      0      22
   483 ;;                                              0 BANK0      1     1      0
   484 ;; ---------------------------------------------------------------------------------
   485 ;; (2) _BeginEncoder                                         0     0      0       0
   486 ;; ---------------------------------------------------------------------------------
   487 ;; (2) _BeginPWM                                             0     0      0       0
   488 ;; ---------------------------------------------------------------------------------
   489 ;; (1) _UpdateData                                           4     0      4      44
   490 ;;                                              0 BANK0      4     0      4
   491 ;; ---------------------------------------------------------------------------------
   492 ;; (1) _EncUpdate                                            6     2      4      44
   493 ;;                                              0 BANK0      6     2      4
   494 ;; ---------------------------------------------------------------------------------
   495 ;; (1) _setDirection                                         2     0      2      44
   496 ;;                                              0 BANK0      2     0      2
   497 ;; ---------------------------------------------------------------------------------
   498 ;; (1) _SetPulse                                             4     2      2      68
   499 ;;                                              0 BANK0      4     2      2
   500 ;; ---------------------------------------------------------------------------------
   501 ;; Estimated maximum stack depth 2
   502 ;; ---------------------------------------------------------------------------------
   503 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   504 ;; ---------------------------------------------------------------------------------
   505 ;; (3) _isr                                                  6     6      0      24
   506 ;;                                              4 COMMON     6     6      0
   507 ;;                      _i2cIsrHandler
   508 ;; ---------------------------------------------------------------------------------
   509 ;; (4) _i2cIsrHandler                                        3     3      0      24
   510 ;;                                              1 COMMON     3     3      0
   511 ;;                            _i2cSend
   512 ;;                      _i2cDataUpdate
   513 ;; ---------------------------------------------------------------------------------
   514 ;; (5) _i2cDataUpdate                                        1     1      0       0
   515 ;;                                              0 COMMON     1     1      0
   516 ;; ---------------------------------------------------------------------------------
   517 ;; (5) _i2cSend                                              1     1      0      22
   518 ;;                                              0 COMMON     1     1      0
   519 ;; ---------------------------------------------------------------------------------
   520 ;; Estimated maximum stack depth 5
   521 ;; ---------------------------------------------------------------------------------
   522                           
   523 ;; Call Graph Graphs:
   524                           
   525 ;; _main (ROOT)
   526 ;;   _Initialise
   527 ;;     _BeginPWM
   528 ;;     _BeginEncoder
   529 ;;     _i2cInit
   530 ;;   _SetPulse
   531 ;;   _setDirection
   532 ;;   _EncUpdate
   533 ;;   _UpdateData
   534 ;;
   535 ;; _isr (ROOT)
   536 ;;   _i2cIsrHandler
   537 ;;     _i2cSend
   538 ;;     _i2cDataUpdate
   539 ;;
   540                           
   541 ;; Address spaces:
   542                           
   543 ;;Name               Size   Autos  Total    Cost      Usage
   544 ;;BITCOMMON            D      0       0       0        0.0%
   545 ;;EEDATA             100      0       0       0        0.0%
   546 ;;NULL                 0      0       0       0        0.0%
   547 ;;CODE                 0      0       0       0        0.0%
   548 ;;COMMON               D      A       D       1      100.0%
   549 ;;BITSFR0              0      0       0       1        0.0%
   550 ;;SFR0                 0      0       0       1        0.0%
   551 ;;BITSFR1              0      0       0       2        0.0%
   552 ;;SFR1                 0      0       0       2        0.0%
   553 ;;STACK                0      0       8       2        0.0%
   554 ;;BITBANK0            50      0       0       3        0.0%
   555 ;;BANK0               50     16      23       4       43.8%
   556 ;;BITSFR3              0      0       0       4        0.0%
   557 ;;SFR3                 0      0       0       4        0.0%
   558 ;;BITBANK1h           45      0       0       5        0.0%
   559 ;;BITSFR2              0      0       0       5        0.0%
   560 ;;SFR2                 0      0       0       5        0.0%
   561 ;;BITBANK1l            A      0       0       6        0.0%
   562 ;;BANK1h              45      0       0       7        0.0%
   563 ;;BANK1l               A      0       0       8        0.0%
   564 ;;BITBANK3            60      0       0       9        0.0%
   565 ;;BANK3               60      0       0      10        0.0%
   566 ;;BANK2               45      0       0      11        0.0%
   567 ;;ABS                  0      0      30      12        0.0%
   568 ;;BITBANK2            45      0       0      13        0.0%
   569 ;;DATA                 0      0      38      14        0.0%
   570                           
   571                           	global	_main
   572                           psect	maintext,global,class=CODE,delta=2
   573                           global __pmaintext
   574  0765                     __pmaintext:
   575                           
   576 ;; *************** function _main *****************
   577 ;; Defined at:
   578 ;;		line 102 in file "primarymain.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;  counts          2   18[BANK0 ] int 
   583 ;;  time            2   16[BANK0 ] int 
   584 ;;  P_old           2   14[BANK0 ] int 
   585 ;;  D               2   12[BANK0 ] int 
   586 ;;  I               2   10[BANK0 ] int 
   587 ;;  currentPWM      2    8[BANK0 ] int 
   588 ;;  PID             2    0        int 
   589 ;;  P               2    0        int 
   590 ;;  v               2    0        int 
   591 ;;  c               1   21[BANK0 ] PTR int 
   592 ;;  t               1   20[BANK0 ] PTR int 
   593 ;; Return value:  Size  Location     Type
   594 ;;                  2  1542[COMMON] int 
   595 ;; Registers used:
   596 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   597 ;; Tracked objects:
   598 ;;		On entry : 17F/0
   599 ;;		On exit  : 0/0
   600 ;;		Unchanged: 0/0
   601 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
   602 ;;      Params:         0       0       0       0       0       0
   603 ;;      Locals:         0      14       0       0       0       0
   604 ;;      Temps:          0       2       0       0       0       0
   605 ;;      Totals:         0      16       0       0       0       0
   606 ;;Total ram usage:       16 bytes
   607 ;; Hardware stack levels required when called:    5
   608 ;; This function calls:
   609 ;;		_Initialise
   610 ;;		_SetPulse
   611 ;;		_setDirection
   612 ;;		_EncUpdate
   613 ;;		_UpdateData
   614 ;; This function is called by:
   615 ;;		Startup code after reset
   616 ;; This function uses a non-reentrant model
   617 ;;
   618                           psect	maintext
   619                           	file	"primarymain.c"
   620                           	line	102
   621                           	global	__size_of_main
   622  009B                     	__size_of_main	equ	__end_of_main-_main
   623                           	
   624  0765                     _main:	
   625                           	opt	stack 3
   626                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   627                           	line	104
   628                           	
   629  0765                     l9211:	
   630                           ;primarymain.c: 104: int time = 0, counts = 0;
   631  0765  1283               	bcf	status, 5	;RP0=0, select bank0
   632  0766  1303               	bcf	status, 6	;RP1=0, select bank0
   633  0767  01B0               	clrf	(main@time)
   634  0768  01B1               	clrf	(main@time+1)
   635                           ;primarymain.c: 109: *c = counts;
   636  0769  01B2               	clrf	(main@counts)
   637  076A  01B3               	clrf	(main@counts+1)
   638                           	line	110
   639                           ;primarymain.c: 110: int currentPWM = 0;
   640  076B  01A8               	clrf	(main@currentPWM)
   641  076C  01A9               	clrf	(main@currentPWM+1)
   642                           	line	113
   643                           ;primarymain.c: 111: int v;
   644                           ;primarymain.c: 113: int P, I, D, P_old = 0, PID;
   645  076D  01AE               	clrf	(main@P_old)
   646  076E  01AF               	clrf	(main@P_old+1)
   647                           	line	118
   648                           	
   649  076F                     l9213:	
   650                           ;primarymain.c: 118: Initialise();
   651  076F  120A  118A  265F   	fcall	_Initialise
              120A  118A         
   652                           	line	120
   653                           	
   654  0774                     l9215:	
   655                           ;primarymain.c: 120: TARGET = 30;
   656  0774  301E               	movlw	low(01Eh)
   657  0775  1283               	bcf	status, 5	;RP0=0, select bank0
   658  0776  1303               	bcf	status, 6	;RP1=0, select bank0
   659  0777  00BF               	movwf	(_TARGET)
   660  0778  3000               	movlw	high(01Eh)
   661  0779  00C0               	movwf	((_TARGET))+1
   662                           	line	121
   663                           	
   664  077A                     l9217:	
   665                           ;primarymain.c: 121: SetPulse(0);
   666  077A  3000               	movlw	low(0)
   667  077B  00A0               	movwf	(?_SetPulse)
   668  077C  3000               	movlw	high(0)
   669  077D  00A1               	movwf	((?_SetPulse))+1
   670  077E  120A  118A  263F   	fcall	_SetPulse
              120A  118A         
   671  0783  2F84               	goto	l9219
   672                           	line	123
   673                           ;primarymain.c: 123: while(1)
   674                           	
   675  0784                     l1543:	
   676                           	line	133
   677                           	
   678  0784                     l9219:	
   679                           ;primarymain.c: 124: {
   680                           ;primarymain.c: 133: PORTD = i2cSpeed;
   681  0784  1283               	bcf	status, 5	;RP0=0, select bank0
   682  0785  1303               	bcf	status, 6	;RP1=0, select bank0
   683  0786  0842               	movf	(_i2cSpeed),w
   684  0787  0088               	movwf	(8)	;volatile
   685                           	line	135
   686                           	
   687  0788                     l9221:	
   688                           ;primarymain.c: 135: SetPulse(i2cSpeed);
   689  0788  0842               	movf	(_i2cSpeed),w
   690  0789  00A6               	movwf	(??_main+0)+0
   691  078A  01A7               	clrf	(??_main+0)+0+1
   692  078B  0826               	movf	0+(??_main+0)+0,w
   693  078C  00A0               	movwf	(?_SetPulse)
   694  078D  0827               	movf	1+(??_main+0)+0,w
   695  078E  00A1               	movwf	(?_SetPulse+1)
   696  078F  120A  118A  263F   	fcall	_SetPulse
              120A  118A         
   697                           	line	136
   698                           	
   699  0794                     l9223:	
   700                           ;primarymain.c: 136: DIRECTION = i2cDirection;
   701  0794  1283               	bcf	status, 5	;RP0=0, select bank0
   702  0795  1303               	bcf	status, 6	;RP1=0, select bank0
   703  0796  0841               	movf	(_i2cDirection),w
   704  0797  00A6               	movwf	(??_main+0)+0
   705  0798  01A7               	clrf	(??_main+0)+0+1
   706  0799  0826               	movf	0+(??_main+0)+0,w
   707  079A  00BB               	movwf	(_DIRECTION)
   708  079B  0827               	movf	1+(??_main+0)+0,w
   709  079C  00BC               	movwf	(_DIRECTION+1)
   710                           	line	137
   711                           	
   712  079D                     l9225:	
   713                           ;primarymain.c: 137: setDirection(DIRECTION);
   714  079D  083C               	movf	(_DIRECTION+1),w
   715  079E  01A1               	clrf	(?_setDirection+1)
   716  079F  07A1               	addwf	(?_setDirection+1)
   717  07A0  083B               	movf	(_DIRECTION),w
   718  07A1  01A0               	clrf	(?_setDirection)
   719  07A2  07A0               	addwf	(?_setDirection)
   720                           
   721  07A3  120A  118A  25BA   	fcall	_setDirection
              120A  118A         
   722                           	line	142
   723                           	
   724  07A8                     l9227:	
   725                           ;primarymain.c: 142: if (F.I2C == 1)
   726  07A8  1683               	bsf	status, 5	;RP0=1, select bank1
   727  07A9  1303               	bcf	status, 6	;RP1=0, select bank1
   728  07AA  1C2A               	btfss	(170)^080h,0
   729  07AB  2FAD               	goto	u2641
   730  07AC  2FAE               	goto	u2640
   731  07AD                     u2641:
   732  07AD  2FBC               	goto	l9233
   733  07AE                     u2640:
   734                           	line	149
   735                           	
   736  07AE                     l9229:	
   737                           ;primarymain.c: 143: {
   738                           ;primarymain.c: 149: COUNTS = 0;
   739  07AE  1283               	bcf	status, 5	;RP0=0, select bank0
   740  07AF  1303               	bcf	status, 6	;RP1=0, select bank0
   741  07B0  01B9               	clrf	(_COUNTS)
   742  07B1  01BA               	clrf	(_COUNTS+1)
   743                           	line	150
   744                           ;primarymain.c: 150: I = 0;
   745  07B2  01AA               	clrf	(main@I)
   746  07B3  01AB               	clrf	(main@I+1)
   747                           	line	151
   748                           ;primarymain.c: 151: D = 0;
   749  07B4  01AC               	clrf	(main@D)
   750  07B5  01AD               	clrf	(main@D+1)
   751                           	line	152
   752                           ;primarymain.c: 152: P_old = 0;
   753  07B6  01AE               	clrf	(main@P_old)
   754  07B7  01AF               	clrf	(main@P_old+1)
   755                           	line	155
   756                           	
   757  07B8                     l9231:	
   758                           ;primarymain.c: 155: F.I2C = 0;
   759  07B8  1683               	bsf	status, 5	;RP0=1, select bank1
   760  07B9  1303               	bcf	status, 6	;RP1=0, select bank1
   761  07BA  102A               	bcf	(170)^080h,0
   762  07BB  2FBC               	goto	l9233
   763                           	line	156
   764                           	
   765  07BC                     l1544:	
   766                           	line	158
   767                           	
   768  07BC                     l9233:	
   769                           ;primarymain.c: 156: }
   770                           ;primarymain.c: 158: if (F.DIR == 1)
   771  07BC  1DAA               	btfss	(170)^080h,3
   772  07BD  2FBF               	goto	u2651
   773  07BE  2FC0               	goto	u2650
   774  07BF                     u2651:
   775  07BF  2F84               	goto	l9219
   776  07C0                     u2650:
   777                           	line	161
   778                           	
   779  07C0                     l9235:	
   780                           ;primarymain.c: 159: {
   781                           ;primarymain.c: 161: EncUpdate(*t, *c);
   782  07C0  1283               	bcf	status, 5	;RP0=0, select bank0
   783  07C1  1303               	bcf	status, 6	;RP1=0, select bank0
   784  07C2  0834               	movf	(main@t),w
   785  07C3  0084               	movwf	fsr0
   786  07C4  1383               	bcf	status, 7	;select IRP bank0
   787  07C5  0800               	movf	indf,w
   788  07C6  00A0               	movwf	(?_EncUpdate)
   789  07C7  0A84               	incf	fsr0,f
   790  07C8  0800               	movf	indf,w
   791  07C9  00A1               	movwf	(?_EncUpdate+1)
   792  07CA  0835               	movf	(main@c),w
   793  07CB  0084               	movwf	fsr0
   794  07CC  0800               	movf	indf,w
   795  07CD  00A2               	movwf	(0+?_EncUpdate+02h)
   796  07CE  0A84               	incf	fsr0,f
   797  07CF  0800               	movf	indf,w
   798  07D0  00A3               	movwf	(1+?_EncUpdate+02h)
   799  07D1  120A  118A  2604   	fcall	_EncUpdate
              120A  118A         
   800                           	line	162
   801                           	
   802  07D6                     l9237:	
   803                           ;primarymain.c: 162: UpdateData(time, counts);
   804  07D6  1283               	bcf	status, 5	;RP0=0, select bank0
   805  07D7  1303               	bcf	status, 6	;RP1=0, select bank0
   806  07D8  0831               	movf	(main@time+1),w
   807  07D9  01A1               	clrf	(?_UpdateData+1)
   808  07DA  07A1               	addwf	(?_UpdateData+1)
   809  07DB  0830               	movf	(main@time),w
   810  07DC  01A0               	clrf	(?_UpdateData)
   811  07DD  07A0               	addwf	(?_UpdateData)
   812                           
   813  07DE  0833               	movf	(main@counts+1),w
   814  07DF  01A3               	clrf	1+(?_UpdateData)+02h
   815  07E0  07A3               	addwf	1+(?_UpdateData)+02h
   816  07E1  0832               	movf	(main@counts),w
   817  07E2  01A2               	clrf	0+(?_UpdateData)+02h
   818  07E3  07A2               	addwf	0+(?_UpdateData)+02h
   819                           
   820  07E4  120A  118A  25D1   	fcall	_UpdateData
              120A  118A         
   821                           	line	165
   822                           	
   823  07E9                     l9239:	
   824                           ;primarymain.c: 165: DIR_READ = RB5;
   825  07E9  1003               	clrc
   826  07EA  1283               	bcf	status, 5	;RP0=0, select bank0
   827  07EB  1303               	bcf	status, 6	;RP1=0, select bank0
   828  07EC  1A86               	btfsc	(53/8),(53)&7
   829  07ED  1403               	setc
   830  07EE  3000               	movlw	0
   831  07EF  1803               	skipnc
   832  07F0  3001               	movlw	1
   833                           
   834  07F1  00A6               	movwf	(??_main+0)+0
   835  07F2  01A7               	clrf	(??_main+0)+0+1
   836  07F3  0826               	movf	0+(??_main+0)+0,w
   837  07F4  00BD               	movwf	(_DIR_READ)
   838  07F5  0827               	movf	1+(??_main+0)+0,w
   839  07F6  00BE               	movwf	(_DIR_READ+1)
   840                           	line	168
   841                           	
   842  07F7                     l9241:	
   843                           ;primarymain.c: 168: F.DIR = 0;
   844  07F7  1683               	bsf	status, 5	;RP0=1, select bank1
   845  07F8  1303               	bcf	status, 6	;RP1=0, select bank1
   846  07F9  11AA               	bcf	(170)^080h,3
   847  07FA  2F84               	goto	l9219
   848                           	line	169
   849                           	
   850  07FB                     l1545:	
   851  07FB  2F84               	goto	l9219
   852                           	line	205
   853                           	
   854  07FC                     l1546:	
   855                           	line	123
   856  07FC  2F84               	goto	l9219
   857                           	
   858  07FD                     l1547:	
   859                           	line	208
   860                           ;primarymain.c: 169: }
   861                           ;primarymain.c: 205: }
   862                           ;primarymain.c: 207: return 1;
   863                           ;	Return value of _main is never used
   864                           	
   865  07FD                     l1548:	
   866                           	global	start
   867  07FD  120A  118A  2812   	ljmp	start
   868                           	opt stack 0
   869                           GLOBAL	__end_of_main
   870  0800                     	__end_of_main:
   871 ;; =============== function _main ends ============
   872                           
   873                           	signat	_main,90
   874                           	global	_Initialise
   875                           psect	text362,local,class=CODE,delta=2
   876                           global __ptext362
   877  065F                     __ptext362:
   878                           
   879 ;; *************** function _Initialise *****************
   880 ;; Defined at:
   881 ;;		line 214 in file "primarymain.c"
   882 ;; Parameters:    Size  Location     Type
   883 ;;		None
   884 ;; Auto vars:     Size  Location     Type
   885 ;;		None
   886 ;; Return value:  Size  Location     Type
   887 ;;		None               void
   888 ;; Registers used:
   889 ;;		wreg, status,2, status,0, pclath, cstack
   890 ;; Tracked objects:
   891 ;;		On entry : 0/0
   892 ;;		On exit  : 0/0
   893 ;;		Unchanged: 0/0
   894 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
   895 ;;      Params:         0       0       0       0       0       0
   896 ;;      Locals:         0       0       0       0       0       0
   897 ;;      Temps:          0       0       0       0       0       0
   898 ;;      Totals:         0       0       0       0       0       0
   899 ;;Total ram usage:        0 bytes
   900 ;; Hardware stack levels used:    1
   901 ;; Hardware stack levels required when called:    4
   902 ;; This function calls:
   903 ;;		_BeginPWM
   904 ;;		_BeginEncoder
   905 ;;		_i2cInit
   906 ;; This function is called by:
   907 ;;		_main
   908 ;; This function uses a non-reentrant model
   909 ;;
   910                           psect	text362
   911                           	file	"primarymain.c"
   912                           	line	214
   913                           	global	__size_of_Initialise
   914  002D                     	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   915                           	
   916  065F                     _Initialise:	
   917                           	opt	stack 3
   918                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   919                           	line	215
   920                           	
   921  065F                     l9181:	
   922                           ;primarymain.c: 215: FLAG = 0;
   923  065F  1683               	bsf	status, 5	;RP0=1, select bank1
   924  0660  1303               	bcf	status, 6	;RP1=0, select bank1
   925  0661  01AA               	clrf	(170)^080h
   926                           	line	216
   927                           	
   928  0662                     l9183:	
   929                           ;primarymain.c: 216: BeginPWM();
   930  0662  120A  118A  2621   	fcall	_BeginPWM
              120A  118A         
   931                           	line	217
   932                           ;primarymain.c: 217: BeginEncoder();
   933  0667  120A  118A  258C   	fcall	_BeginEncoder
              120A  118A         
   934                           	line	218
   935                           ;primarymain.c: 218: i2cInit(0x10);
   936  066C  3010               	movlw	(010h)
   937  066D  120A  118A  25E8   	fcall	_i2cInit
              120A  118A         
   938                           	line	221
   939                           	
   940  0672                     l9185:	
   941                           ;primarymain.c: 221: PEIE = 1;
   942  0672  170B               	bsf	(94/8),(94)&7
   943                           	line	222
   944                           	
   945  0673                     l9187:	
   946                           ;primarymain.c: 222: RBIE = 1;
   947  0673  158B               	bsf	(91/8),(91)&7
   948                           	line	223
   949                           	
   950  0674                     l9189:	
   951                           ;primarymain.c: 223: T0IE = 0;
   952  0674  128B               	bcf	(93/8),(93)&7
   953                           	line	224
   954                           	
   955  0675                     l9191:	
   956                           ;primarymain.c: 224: PIE1 = 0b00001001;
   957  0675  3009               	movlw	(09h)
   958  0676  1683               	bsf	status, 5	;RP0=1, select bank1
   959  0677  1303               	bcf	status, 6	;RP1=0, select bank1
   960  0678  008C               	movwf	(140)^080h	;volatile
   961                           	line	225
   962                           	
   963  0679                     l9193:	
   964                           ;primarymain.c: 225: PIE2 = 0;
   965  0679  018D               	clrf	(141)^080h	;volatile
   966                           	line	227
   967                           	
   968  067A                     l9195:	
   969                           ;primarymain.c: 227: SSPIF = 0;
   970  067A  1283               	bcf	status, 5	;RP0=0, select bank0
   971  067B  1303               	bcf	status, 6	;RP1=0, select bank0
   972  067C  118C               	bcf	(99/8),(99)&7
   973                           	line	228
   974                           	
   975  067D                     l9197:	
   976                           ;primarymain.c: 228: RBIF = 0;
   977  067D  100B               	bcf	(88/8),(88)&7
   978                           	line	229
   979                           	
   980  067E                     l9199:	
   981                           ;primarymain.c: 229: T0IF = 0;
   982  067E  110B               	bcf	(90/8),(90)&7
   983                           	line	230
   984                           	
   985  067F                     l9201:	
   986                           ;primarymain.c: 230: TMR1IF = 0;
   987  067F  100C               	bcf	(96/8),(96)&7
   988                           	line	232
   989                           	
   990  0680                     l9203:	
   991                           ;primarymain.c: 232: GIE = 1;
   992  0680  178B               	bsf	(95/8),(95)&7
   993                           	line	234
   994                           	
   995  0681                     l9205:	
   996                           ;primarymain.c: 234: TRISB = 0b11110111;
   997  0681  30F7               	movlw	(0F7h)
   998  0682  1683               	bsf	status, 5	;RP0=1, select bank1
   999  0683  1303               	bcf	status, 6	;RP1=0, select bank1
  1000  0684  0086               	movwf	(134)^080h	;volatile
  1001                           	line	235
  1002                           	
  1003  0685                     l9207:	
  1004                           ;primarymain.c: 235: PORTBbits.RB3 = 0;
  1005  0685  1283               	bcf	status, 5	;RP0=0, select bank0
  1006  0686  1303               	bcf	status, 6	;RP1=0, select bank0
  1007  0687  1186               	bcf	(6),3	;volatile
  1008                           	line	237
  1009                           	
  1010  0688                     l9209:	
  1011                           ;primarymain.c: 237: TRISD = 0;
  1012  0688  1683               	bsf	status, 5	;RP0=1, select bank1
  1013  0689  1303               	bcf	status, 6	;RP1=0, select bank1
  1014  068A  0188               	clrf	(136)^080h	;volatile
  1015                           	line	238
  1016                           	
  1017  068B                     l1551:	
  1018  068B  0008               	return
  1019                           	opt stack 0
  1020                           GLOBAL	__end_of_Initialise
  1021  068C                     	__end_of_Initialise:
  1022 ;; =============== function _Initialise ends ============
  1023                           
  1024                           	signat	_Initialise,88
  1025                           	global	_i2cInit
  1026                           psect	text363,local,class=CODE,delta=2
  1027                           global __ptext363
  1028  05E8                     __ptext363:
  1029                           
  1030 ;; *************** function _i2cInit *****************
  1031 ;; Defined at:
  1032 ;;		line 17 in file "i2cSlave.c"
  1033 ;; Parameters:    Size  Location     Type
  1034 ;;  address         1    wreg     unsigned char 
  1035 ;; Auto vars:     Size  Location     Type
  1036 ;;  address         1    0[BANK0 ] unsigned char 
  1037 ;; Return value:  Size  Location     Type
  1038 ;;		None               void
  1039 ;; Registers used:
  1040 ;;		wreg
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1046 ;;      Params:         0       0       0       0       0       0
  1047 ;;      Locals:         0       1       0       0       0       0
  1048 ;;      Temps:          0       0       0       0       0       0
  1049 ;;      Totals:         0       1       0       0       0       0
  1050 ;;Total ram usage:        1 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    3
  1053 ;; This function calls:
  1054 ;;		Nothing
  1055 ;; This function is called by:
  1056 ;;		_Initialise
  1057 ;; This function uses a non-reentrant model
  1058 ;;
  1059                           psect	text363
  1060                           	file	"i2cSlave.c"
  1061                           	line	17
  1062                           	global	__size_of_i2cInit
  1063  001C                     	__size_of_i2cInit	equ	__end_of_i2cInit-_i2cInit
  1064                           	
  1065  05E8                     _i2cInit:	
  1066                           	opt	stack 3
  1067                           ; Regs used in _i2cInit: [wreg]
  1068                           ;i2cInit@address stored from wreg
  1069                           	line	19
  1070  05E8  1283               	bcf	status, 5	;RP0=0, select bank0
  1071  05E9  1303               	bcf	status, 6	;RP1=0, select bank0
  1072  05EA  00A0               	movwf	(i2cInit@address)
  1073                           	
  1074  05EB                     l9095:	
  1075                           ;i2cSlave.c: 19: TRISC6 = 1;
  1076  05EB  1683               	bsf	status, 5	;RP0=1, select bank1
  1077  05EC  1303               	bcf	status, 6	;RP1=0, select bank1
  1078  05ED  1707               	bsf	(1086/8)^080h,(1086)&7
  1079                           	line	20
  1080                           ;i2cSlave.c: 20: TRISC7 = 1;
  1081  05EE  1787               	bsf	(1087/8)^080h,(1087)&7
  1082                           	line	21
  1083                           ;i2cSlave.c: 21: SSPEN = 1;
  1084  05EF  1283               	bcf	status, 5	;RP0=0, select bank0
  1085  05F0  1303               	bcf	status, 6	;RP1=0, select bank0
  1086  05F1  1694               	bsf	(165/8),(165)&7
  1087                           	line	22
  1088                           ;i2cSlave.c: 22: CKE = 0;
  1089  05F2  1683               	bsf	status, 5	;RP0=1, select bank1
  1090  05F3  1303               	bcf	status, 6	;RP1=0, select bank1
  1091  05F4  1314               	bcf	(1190/8)^080h,(1190)&7
  1092                           	line	23
  1093                           ;i2cSlave.c: 23: SMP = 0;
  1094  05F5  1394               	bcf	(1191/8)^080h,(1191)&7
  1095                           	line	24
  1096                           ;i2cSlave.c: 24: CKP = 1;
  1097  05F6  1283               	bcf	status, 5	;RP0=0, select bank0
  1098  05F7  1303               	bcf	status, 6	;RP1=0, select bank0
  1099  05F8  1614               	bsf	(164/8),(164)&7
  1100                           	line	26
  1101                           ;i2cSlave.c: 26: SSPM0 = 0;
  1102  05F9  1014               	bcf	(160/8),(160)&7
  1103                           	line	27
  1104                           ;i2cSlave.c: 27: SSPM1 = 1;
  1105  05FA  1494               	bsf	(161/8),(161)&7
  1106                           	line	28
  1107                           ;i2cSlave.c: 28: SSPM2 = 1;
  1108  05FB  1514               	bsf	(162/8),(162)&7
  1109                           	line	29
  1110                           ;i2cSlave.c: 29: SSPM3 = 0;
  1111  05FC  1194               	bcf	(163/8),(163)&7
  1112                           	line	33
  1113                           	
  1114  05FD                     l9097:	
  1115                           ;i2cSlave.c: 33: SSPADD = address;
  1116  05FD  0820               	movf	(i2cInit@address),w
  1117  05FE  1683               	bsf	status, 5	;RP0=1, select bank1
  1118  05FF  1303               	bcf	status, 6	;RP1=0, select bank1
  1119  0600  0093               	movwf	(147)^080h	;volatile
  1120                           	line	39
  1121                           	
  1122  0601                     l9099:	
  1123                           ;i2cSlave.c: 39: i2cBufferVal = 0;
  1124  0601  01FB               	clrf	(_i2cBufferVal)
  1125                           	line	40
  1126                           	
  1127  0602                     l9101:	
  1128                           ;i2cSlave.c: 40: i2cWriteInt = 0;
  1129  0602  01FD               	clrf	(_i2cWriteInt)
  1130                           	line	41
  1131                           	
  1132  0603                     l6104:	
  1133  0603  0008               	return
  1134                           	opt stack 0
  1135                           GLOBAL	__end_of_i2cInit
  1136  0604                     	__end_of_i2cInit:
  1137 ;; =============== function _i2cInit ends ============
  1138                           
  1139                           	signat	_i2cInit,4216
  1140                           	global	_BeginEncoder
  1141                           psect	text364,local,class=CODE,delta=2
  1142                           global __ptext364
  1143  058C                     __ptext364:
  1144                           
  1145 ;; *************** function _BeginEncoder *****************
  1146 ;; Defined at:
  1147 ;;		line 22 in file "enclib.c"
  1148 ;; Parameters:    Size  Location     Type
  1149 ;;		None
  1150 ;; Auto vars:     Size  Location     Type
  1151 ;;		None
  1152 ;; Return value:  Size  Location     Type
  1153 ;;		None               void
  1154 ;; Registers used:
  1155 ;;		wreg
  1156 ;; Tracked objects:
  1157 ;;		On entry : 0/0
  1158 ;;		On exit  : 0/0
  1159 ;;		Unchanged: 0/0
  1160 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1161 ;;      Params:         0       0       0       0       0       0
  1162 ;;      Locals:         0       0       0       0       0       0
  1163 ;;      Temps:          0       0       0       0       0       0
  1164 ;;      Totals:         0       0       0       0       0       0
  1165 ;;Total ram usage:        0 bytes
  1166 ;; Hardware stack levels used:    1
  1167 ;; Hardware stack levels required when called:    3
  1168 ;; This function calls:
  1169 ;;		Nothing
  1170 ;; This function is called by:
  1171 ;;		_Initialise
  1172 ;; This function uses a non-reentrant model
  1173 ;;
  1174                           psect	text364
  1175                           	file	"enclib.c"
  1176                           	line	22
  1177                           	global	__size_of_BeginEncoder
  1178  000B                     	__size_of_BeginEncoder	equ	__end_of_BeginEncoder-_BeginEncoder
  1179                           	
  1180  058C                     _BeginEncoder:	
  1181                           	opt	stack 3
  1182                           ; Regs used in _BeginEncoder: [wreg]
  1183                           	line	28
  1184                           	
  1185  058C                     l9093:	
  1186                           ;enclib.c: 28: OPTION_REG = 0b10010111;
  1187  058C  3097               	movlw	(097h)
  1188  058D  1683               	bsf	status, 5	;RP0=1, select bank1
  1189  058E  1303               	bcf	status, 6	;RP1=0, select bank1
  1190  058F  0081               	movwf	(129)^080h	;volatile
  1191                           	line	34
  1192                           ;enclib.c: 34: CMCON1 = 0x02;
  1193  0590  3002               	movlw	(02h)
  1194  0591  0097               	movwf	(151)^080h	;volatile
  1195                           	line	35
  1196                           ;enclib.c: 35: T1CON = 0b00000111;
  1197  0592  3007               	movlw	(07h)
  1198  0593  1283               	bcf	status, 5	;RP0=0, select bank0
  1199  0594  1303               	bcf	status, 6	;RP1=0, select bank0
  1200  0595  0090               	movwf	(16)	;volatile
  1201                           	line	36
  1202                           	
  1203  0596                     l4594:	
  1204  0596  0008               	return
  1205                           	opt stack 0
  1206                           GLOBAL	__end_of_BeginEncoder
  1207  0597                     	__end_of_BeginEncoder:
  1208 ;; =============== function _BeginEncoder ends ============
  1209                           
  1210                           	signat	_BeginEncoder,88
  1211                           	global	_BeginPWM
  1212                           psect	text365,local,class=CODE,delta=2
  1213                           global __ptext365
  1214  0621                     __ptext365:
  1215                           
  1216 ;; *************** function _BeginPWM *****************
  1217 ;; Defined at:
  1218 ;;		line 41 in file "pwmlib.c"
  1219 ;; Parameters:    Size  Location     Type
  1220 ;;		None
  1221 ;; Auto vars:     Size  Location     Type
  1222 ;;		None
  1223 ;; Return value:  Size  Location     Type
  1224 ;;		None               void
  1225 ;; Registers used:
  1226 ;;		wreg, status,2
  1227 ;; Tracked objects:
  1228 ;;		On entry : 0/0
  1229 ;;		On exit  : 0/0
  1230 ;;		Unchanged: 0/0
  1231 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1232 ;;      Params:         0       0       0       0       0       0
  1233 ;;      Locals:         0       0       0       0       0       0
  1234 ;;      Temps:          0       0       0       0       0       0
  1235 ;;      Totals:         0       0       0       0       0       0
  1236 ;;Total ram usage:        0 bytes
  1237 ;; Hardware stack levels used:    1
  1238 ;; Hardware stack levels required when called:    3
  1239 ;; This function calls:
  1240 ;;		Nothing
  1241 ;; This function is called by:
  1242 ;;		_Initialise
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           psect	text365
  1246                           	file	"pwmlib.c"
  1247                           	line	41
  1248                           	global	__size_of_BeginPWM
  1249  001E                     	__size_of_BeginPWM	equ	__end_of_BeginPWM-_BeginPWM
  1250                           	
  1251  0621                     _BeginPWM:	
  1252                           	opt	stack 3
  1253                           ; Regs used in _BeginPWM: [wreg+status,2]
  1254                           	line	44
  1255                           	
  1256  0621                     l9075:	
  1257                           ;pwmlib.c: 44: TRISDbits.TRISD2 = 1;
  1258  0621  1683               	bsf	status, 5	;RP0=1, select bank1
  1259  0622  1303               	bcf	status, 6	;RP1=0, select bank1
  1260  0623  1508               	bsf	(136)^080h,2	;volatile
  1261                           	line	47
  1262                           ;pwmlib.c: 47: PIE1bits.TMR2IE = 0;
  1263  0624  108C               	bcf	(140)^080h,1	;volatile
  1264                           	line	51
  1265                           	
  1266  0625                     l9077:	
  1267                           ;pwmlib.c: 51: PR2 = 0xFF;
  1268  0625  30FF               	movlw	(0FFh)
  1269  0626  0092               	movwf	(146)^080h	;volatile
  1270                           	line	55
  1271                           ;pwmlib.c: 55: CCP2CON = 0b00001100;
  1272  0627  300C               	movlw	(0Ch)
  1273  0628  1283               	bcf	status, 5	;RP0=0, select bank0
  1274  0629  1303               	bcf	status, 6	;RP1=0, select bank0
  1275  062A  009D               	movwf	(29)	;volatile
  1276                           	line	59
  1277                           	
  1278  062B                     l9079:	
  1279                           ;pwmlib.c: 59: CCPR2L = 0;
  1280  062B  019B               	clrf	(27)	;volatile
  1281                           	line	60
  1282                           	
  1283  062C                     l9081:	
  1284                           ;pwmlib.c: 60: CCP2CONbits.CCP2X = 0;
  1285  062C  129D               	bcf	(29),5	;volatile
  1286                           	line	61
  1287                           	
  1288  062D                     l9083:	
  1289                           ;pwmlib.c: 61: CCP2CONbits.CCP2Y = 0;
  1290  062D  121D               	bcf	(29),4	;volatile
  1291                           	line	66
  1292                           	
  1293  062E                     l9085:	
  1294                           ;pwmlib.c: 66: PIR1bits.TMR2IF = 0;
  1295  062E  108C               	bcf	(12),1	;volatile
  1296                           	line	70
  1297                           	
  1298  062F                     l9087:	
  1299                           ;pwmlib.c: 70: T2CON = 0b00000100;
  1300  062F  3004               	movlw	(04h)
  1301  0630  0092               	movwf	(18)	;volatile
  1302  0631  2E32               	goto	l9089
  1303                           	line	75
  1304                           ;pwmlib.c: 75: while(1)
  1305                           	
  1306  0632                     l3088:	
  1307                           	line	77
  1308                           	
  1309  0632                     l9089:	
  1310                           ;pwmlib.c: 76: {
  1311                           ;pwmlib.c: 77: if(PIR1bits.TMR2IF == 1)
  1312  0632  1283               	bcf	status, 5	;RP0=0, select bank0
  1313  0633  1C8C               	btfss	(12),1	;volatile
  1314  0634  2E36               	goto	u2511
  1315  0635  2E37               	goto	u2510
  1316  0636                     u2511:
  1317  0636  2E32               	goto	l9089
  1318  0637                     u2510:
  1319                           	line	79
  1320                           	
  1321  0637                     l9091:	
  1322                           ;pwmlib.c: 78: {
  1323                           ;pwmlib.c: 79: TMR2IF = 0;
  1324  0637  108C               	bcf	(97/8),(97)&7
  1325                           	line	80
  1326                           ;pwmlib.c: 80: TRISDbits.TRISD2 = 0;
  1327  0638  1683               	bsf	status, 5	;RP0=1, select bank1
  1328  0639  1303               	bcf	status, 6	;RP1=0, select bank1
  1329  063A  1108               	bcf	(136)^080h,2	;volatile
  1330                           	line	81
  1331                           ;pwmlib.c: 81: break;
  1332  063B  2E3E               	goto	l3092
  1333                           	line	82
  1334                           	
  1335  063C                     l3089:	
  1336  063C  2E32               	goto	l9089
  1337                           	line	83
  1338                           	
  1339  063D                     l3091:	
  1340                           	line	75
  1341  063D  2E32               	goto	l9089
  1342                           	
  1343  063E                     l3090:	
  1344                           	line	84
  1345                           	
  1346  063E                     l3092:	
  1347  063E  0008               	return
  1348                           	opt stack 0
  1349                           GLOBAL	__end_of_BeginPWM
  1350  063F                     	__end_of_BeginPWM:
  1351 ;; =============== function _BeginPWM ends ============
  1352                           
  1353                           	signat	_BeginPWM,88
  1354                           	global	_UpdateData
  1355                           psect	text366,local,class=CODE,delta=2
  1356                           global __ptext366
  1357  05D1                     __ptext366:
  1358                           
  1359 ;; *************** function _UpdateData *****************
  1360 ;; Defined at:
  1361 ;;		line 279 in file "primarymain.c"
  1362 ;; Parameters:    Size  Location     Type
  1363 ;;  t               2    0[BANK0 ] int 
  1364 ;;  c               2    2[BANK0 ] int 
  1365 ;; Auto vars:     Size  Location     Type
  1366 ;;		None
  1367 ;; Return value:  Size  Location     Type
  1368 ;;		None               void
  1369 ;; Registers used:
  1370 ;;		wreg, status,2, status,0
  1371 ;; Tracked objects:
  1372 ;;		On entry : 0/0
  1373 ;;		On exit  : 0/0
  1374 ;;		Unchanged: 0/0
  1375 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1376 ;;      Params:         0       4       0       0       0       0
  1377 ;;      Locals:         0       0       0       0       0       0
  1378 ;;      Temps:          0       0       0       0       0       0
  1379 ;;      Totals:         0       4       0       0       0       0
  1380 ;;Total ram usage:        4 bytes
  1381 ;; Hardware stack levels used:    1
  1382 ;; Hardware stack levels required when called:    3
  1383 ;; This function calls:
  1384 ;;		Nothing
  1385 ;; This function is called by:
  1386 ;;		_main
  1387 ;; This function uses a non-reentrant model
  1388 ;;
  1389                           psect	text366
  1390                           	file	"primarymain.c"
  1391                           	line	279
  1392                           	global	__size_of_UpdateData
  1393  0017                     	__size_of_UpdateData	equ	__end_of_UpdateData-_UpdateData
  1394                           	
  1395  05D1                     _UpdateData:	
  1396                           	opt	stack 4
  1397                           ; Regs used in _UpdateData: [wreg+status,2+status,0]
  1398                           	line	283
  1399                           	
  1400  05D1                     l9069:	
  1401                           ;primarymain.c: 283: if (DIR_READ == 0)
  1402  05D1  1283               	bcf	status, 5	;RP0=0, select bank0
  1403  05D2  1303               	bcf	status, 6	;RP1=0, select bank0
  1404  05D3  083E               	movf	((_DIR_READ+1)),w
  1405  05D4  043D               	iorwf	((_DIR_READ)),w
  1406  05D5  1D03               	skipz
  1407  05D6  2DD8               	goto	u2501
  1408  05D7  2DD9               	goto	u2500
  1409  05D8                     u2501:
  1410  05D8  2DE0               	goto	l9073
  1411  05D9                     u2500:
  1412                           	line	286
  1413                           	
  1414  05D9                     l9071:	
  1415                           ;primarymain.c: 284: {
  1416                           ;primarymain.c: 286: COUNTS += c;
  1417  05D9  0822               	movf	(UpdateData@c),w
  1418  05DA  07B9               	addwf	(_COUNTS),f
  1419  05DB  1803               	skipnc
  1420  05DC  0ABA               	incf	(_COUNTS+1),f
  1421  05DD  0823               	movf	(UpdateData@c+1),w
  1422  05DE  07BA               	addwf	(_COUNTS+1),f
  1423                           	line	287
  1424                           ;primarymain.c: 287: } else
  1425  05DF  2DE7               	goto	l1569
  1426                           	
  1427  05E0                     l1567:	
  1428                           	line	290
  1429                           	
  1430  05E0                     l9073:	
  1431                           ;primarymain.c: 288: {
  1432                           ;primarymain.c: 290: COUNTS -= c;
  1433  05E0  0822               	movf	(UpdateData@c),w
  1434  05E1  02B9               	subwf	(_COUNTS),f
  1435  05E2  0823               	movf	(UpdateData@c+1),w
  1436  05E3  1C03               	skipc
  1437  05E4  03BA               	decf	(_COUNTS+1),f
  1438  05E5  02BA               	subwf	(_COUNTS+1),f
  1439  05E6  2DE7               	goto	l1569
  1440                           	line	291
  1441                           	
  1442  05E7                     l1568:	
  1443                           	line	292
  1444                           	
  1445  05E7                     l1569:	
  1446  05E7  0008               	return
  1447                           	opt stack 0
  1448                           GLOBAL	__end_of_UpdateData
  1449  05E8                     	__end_of_UpdateData:
  1450 ;; =============== function _UpdateData ends ============
  1451                           
  1452                           	signat	_UpdateData,8312
  1453                           	global	_EncUpdate
  1454                           psect	text367,local,class=CODE,delta=2
  1455                           global __ptext367
  1456  0604                     __ptext367:
  1457                           
  1458 ;; *************** function _EncUpdate *****************
  1459 ;; Defined at:
  1460 ;;		line 42 in file "enclib.c"
  1461 ;; Parameters:    Size  Location     Type
  1462 ;;  t0              2    0[BANK0 ] PTR int 
  1463 ;;		 -> RAM(512), 
  1464 ;;  t1              2    2[BANK0 ] PTR int 
  1465 ;;		 -> RAM(512), 
  1466 ;; Auto vars:     Size  Location     Type
  1467 ;;		None
  1468 ;; Return value:  Size  Location     Type
  1469 ;;		None               void
  1470 ;; Registers used:
  1471 ;;		wreg, fsr0l, fsr0h, status,2
  1472 ;; Tracked objects:
  1473 ;;		On entry : 0/0
  1474 ;;		On exit  : 0/0
  1475 ;;		Unchanged: 0/0
  1476 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1477 ;;      Params:         0       4       0       0       0       0
  1478 ;;      Locals:         0       0       0       0       0       0
  1479 ;;      Temps:          0       2       0       0       0       0
  1480 ;;      Totals:         0       6       0       0       0       0
  1481 ;;Total ram usage:        6 bytes
  1482 ;; Hardware stack levels used:    1
  1483 ;; Hardware stack levels required when called:    3
  1484 ;; This function calls:
  1485 ;;		Nothing
  1486 ;; This function is called by:
  1487 ;;		_main
  1488 ;; This function uses a non-reentrant model
  1489 ;;
  1490                           psect	text367
  1491                           	file	"enclib.c"
  1492                           	line	42
  1493                           	global	__size_of_EncUpdate
  1494  001D                     	__size_of_EncUpdate	equ	__end_of_EncUpdate-_EncUpdate
  1495                           	
  1496  0604                     _EncUpdate:	
  1497                           	opt	stack 4
  1498                           ; Regs used in _EncUpdate: [wreg-fsr0h+status,2]
  1499                           	line	43
  1500                           	
  1501  0604                     l9063:	
  1502                           ;enclib.c: 43: *t1 = TMR1;
  1503  0604  1283               	bcf	status, 5	;RP0=0, select bank0
  1504  0605  1303               	bcf	status, 6	;RP1=0, select bank0
  1505  0606  0822               	movf	(EncUpdate@t1),w
  1506  0607  0084               	movwf	fsr0
  1507  0608  1783               	bsf	status,7
  1508  0609  1C23               	btfss	(EncUpdate@t1+1),0
  1509  060A  1383               	bcf	status,7
  1510  060B  080E               	movf	(14),w	;volatile
  1511  060C  0080               	movwf	indf
  1512  060D  0A84               	incf	fsr0,f
  1513  060E  080F               	movf	(14+1),w	;volatile
  1514  060F  0080               	movwf	indf
  1515                           	line	44
  1516                           ;enclib.c: 44: *t0 = TMR0;
  1517  0610  0801               	movf	(1),w	;volatile
  1518  0611  00A4               	movwf	(??_EncUpdate+0)+0
  1519  0612  01A5               	clrf	(??_EncUpdate+0)+0+1
  1520  0613  0820               	movf	(EncUpdate@t0),w
  1521  0614  0084               	movwf	fsr0
  1522  0615  1783               	bsf	status,7
  1523  0616  1C21               	btfss	(EncUpdate@t0+1),0
  1524  0617  1383               	bcf	status,7
  1525  0618  0824               	movf	0+(??_EncUpdate+0)+0,w
  1526  0619  0080               	movwf	indf
  1527  061A  0A84               	incf	fsr0,f
  1528  061B  0825               	movf	1+(??_EncUpdate+0)+0,w
  1529  061C  0080               	movwf	indf
  1530                           	line	45
  1531                           	
  1532  061D                     l9065:	
  1533                           ;enclib.c: 45: TMR1 = 0;
  1534  061D  018E               	clrf	(14)	;volatile
  1535  061E  018F               	clrf	(14+1)	;volatile
  1536                           	line	46
  1537                           	
  1538  061F                     l9067:	
  1539                           ;enclib.c: 46: TMR0 = 0;
  1540  061F  0181               	clrf	(1)	;volatile
  1541                           	line	47
  1542                           	
  1543  0620                     l4597:	
  1544  0620  0008               	return
  1545                           	opt stack 0
  1546                           GLOBAL	__end_of_EncUpdate
  1547  0621                     	__end_of_EncUpdate:
  1548 ;; =============== function _EncUpdate ends ============
  1549                           
  1550                           	signat	_EncUpdate,8312
  1551                           	global	_setDirection
  1552                           psect	text368,local,class=CODE,delta=2
  1553                           global __ptext368
  1554  05BA                     __ptext368:
  1555                           
  1556 ;; *************** function _setDirection *****************
  1557 ;; Defined at:
  1558 ;;		line 297 in file "primarymain.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  dir             2    0[BANK0 ] int 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;		None
  1563 ;; Return value:  Size  Location     Type
  1564 ;;		None               void
  1565 ;; Registers used:
  1566 ;;		wreg, status,2, status,0
  1567 ;; Tracked objects:
  1568 ;;		On entry : 0/0
  1569 ;;		On exit  : 0/0
  1570 ;;		Unchanged: 0/0
  1571 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1572 ;;      Params:         0       2       0       0       0       0
  1573 ;;      Locals:         0       0       0       0       0       0
  1574 ;;      Temps:          0       0       0       0       0       0
  1575 ;;      Totals:         0       2       0       0       0       0
  1576 ;;Total ram usage:        2 bytes
  1577 ;; Hardware stack levels used:    1
  1578 ;; Hardware stack levels required when called:    3
  1579 ;; This function calls:
  1580 ;;		Nothing
  1581 ;; This function is called by:
  1582 ;;		_main
  1583 ;; This function uses a non-reentrant model
  1584 ;;
  1585                           psect	text368
  1586                           	file	"primarymain.c"
  1587                           	line	297
  1588                           	global	__size_of_setDirection
  1589  0017                     	__size_of_setDirection	equ	__end_of_setDirection-_setDirection
  1590                           	
  1591  05BA                     _setDirection:	
  1592                           	opt	stack 4
  1593                           ; Regs used in _setDirection: [wreg+status,2+status,0]
  1594                           	line	298
  1595                           	
  1596  05BA                     l9055:	
  1597                           ;primarymain.c: 298: if (dir == 0)
  1598  05BA  1283               	bcf	status, 5	;RP0=0, select bank0
  1599  05BB  1303               	bcf	status, 6	;RP1=0, select bank0
  1600  05BC  0821               	movf	((setDirection@dir+1)),w
  1601  05BD  0420               	iorwf	((setDirection@dir)),w
  1602  05BE  1D03               	skipz
  1603  05BF  2DC1               	goto	u2481
  1604  05C0  2DC2               	goto	u2480
  1605  05C1                     u2481:
  1606  05C1  2DC4               	goto	l9059
  1607  05C2                     u2480:
  1608                           	line	299
  1609                           	
  1610  05C2                     l9057:	
  1611                           ;primarymain.c: 299: PORTBbits.RB3 = 0;
  1612  05C2  1186               	bcf	(6),3	;volatile
  1613  05C3  2DD0               	goto	l1576
  1614                           	line	300
  1615                           	
  1616  05C4                     l1572:	
  1617                           	
  1618  05C4                     l9059:	
  1619                           ;primarymain.c: 300: else if (dir == 1)
  1620  05C4  3001               	movlw	01h
  1621  05C5  0620               	xorwf	(setDirection@dir),w
  1622  05C6  0421               	iorwf	(setDirection@dir+1),w
  1623  05C7  1D03               	skipz
  1624  05C8  2DCA               	goto	u2491
  1625  05C9  2DCB               	goto	u2490
  1626  05CA                     u2491:
  1627  05CA  2DCD               	goto	l1574
  1628  05CB                     u2490:
  1629                           	line	301
  1630                           	
  1631  05CB                     l9061:	
  1632                           ;primarymain.c: 301: PORTBbits.RB3 = !0;
  1633  05CB  1586               	bsf	(6),3	;volatile
  1634  05CC  2DD0               	goto	l1576
  1635                           	line	302
  1636                           	
  1637  05CD                     l1574:	
  1638                           	line	303
  1639                           ;primarymain.c: 302: else
  1640                           ;primarymain.c: 303: PORTBbits.RB3 = 0;
  1641  05CD  1186               	bcf	(6),3	;volatile
  1642  05CE  2DD0               	goto	l1576
  1643                           	
  1644  05CF                     l1575:	
  1645  05CF  2DD0               	goto	l1576
  1646                           	
  1647  05D0                     l1573:	
  1648                           	line	304
  1649                           	
  1650  05D0                     l1576:	
  1651  05D0  0008               	return
  1652                           	opt stack 0
  1653                           GLOBAL	__end_of_setDirection
  1654  05D1                     	__end_of_setDirection:
  1655 ;; =============== function _setDirection ends ============
  1656                           
  1657                           	signat	_setDirection,4216
  1658                           	global	_SetPulse
  1659                           psect	text369,local,class=CODE,delta=2
  1660                           global __ptext369
  1661  063F                     __ptext369:
  1662                           
  1663 ;; *************** function _SetPulse *****************
  1664 ;; Defined at:
  1665 ;;		line 105 in file "pwmlib.c"
  1666 ;; Parameters:    Size  Location     Type
  1667 ;;  length          2    0[BANK0 ] int 
  1668 ;; Auto vars:     Size  Location     Type
  1669 ;;  temp            2    2[BANK0 ] int 
  1670 ;; Return value:  Size  Location     Type
  1671 ;;		None               void
  1672 ;; Registers used:
  1673 ;;		wreg, status,2, status,0, btemp+1
  1674 ;; Tracked objects:
  1675 ;;		On entry : 0/0
  1676 ;;		On exit  : 0/0
  1677 ;;		Unchanged: 0/0
  1678 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1679 ;;      Params:         0       2       0       0       0       0
  1680 ;;      Locals:         0       2       0       0       0       0
  1681 ;;      Temps:          0       0       0       0       0       0
  1682 ;;      Totals:         0       4       0       0       0       0
  1683 ;;Total ram usage:        4 bytes
  1684 ;; Hardware stack levels used:    1
  1685 ;; Hardware stack levels required when called:    3
  1686 ;; This function calls:
  1687 ;;		Nothing
  1688 ;; This function is called by:
  1689 ;;		_main
  1690 ;;		_CalcPulse
  1691 ;; This function uses a non-reentrant model
  1692 ;;
  1693                           psect	text369
  1694                           	file	"pwmlib.c"
  1695                           	line	105
  1696                           	global	__size_of_SetPulse
  1697  0020                     	__size_of_SetPulse	equ	__end_of_SetPulse-_SetPulse
  1698                           	
  1699  063F                     _SetPulse:	
  1700                           	opt	stack 4
  1701                           ; Regs used in _SetPulse: [wreg+status,2+status,0+btemp+1]
  1702                           	line	106
  1703                           	
  1704  063F                     l9049:	
  1705                           ;pwmlib.c: 106: int temp = length;
  1706  063F  1283               	bcf	status, 5	;RP0=0, select bank0
  1707  0640  1303               	bcf	status, 6	;RP1=0, select bank0
  1708  0641  0821               	movf	(SetPulse@length+1),w
  1709  0642  01A3               	clrf	(SetPulse@temp+1)
  1710  0643  07A3               	addwf	(SetPulse@temp+1)
  1711  0644  0820               	movf	(SetPulse@length),w
  1712  0645  01A2               	clrf	(SetPulse@temp)
  1713  0646  07A2               	addwf	(SetPulse@temp)
  1714                           
  1715                           	line	107
  1716                           	
  1717  0647                     l9051:	
  1718                           ;pwmlib.c: 107: if (temp > 255)
  1719  0647  0823               	movf	(SetPulse@temp+1),w
  1720  0648  3A80               	xorlw	80h
  1721  0649  00FF               	movwf	btemp+1
  1722  064A  3081               	movlw	(high(0100h))^80h
  1723  064B  027F               	subwf	btemp+1,w
  1724  064C  1D03               	skipz
  1725  064D  2E50               	goto	u2475
  1726  064E  3000               	movlw	low(0100h)
  1727  064F  0222               	subwf	(SetPulse@temp),w
  1728  0650                     u2475:
  1729                           
  1730  0650  1C03               	skipc
  1731  0651  2E53               	goto	u2471
  1732  0652  2E54               	goto	u2470
  1733  0653                     u2471:
  1734  0653  2E5A               	goto	l3099
  1735  0654                     u2470:
  1736                           	line	108
  1737                           	
  1738  0654                     l9053:	
  1739                           ;pwmlib.c: 108: temp = 255;
  1740  0654  30FF               	movlw	low(0FFh)
  1741  0655  1283               	bcf	status, 5	;RP0=0, select bank0
  1742  0656  1303               	bcf	status, 6	;RP1=0, select bank0
  1743  0657  00A2               	movwf	(SetPulse@temp)
  1744  0658  3000               	movlw	high(0FFh)
  1745  0659  00A3               	movwf	((SetPulse@temp))+1
  1746                           	
  1747  065A                     l3099:	
  1748                           	line	109
  1749                           ;pwmlib.c: 109: CCPR2L = temp;
  1750  065A  1283               	bcf	status, 5	;RP0=0, select bank0
  1751  065B  1303               	bcf	status, 6	;RP1=0, select bank0
  1752  065C  0822               	movf	(SetPulse@temp),w
  1753  065D  009B               	movwf	(27)	;volatile
  1754                           	line	113
  1755                           	
  1756  065E                     l3100:	
  1757  065E  0008               	return
  1758                           	opt stack 0
  1759                           GLOBAL	__end_of_SetPulse
  1760  065F                     	__end_of_SetPulse:
  1761 ;; =============== function _SetPulse ends ============
  1762                           
  1763                           	signat	_SetPulse,4216
  1764                           	global	_isr
  1765                           psect	text370,local,class=CODE,delta=2
  1766                           global __ptext370
  1767  068C                     __ptext370:
  1768                           
  1769 ;; *************** function _isr *****************
  1770 ;; Defined at:
  1771 ;;		line 243 in file "primarymain.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;		None               void
  1778 ;; Registers used:
  1779 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1785 ;;      Params:         0       0       0       0       0       0
  1786 ;;      Locals:         0       0       0       0       0       0
  1787 ;;      Temps:          6       0       0       0       0       0
  1788 ;;      Totals:         6       0       0       0       0       0
  1789 ;;Total ram usage:        6 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    2
  1792 ;; This function calls:
  1793 ;;		_i2cIsrHandler
  1794 ;; This function is called by:
  1795 ;;		Interrupt level 1
  1796 ;; This function uses a non-reentrant model
  1797 ;;
  1798                           psect	text370
  1799                           	file	"primarymain.c"
  1800                           	line	243
  1801                           	global	__size_of_isr
  1802  0052                     	__size_of_isr	equ	__end_of_isr-_isr
  1803                           	
  1804  068C                     _isr:	
  1805                           	opt	stack 3
  1806                           ; Regs used in _isr: [allreg]
  1807                           psect	intentry,class=CODE,delta=2
  1808                           global __pintentry
  1809  0004                     __pintentry:
  1810                           global interrupt_function
  1811  0004                     interrupt_function:
  1812                           	global saved_w
  1813  007E                     	saved_w	set	btemp+0
  1814  0004  00FE               	movwf	saved_w
  1815  0005  0E03               	swapf	status,w
  1816  0006  00F7               	movwf	(??_isr+2)
  1817  0007  0804               	movf	fsr0,w
  1818  0008  00F8               	movwf	(??_isr+3)
  1819  0009  080A               	movf	pclath,w
  1820  000A  00F9               	movwf	(??_isr+4)
  1821  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1822  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1823  000D  087F               	movf	btemp+1,w
  1824  000E  00FA               	movwf	(??_isr+5)
  1825  000F  120A  118A  2E8C   	ljmp	_isr
  1826                           psect	text370
  1827                           	line	244
  1828                           	
  1829  068C                     i1l9103:	
  1830                           ;primarymain.c: 244: if (SSPIF == 1)
  1831  068C  1D8C               	btfss	(99/8),(99)&7
  1832  068D  2E8F               	goto	u252_21
  1833  068E  2E90               	goto	u252_20
  1834  068F                     u252_21:
  1835  068F  2E96               	goto	i1l1554
  1836  0690                     u252_20:
  1837                           	line	248
  1838                           	
  1839  0690                     i1l9105:	
  1840                           ;primarymain.c: 245: {
  1841                           ;primarymain.c: 248: i2cIsrHandler();
  1842  0690  120A  118A  26DE   	fcall	_i2cIsrHandler
              120A  118A         
  1843                           	line	249
  1844                           ;primarymain.c: 249: } else if (T0IF == 1)
  1845  0695  2ED1               	goto	i1l1564
  1846                           	
  1847  0696                     i1l1554:	
  1848  0696  1D0B               	btfss	(90/8),(90)&7
  1849  0697  2E99               	goto	u253_21
  1850  0698  2E9A               	goto	u253_20
  1851  0699                     u253_21:
  1852  0699  2E9C               	goto	i1l1556
  1853  069A                     u253_20:
  1854                           	line	252
  1855                           	
  1856  069A                     i1l9107:	
  1857                           ;primarymain.c: 250: {
  1858                           ;primarymain.c: 252: T0IF = 0;
  1859  069A  110B               	bcf	(90/8),(90)&7
  1860                           	line	253
  1861                           ;primarymain.c: 253: } else if (TMR1IF == 1)
  1862  069B  2ED1               	goto	i1l1564
  1863                           	
  1864  069C                     i1l1556:	
  1865  069C  1C0C               	btfss	(96/8),(96)&7
  1866  069D  2E9F               	goto	u254_21
  1867  069E  2EA0               	goto	u254_20
  1868  069F                     u254_21:
  1869  069F  2EA2               	goto	i1l1558
  1870  06A0                     u254_20:
  1871                           	line	256
  1872                           	
  1873  06A0                     i1l9109:	
  1874                           ;primarymain.c: 256: TMR1IF = 0;
  1875  06A0  100C               	bcf	(96/8),(96)&7
  1876                           	line	257
  1877                           ;primarymain.c: 257: } else if (RBIF == 1)
  1878  06A1  2ED1               	goto	i1l1564
  1879                           	
  1880  06A2                     i1l1558:	
  1881  06A2  1C0B               	btfss	(88/8),(88)&7
  1882  06A3  2EA5               	goto	u255_21
  1883  06A4  2EA6               	goto	u255_20
  1884  06A5                     u255_21:
  1885  06A5  2EC6               	goto	i1l9121
  1886  06A6                     u255_20:
  1887                           	line	259
  1888                           	
  1889  06A6                     i1l9111:	
  1890                           ;primarymain.c: 258: {
  1891                           ;primarymain.c: 259: if (RB5 != DIR_READ)
  1892  06A6  1003               	clrc
  1893  06A7  1A86               	btfsc	(53/8),(53)&7
  1894  06A8  1403               	setc
  1895  06A9  3000               	movlw	0
  1896  06AA  1803               	skipnc
  1897  06AB  3001               	movlw	1
  1898                           
  1899  06AC  00F5               	movwf	(??_isr+0)+0
  1900  06AD  01F6               	clrf	(??_isr+0)+0+1
  1901  06AE  083E               	movf	(_DIR_READ+1),w
  1902  06AF  0676               	xorwf	1+(??_isr+0)+0,w
  1903  06B0  1D03               	skipz
  1904  06B1  2EB4               	goto	u256_25
  1905  06B2  083D               	movf	(_DIR_READ),w
  1906  06B3  0675               	xorwf	0+(??_isr+0)+0,w
  1907  06B4                     u256_25:
  1908                           
  1909  06B4  1903               	skipnz
  1910  06B5  2EB7               	goto	u256_21
  1911  06B6  2EB8               	goto	u256_20
  1912  06B7                     u256_21:
  1913  06B7  2EBC               	goto	i1l9115
  1914  06B8                     u256_20:
  1915                           	line	261
  1916                           	
  1917  06B8                     i1l9113:	
  1918                           ;primarymain.c: 260: {
  1919                           ;primarymain.c: 261: F.DIR = 1;
  1920  06B8  1683               	bsf	status, 5	;RP0=1, select bank1
  1921  06B9  1303               	bcf	status, 6	;RP1=0, select bank1
  1922  06BA  15AA               	bsf	(170)^080h,3
  1923                           	line	262
  1924                           ;primarymain.c: 262: } else
  1925  06BB  2EC4               	goto	i1l9119
  1926                           	
  1927  06BC                     i1l1561:	
  1928                           	line	264
  1929                           	
  1930  06BC                     i1l9115:	
  1931                           ;primarymain.c: 263: {
  1932                           ;primarymain.c: 264: TRISD = 0;
  1933  06BC  1683               	bsf	status, 5	;RP0=1, select bank1
  1934  06BD  1303               	bcf	status, 6	;RP1=0, select bank1
  1935  06BE  0188               	clrf	(136)^080h	;volatile
  1936                           	line	265
  1937                           	
  1938  06BF                     i1l9117:	
  1939                           ;primarymain.c: 265: PORTD = 0xE0;
  1940  06BF  30E0               	movlw	(0E0h)
  1941  06C0  1283               	bcf	status, 5	;RP0=0, select bank0
  1942  06C1  1303               	bcf	status, 6	;RP1=0, select bank0
  1943  06C2  0088               	movwf	(8)	;volatile
  1944  06C3  2EC4               	goto	i1l9119
  1945                           	line	266
  1946                           	
  1947  06C4                     i1l1562:	
  1948                           	line	267
  1949                           	
  1950  06C4                     i1l9119:	
  1951                           ;primarymain.c: 266: }
  1952                           ;primarymain.c: 267: RBIF = 0;
  1953  06C4  100B               	bcf	(88/8),(88)&7
  1954                           	line	268
  1955                           ;primarymain.c: 268: } else
  1956  06C5  2ED1               	goto	i1l1564
  1957                           	
  1958  06C6                     i1l1560:	
  1959                           	line	270
  1960                           	
  1961  06C6                     i1l9121:	
  1962                           ;primarymain.c: 269: {
  1963                           ;primarymain.c: 270: TRISD = 0;
  1964  06C6  1683               	bsf	status, 5	;RP0=1, select bank1
  1965  06C7  1303               	bcf	status, 6	;RP1=0, select bank1
  1966  06C8  0188               	clrf	(136)^080h	;volatile
  1967                           	line	271
  1968                           	
  1969  06C9                     i1l9123:	
  1970                           ;primarymain.c: 271: PORTD = 0xF0;
  1971  06C9  30F0               	movlw	(0F0h)
  1972  06CA  1283               	bcf	status, 5	;RP0=0, select bank0
  1973  06CB  1303               	bcf	status, 6	;RP1=0, select bank0
  1974  06CC  0088               	movwf	(8)	;volatile
  1975  06CD  2ED1               	goto	i1l1564
  1976                           	line	272
  1977                           	
  1978  06CE                     i1l1563:	
  1979  06CE  2ED1               	goto	i1l1564
  1980                           	
  1981  06CF                     i1l1559:	
  1982  06CF  2ED1               	goto	i1l1564
  1983                           	
  1984  06D0                     i1l1557:	
  1985  06D0  2ED1               	goto	i1l1564
  1986                           	
  1987  06D1                     i1l1555:	
  1988                           	line	273
  1989                           	
  1990  06D1                     i1l1564:	
  1991  06D1  087A               	movf	(??_isr+5),w
  1992  06D2  1283               	bcf	status, 5	;RP0=0, select bank0
  1993  06D3  1303               	bcf	status, 6	;RP1=0, select bank0
  1994  06D4  00FF               	movwf	btemp+1
  1995  06D5  0879               	movf	(??_isr+4),w
  1996  06D6  008A               	movwf	pclath
  1997  06D7  0878               	movf	(??_isr+3),w
  1998  06D8  0084               	movwf	fsr0
  1999  06D9  0E77               	swapf	(??_isr+2)^0FFFFFF80h,w
  2000  06DA  0083               	movwf	status
  2001  06DB  0EFE               	swapf	saved_w,f
  2002  06DC  0E7E               	swapf	saved_w,w
  2003  06DD  0009               	retfie
  2004                           	opt stack 0
  2005                           GLOBAL	__end_of_isr
  2006  06DE                     	__end_of_isr:
  2007 ;; =============== function _isr ends ============
  2008                           
  2009                           	signat	_isr,88
  2010                           	global	_i2cIsrHandler
  2011                           psect	text371,local,class=CODE,delta=2
  2012                           global __ptext371
  2013  06DE                     __ptext371:
  2014                           
  2015 ;; *************** function _i2cIsrHandler *****************
  2016 ;; Defined at:
  2017 ;;		line 43 in file "i2cSlave.c"
  2018 ;; Parameters:    Size  Location     Type
  2019 ;;		None
  2020 ;; Auto vars:     Size  Location     Type
  2021 ;;  i               2    2[COMMON] int 
  2022 ;; Return value:  Size  Location     Type
  2023 ;;		None               void
  2024 ;; Registers used:
  2025 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2026 ;; Tracked objects:
  2027 ;;		On entry : 0/0
  2028 ;;		On exit  : 0/0
  2029 ;;		Unchanged: 0/0
  2030 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  2031 ;;      Params:         0       0       0       0       0       0
  2032 ;;      Locals:         2       0       0       0       0       0
  2033 ;;      Temps:          1       0       0       0       0       0
  2034 ;;      Totals:         3       0       0       0       0       0
  2035 ;;Total ram usage:        3 bytes
  2036 ;; Hardware stack levels used:    1
  2037 ;; Hardware stack levels required when called:    1
  2038 ;; This function calls:
  2039 ;;		_i2cSend
  2040 ;;		_i2cDataUpdate
  2041 ;; This function is called by:
  2042 ;;		_isr
  2043 ;; This function uses a non-reentrant model
  2044 ;;
  2045                           psect	text371
  2046                           	file	"i2cSlave.c"
  2047                           	line	43
  2048                           	global	__size_of_i2cIsrHandler
  2049  0087                     	__size_of_i2cIsrHandler	equ	__end_of_i2cIsrHandler-_i2cIsrHandler
  2050                           	
  2051  06DE                     _i2cIsrHandler:	
  2052                           	opt	stack 3
  2053                           ; Regs used in _i2cIsrHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2054                           	line	51
  2055                           	
  2056  06DE                     i1l9125:	
  2057                           ;i2cSlave.c: 51: int i = 0;
  2058  06DE  01F3               	clrf	(i2cIsrHandler@i)
  2059  06DF  01F4               	clrf	(i2cIsrHandler@i+1)
  2060                           	line	52
  2061                           	
  2062  06E0                     i1l9127:	
  2063                           ;i2cSlave.c: 52: i++;
  2064  06E0  3001               	movlw	low(01h)
  2065  06E1  07F3               	addwf	(i2cIsrHandler@i),f
  2066  06E2  1803               	skipnc
  2067  06E3  0AF4               	incf	(i2cIsrHandler@i+1),f
  2068  06E4  3000               	movlw	high(01h)
  2069  06E5  07F4               	addwf	(i2cIsrHandler@i+1),f
  2070                           	line	54
  2071                           ;i2cSlave.c: 54: if ((SSPSTAT & 0b00100100) == 0b00100000){
  2072  06E6  1683               	bsf	status, 5	;RP0=1, select bank1
  2073  06E7  1303               	bcf	status, 6	;RP1=0, select bank1
  2074  06E8  0814               	movf	(148)^080h,w
  2075  06E9  3924               	andlw	024h
  2076  06EA  3A20               	xorlw	020h
  2077  06EB  1D03               	skipz
  2078  06EC  2EEE               	goto	u257_21
  2079  06ED  2EEF               	goto	u257_20
  2080  06EE                     u257_21:
  2081  06EE  2EFE               	goto	i1l9133
  2082  06EF                     u257_20:
  2083                           	line	55
  2084                           	
  2085  06EF                     i1l9129:	
  2086                           ;i2cSlave.c: 55: i2cBuffer[i2cBufferVal] = SSPBUF;
  2087  06EF  1283               	bcf	status, 5	;RP0=0, select bank0
  2088  06F0  1303               	bcf	status, 6	;RP1=0, select bank0
  2089  06F1  0813               	movf	(19),w	;volatile
  2090  06F2  00F2               	movwf	(??_i2cIsrHandler+0)+0
  2091  06F3  087B               	movf	(_i2cBufferVal),w
  2092  06F4  3E36               	addlw	_i2cBuffer&0ffh
  2093  06F5  0084               	movwf	fsr0
  2094  06F6  0872               	movf	(??_i2cIsrHandler+0)+0,w
  2095  06F7  1383               	bcf	status, 7	;select IRP bank0
  2096  06F8  0080               	movwf	indf
  2097                           	line	56
  2098                           	
  2099  06F9                     i1l9131:	
  2100                           ;i2cSlave.c: 56: i2cBufferVal++;
  2101  06F9  3001               	movlw	(01h)
  2102  06FA  00F2               	movwf	(??_i2cIsrHandler+0)+0
  2103  06FB  0872               	movf	(??_i2cIsrHandler+0)+0,w
  2104  06FC  07FB               	addwf	(_i2cBufferVal),f
  2105                           	line	58
  2106                           ;i2cSlave.c: 58: } else if ((SSPSTAT & 0b00100100) == 0b0000000){
  2107  06FD  2F53               	goto	i1l9153
  2108                           	
  2109  06FE                     i1l6107:	
  2110                           	
  2111  06FE                     i1l9133:	
  2112  06FE  1683               	bsf	status, 5	;RP0=1, select bank1
  2113  06FF  1303               	bcf	status, 6	;RP1=0, select bank1
  2114  0700  0814               	movf	(148)^080h,w
  2115  0701  3924               	andlw	024h
  2116  0702  1D03               	btfss	status,2
  2117  0703  2F05               	goto	u258_21
  2118  0704  2F06               	goto	u258_20
  2119  0705                     u258_21:
  2120  0705  2F0A               	goto	i1l9137
  2121  0706                     u258_20:
  2122                           	line	60
  2123                           	
  2124  0706                     i1l9135:	
  2125                           ;i2cSlave.c: 60: SSPBUF = 0;
  2126  0706  1283               	bcf	status, 5	;RP0=0, select bank0
  2127  0707  1303               	bcf	status, 6	;RP1=0, select bank0
  2128  0708  0193               	clrf	(19)	;volatile
  2129                           	line	62
  2130                           ;i2cSlave.c: 62: } else if ((SSPSTAT & 0b00100100) == 0b0000100){
  2131  0709  2F53               	goto	i1l9153
  2132                           	
  2133  070A                     i1l6109:	
  2134                           	
  2135  070A                     i1l9137:	
  2136  070A  1683               	bsf	status, 5	;RP0=1, select bank1
  2137  070B  1303               	bcf	status, 6	;RP1=0, select bank1
  2138  070C  0814               	movf	(148)^080h,w
  2139  070D  3924               	andlw	024h
  2140  070E  3A04               	xorlw	04h
  2141  070F  1D03               	skipz
  2142  0710  2F12               	goto	u259_21
  2143  0711  2F13               	goto	u259_20
  2144  0712                     u259_21:
  2145  0712  2F1E               	goto	i1l9141
  2146  0713                     u259_20:
  2147                           	line	65
  2148                           	
  2149  0713                     i1l9139:	
  2150                           ;i2cSlave.c: 65: i2cSend(i2cSpeed*2);
  2151  0713  1283               	bcf	status, 5	;RP0=0, select bank0
  2152  0714  1303               	bcf	status, 6	;RP1=0, select bank0
  2153  0715  0842               	movf	(_i2cSpeed),w
  2154  0716  00F2               	movwf	(??_i2cIsrHandler+0)+0
  2155  0717  0772               	addwf	(??_i2cIsrHandler+0)+0,w
  2156  0718  120A  118A  2583   	fcall	_i2cSend
              120A  118A         
  2157                           	line	67
  2158                           ;i2cSlave.c: 67: } else if ((SSPSTAT & 0b00001100) == 0b00001100){
  2159  071D  2F53               	goto	i1l9153
  2160                           	
  2161  071E                     i1l6111:	
  2162                           	
  2163  071E                     i1l9141:	
  2164  071E  1683               	bsf	status, 5	;RP0=1, select bank1
  2165  071F  1303               	bcf	status, 6	;RP1=0, select bank1
  2166  0720  0814               	movf	(148)^080h,w
  2167  0721  390C               	andlw	0Ch
  2168  0722  3A0C               	xorlw	0Ch
  2169  0723  1D03               	skipz
  2170  0724  2F26               	goto	u260_21
  2171  0725  2F27               	goto	u260_20
  2172  0726                     u260_21:
  2173  0726  2F53               	goto	i1l9153
  2174  0727                     u260_20:
  2175                           	line	80
  2176                           	
  2177  0727                     i1l9143:	
  2178                           ;i2cSlave.c: 80: i2cRequest = SSPBUF;
  2179  0727  1283               	bcf	status, 5	;RP0=0, select bank0
  2180  0728  1303               	bcf	status, 6	;RP1=0, select bank0
  2181  0729  0813               	movf	(19),w	;volatile
  2182  072A  00F2               	movwf	(??_i2cIsrHandler+0)+0
  2183  072B  0872               	movf	(??_i2cIsrHandler+0)+0,w
  2184  072C  00FC               	movwf	(_i2cRequest)
  2185                           	line	82
  2186                           ;i2cSlave.c: 82: if (i2cRequest == 1){
  2187  072D  087C               	movf	(_i2cRequest),w
  2188  072E  3A01               	xorlw	01h
  2189  072F  1D03               	skipz
  2190  0730  2F32               	goto	u261_21
  2191  0731  2F33               	goto	u261_20
  2192  0732                     u261_21:
  2193  0732  2F3A               	goto	i1l9147
  2194  0733                     u261_20:
  2195                           	line	83
  2196                           	
  2197  0733                     i1l9145:	
  2198                           ;i2cSlave.c: 83: i2cSend(20);
  2199  0733  3014               	movlw	(014h)
  2200  0734  120A  118A  2583   	fcall	_i2cSend
              120A  118A         
  2201                           	line	84
  2202                           ;i2cSlave.c: 84: } else if (i2cRequest == 2){
  2203  0739  2F53               	goto	i1l9153
  2204                           	
  2205  073A                     i1l6114:	
  2206                           	
  2207  073A                     i1l9147:	
  2208  073A  087C               	movf	(_i2cRequest),w
  2209  073B  3A02               	xorlw	02h
  2210  073C  1D03               	skipz
  2211  073D  2F3F               	goto	u262_21
  2212  073E  2F40               	goto	u262_20
  2213  073F                     u262_21:
  2214  073F  2F47               	goto	i1l9151
  2215  0740                     u262_20:
  2216                           	line	85
  2217                           	
  2218  0740                     i1l9149:	
  2219                           ;i2cSlave.c: 85: i2cSend(20);
  2220  0740  3014               	movlw	(014h)
  2221  0741  120A  118A  2583   	fcall	_i2cSend
              120A  118A         
  2222                           	line	86
  2223                           ;i2cSlave.c: 86: }
  2224  0746  2F53               	goto	i1l9153
  2225                           	line	87
  2226                           	
  2227  0747                     i1l6116:	
  2228                           	line	89
  2229                           	
  2230  0747                     i1l9151:	
  2231                           ;i2cSlave.c: 87: else
  2232                           ;i2cSlave.c: 88: {
  2233                           ;i2cSlave.c: 89: i2cSend(20);
  2234  0747  3014               	movlw	(014h)
  2235  0748  120A  118A  2583   	fcall	_i2cSend
              120A  118A         
  2236  074D  2F53               	goto	i1l9153
  2237                           	line	90
  2238                           	
  2239  074E                     i1l6117:	
  2240  074E  2F53               	goto	i1l9153
  2241                           	
  2242  074F                     i1l6115:	
  2243  074F  2F53               	goto	i1l9153
  2244                           	line	91
  2245                           	
  2246  0750                     i1l6113:	
  2247  0750  2F53               	goto	i1l9153
  2248                           	line	94
  2249                           	
  2250  0751                     i1l6112:	
  2251  0751  2F53               	goto	i1l9153
  2252                           	
  2253  0752                     i1l6110:	
  2254  0752  2F53               	goto	i1l9153
  2255                           	
  2256  0753                     i1l6108:	
  2257                           	
  2258  0753                     i1l9153:	
  2259                           ;i2cSlave.c: 90: }
  2260                           ;i2cSlave.c: 91: }
  2261                           ;i2cSlave.c: 94: SSPIF = 0;
  2262  0753  1283               	bcf	status, 5	;RP0=0, select bank0
  2263  0754  1303               	bcf	status, 6	;RP1=0, select bank0
  2264  0755  118C               	bcf	(99/8),(99)&7
  2265                           	line	96
  2266                           	
  2267  0756                     i1l9155:	
  2268                           ;i2cSlave.c: 96: if (i2cBufferVal == 3){
  2269  0756  087B               	movf	(_i2cBufferVal),w
  2270  0757  3A03               	xorlw	03h
  2271  0758  1D03               	skipz
  2272  0759  2F5B               	goto	u263_21
  2273  075A  2F5C               	goto	u263_20
  2274  075B                     u263_21:
  2275  075B  2F64               	goto	i1l6119
  2276  075C                     u263_20:
  2277                           	line	97
  2278                           	
  2279  075C                     i1l9157:	
  2280                           ;i2cSlave.c: 97: i2cBufferVal = 0;
  2281  075C  01FB               	clrf	(_i2cBufferVal)
  2282                           	line	98
  2283                           	
  2284  075D                     i1l9159:	
  2285                           ;i2cSlave.c: 98: i2cDataUpdate();
  2286  075D  120A  118A  2597   	fcall	_i2cDataUpdate
              120A  118A         
  2287  0762  2F64               	goto	i1l6119
  2288                           	line	99
  2289                           	
  2290  0763                     i1l6118:	
  2291  0763  2F64               	goto	i1l6119
  2292                           	line	100
  2293                           	
  2294  0764                     i1l9161:	
  2295                           	line	101
  2296                           ;i2cSlave.c: 99: }
  2297                           ;i2cSlave.c: 100: return;
  2298                           	
  2299  0764                     i1l6119:	
  2300  0764  0008               	return
  2301                           	opt stack 0
  2302                           GLOBAL	__end_of_i2cIsrHandler
  2303  0765                     	__end_of_i2cIsrHandler:
  2304 ;; =============== function _i2cIsrHandler ends ============
  2305                           
  2306                           	signat	_i2cIsrHandler,88
  2307                           	global	_i2cDataUpdate
  2308                           psect	text372,local,class=CODE,delta=2
  2309                           global __ptext372
  2310  0597                     __ptext372:
  2311                           
  2312 ;; *************** function _i2cDataUpdate *****************
  2313 ;; Defined at:
  2314 ;;		line 104 in file "i2cSlave.c"
  2315 ;; Parameters:    Size  Location     Type
  2316 ;;		None
  2317 ;; Auto vars:     Size  Location     Type
  2318 ;;		None
  2319 ;; Return value:  Size  Location     Type
  2320 ;;		None               void
  2321 ;; Registers used:
  2322 ;;		wreg
  2323 ;; Tracked objects:
  2324 ;;		On entry : 0/0
  2325 ;;		On exit  : 0/0
  2326 ;;		Unchanged: 0/0
  2327 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  2328 ;;      Params:         0       0       0       0       0       0
  2329 ;;      Locals:         0       0       0       0       0       0
  2330 ;;      Temps:          1       0       0       0       0       0
  2331 ;;      Totals:         1       0       0       0       0       0
  2332 ;;Total ram usage:        1 bytes
  2333 ;; Hardware stack levels used:    1
  2334 ;; This function calls:
  2335 ;;		Nothing
  2336 ;; This function is called by:
  2337 ;;		_i2cIsrHandler
  2338 ;; This function uses a non-reentrant model
  2339 ;;
  2340                           psect	text372
  2341                           	file	"i2cSlave.c"
  2342                           	line	104
  2343                           	global	__size_of_i2cDataUpdate
  2344  000F                     	__size_of_i2cDataUpdate	equ	__end_of_i2cDataUpdate-_i2cDataUpdate
  2345                           	
  2346  0597                     _i2cDataUpdate:	
  2347                           	opt	stack 3
  2348                           ; Regs used in _i2cDataUpdate: [wreg]
  2349                           	line	105
  2350                           	
  2351  0597                     i1l9175:	
  2352                           ;i2cSlave.c: 105: switch (i2cBuffer[0]) {
  2353  0597  2D98               	goto	i1l9177
  2354                           	line	106
  2355                           ;i2cSlave.c: 106: default :
  2356                           	
  2357  0598                     i1l6123:	
  2358                           	line	107
  2359                           	
  2360  0598                     i1l9177:	
  2361                           ;i2cSlave.c: 107: i2cSpeed = (i2cBuffer[1]);
  2362  0598  1283               	bcf	status, 5	;RP0=0, select bank0
  2363  0599  1303               	bcf	status, 6	;RP1=0, select bank0
  2364  059A  0837               	movf	0+(_i2cBuffer)+01h,w
  2365  059B  00F1               	movwf	(??_i2cDataUpdate+0)+0
  2366  059C  0871               	movf	(??_i2cDataUpdate+0)+0,w
  2367  059D  00C2               	movwf	(_i2cSpeed)
  2368                           	line	108
  2369                           ;i2cSlave.c: 108: i2cDirection = (i2cBuffer[2]);
  2370  059E  0838               	movf	0+(_i2cBuffer)+02h,w
  2371  059F  00F1               	movwf	(??_i2cDataUpdate+0)+0
  2372  05A0  0871               	movf	(??_i2cDataUpdate+0)+0,w
  2373  05A1  00C1               	movwf	(_i2cDirection)
  2374                           	line	109
  2375                           ;i2cSlave.c: 109: break;
  2376  05A2  2DA5               	goto	i1l6125
  2377                           	line	112
  2378                           	
  2379  05A3                     i1l9179:	
  2380                           ;i2cSlave.c: 112: }
  2381  05A3  2DA5               	goto	i1l6125
  2382                           	line	105
  2383                           	
  2384  05A4                     i1l6122:	
  2385  05A4  2D98               	goto	i1l9177
  2386                           	line	112
  2387                           	
  2388  05A5                     i1l6124:	
  2389                           	line	114
  2390                           ;i2cSlave.c: 113: return;
  2391                           	
  2392  05A5                     i1l6125:	
  2393  05A5  0008               	return
  2394                           	opt stack 0
  2395                           GLOBAL	__end_of_i2cDataUpdate
  2396  05A6                     	__end_of_i2cDataUpdate:
  2397 ;; =============== function _i2cDataUpdate ends ============
  2398                           
  2399                           	signat	_i2cDataUpdate,88
  2400                           	global	_i2cSend
  2401                           psect	text373,local,class=CODE,delta=2
  2402                           global __ptext373
  2403  0583                     __ptext373:
  2404                           
  2405 ;; *************** function _i2cSend *****************
  2406 ;; Defined at:
  2407 ;;		line 117 in file "i2cSlave.c"
  2408 ;; Parameters:    Size  Location     Type
  2409 ;;  msg             1    wreg     unsigned char 
  2410 ;; Auto vars:     Size  Location     Type
  2411 ;;  msg             1    0[COMMON] unsigned char 
  2412 ;; Return value:  Size  Location     Type
  2413 ;;		None               void
  2414 ;; Registers used:
  2415 ;;		wreg
  2416 ;; Tracked objects:
  2417 ;;		On entry : 0/0
  2418 ;;		On exit  : 0/0
  2419 ;;		Unchanged: 0/0
  2420 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  2421 ;;      Params:         0       0       0       0       0       0
  2422 ;;      Locals:         1       0       0       0       0       0
  2423 ;;      Temps:          0       0       0       0       0       0
  2424 ;;      Totals:         1       0       0       0       0       0
  2425 ;;Total ram usage:        1 bytes
  2426 ;; Hardware stack levels used:    1
  2427 ;; This function calls:
  2428 ;;		Nothing
  2429 ;; This function is called by:
  2430 ;;		_i2cIsrHandler
  2431 ;; This function uses a non-reentrant model
  2432 ;;
  2433                           psect	text373
  2434                           	file	"i2cSlave.c"
  2435                           	line	117
  2436                           	global	__size_of_i2cSend
  2437  0009                     	__size_of_i2cSend	equ	__end_of_i2cSend-_i2cSend
  2438                           	
  2439  0583                     _i2cSend:	
  2440                           	opt	stack 3
  2441                           ; Regs used in _i2cSend: [wreg]
  2442                           ;i2cSend@msg stored from wreg
  2443                           	line	120
  2444  0583  00F1               	movwf	(i2cSend@msg)
  2445                           	
  2446  0584                     i1l9167:	
  2447                           ;i2cSlave.c: 120: SSPBUF = msg;
  2448  0584  0871               	movf	(i2cSend@msg),w
  2449  0585  1283               	bcf	status, 5	;RP0=0, select bank0
  2450  0586  1303               	bcf	status, 6	;RP1=0, select bank0
  2451  0587  0093               	movwf	(19)	;volatile
  2452                           	line	121
  2453                           	
  2454  0588                     i1l9169:	
  2455                           ;i2cSlave.c: 121: SSPCONbits.CKP = 0;
  2456  0588  1214               	bcf	(20),4	;volatile
  2457                           	line	122
  2458                           	
  2459  0589                     i1l9171:	
  2460                           ;i2cSlave.c: 122: SSPCONbits.CKP = 1;
  2461  0589  1614               	bsf	(20),4	;volatile
  2462  058A  2D8B               	goto	i1l6128
  2463                           	line	124
  2464                           	
  2465  058B                     i1l9173:	
  2466                           	line	125
  2467                           ;i2cSlave.c: 124: return;
  2468                           	
  2469  058B                     i1l6128:	
  2470  058B  0008               	return
  2471                           	opt stack 0
  2472                           GLOBAL	__end_of_i2cSend
  2473  058C                     	__end_of_i2cSend:
  2474 ;; =============== function _i2cSend ends ============
  2475                           
  2476                           	signat	_i2cSend,4216
  2477                           psect	text374,local,class=CODE,delta=2
  2478                           global __ptext374
  2479  0000                     __ptext374:
  2480                           	global	btemp
  2481  007E                     	btemp set 07Eh
  2482                           
  2483                           	DABS	1,126,2	;btemp
  2484                           	global	wtemp0
  2485  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Apr 12 12:35:53 2013

                     _F 00AA              i2cSend@msg 0071                      _T0 0551                      _T1 0552  
                    _RD 0C60                      _WR 0C61                     _I2C 0550                     _CKE 04A6  
                   _CKP 00A4                     _GIE 005F                     _DIR 0553                     _RB5 0035  
                   _ERR 0554                     _PR2 0092                     _SMP 04A7                     _isr 068C  
                   fsr0 0004                     indf 0000          i2cIsrHandler@i 0073                    l3100 065E  
                  l1551 068B                    l1543 0784                    l1544 07BC                    l1545 07FB  
                  l3090 063E                    l1546 07FC                    l3091 063D                    l1547 07FD  
                  l1572 05C4                    l3092 063E                    l1548 07FD                    l1573 05D0  
                  l1574 05CD                    l1575 05CF                    l1567 05E0                    l1576 05D0  
                  l1568 05E7                    l3088 0632                    l1569 05E7                    l3089 063C  
                  l3099 065A                    l6104 0603                    l4594 0596                    l4597 0620  
                  l9101 0602                    l9201 067F                    l9051 0647                    l9203 0680  
                  l9211 0765                    ?_isr 0071                    l9053 0654                    l9061 05CB  
                  l9205 0681                    l9221 0788                    l9213 076F                    l9055 05BA  
                  l9063 0604                    l9071 05D9                    l9207 0685                    l9231 07B8  
                  l9223 0794                    l9215 0774                    l9049 063F                    l9057 05C2  
                  l9065 061D                    l9073 05E0                    l9081 062C                    l9209 0688  
                  l9241 07F7                    l9233 07BC                    l9225 079D                    l9217 077A  
                  l9059 05C4                    l9067 061F                    l9091 0637                    l9083 062D  
                  l9075 0621                    l9235 07C0                    l9227 07A8                    l9219 0784  
                  l9069 05D1                    l9085 062E                    l9077 0625                    l9093 058C  
                  l9181 065F                    l9237 07D6                    l9229 07AE                    l9087 062F  
                  l9079 062B                    l9095 05EB                    l9191 0675                    l9183 0662  
                  l9239 07E9                    l9089 0632                    l9097 05FD                    l9193 0679  
                  l9185 0672                    l9099 0601                    l9195 067A                    l9187 0673  
                  l9197 067D                    l9189 0674                    l9199 067E                    _FLAG 00AA  
                  _T0IE 005D                    _T0IF 005A                    u2500 05D9                    u2501 05D8  
                  u2510 0637                    u2511 0636                    u2470 0654                    u2471 0653  
                  _PIE1 008C                    u2480 05C2                    u2640 07AE                    _PIE2 008D  
                  u2481 05C1                    u2641 07AD                    u2490 05CB                    u2650 07C0  
                  u2475 0650                    u2491 05CA                    u2651 07BF                    _PEIE 005E  
                  _RBIE 005B                    _RBIF 0058                    _TMR0 0001                    _TMR1 000E  
                  _WREN 0C62                    _main 0765                    btemp 007E                    start 0012  
 __size_of_BeginEncoder 000B         ??_i2cIsrHandler 0072         __end_of_i2cInit 0604         __end_of_i2cSend 058C  
                 ??_isr 0075                   ?_main 0071                   _EEADR 010D                   _CARRY 0018  
                 _T1CON 0010                   _T2CON 0012                   _PORTD 0008                   _SSPM0 00A0  
                 _SSPM1 00A1                   _SSPM2 00A2                   _SSPM3 00A3                   _TRISB 0086  
                 _TRISD 0088                   _SSPIF 0063                   _SSPEN 00A5                   main@D 002C  
                 main@I 002A                   main@c 0035                   main@t 0034            _BeginEncoder 058C  
                 pclath 000A        __end_of_BeginPWM 063F              _i2cRequest 007C                   status 0003  
                 wtemp0 007E            __end_of_main 0800              _Initialise 065F                  ??_main 0026  
    __size_of_EncUpdate 001D        __end_of_SetPulse 065F                  _EEDATA 010C                  _CCPR2L 001B  
                _EECON1 018C                  _EECON2 018D                  _CMCON1 0097                  _COUNTS 0039  
                i1l1560 06C6                  i1l1561 06BC                  i1l1562 06C4                  i1l1554 0696  
                i1l1555 06D1                  i1l1563 06CE                  i1l1556 069C                  i1l1564 06D1  
                i1l1557 06D0                  i1l1558 06A2                  i1l1559 06CF                  i1l6110 0752  
                i1l6111 071E                  i1l6112 0751                  i1l6113 0750                  i1l6122 05A4  
                i1l6114 073A                  i1l6123 0598                  i1l6115 074F                  i1l6107 06FE  
                i1l6124 05A5                  i1l6108 0753                  i1l6116 0747                  i1l6125 05A5  
                i1l6117 074E                  i1l6109 070A                  i1l6118 0763                  i1l6119 0764  
                i1l6128 058B                  i1l9111 06A6                  i1l9103 068C                  i1l9113 06B8  
                i1l9121 06C6                  i1l9105 0690                  i1l9131 06F9                  i1l9123 06C9  
                i1l9115 06BC                  i1l9107 069A                  i1l9141 071E                  i1l9133 06FE  
                i1l9125 06DE                  i1l9117 06BF                  i1l9109 06A0                  i1l9151 0747  
                i1l9143 0727                  i1l9135 0706                  i1l9127 06E0                  i1l9119 06C4  
                i1l9161 0764                  i1l9145 0733                  i1l9137 070A                  i1l9153 0753  
                i1l9129 06EF                  i1l9171 0589                  i1l9155 0756                  i1l9147 073A  
                i1l9139 0713                  i1l9173 058B                  i1l9157 075C                  i1l9149 0740  
                i1l9167 0584                  i1l9175 0597                  i1l9159 075D                  i1l9169 0588  
                i1l9177 0598                  i1l9179 05A3                  u260_20 0727                  u252_20 0690  
                u260_21 0726                  u252_21 068F                  u261_20 0733                  u253_20 069A  
                u261_21 0732                  u253_21 0699                  u262_20 0740                  u254_20 06A0  
                u262_21 073F                  u254_21 069F                  u263_20 075C                  u255_20 06A6  
                u263_21 075B                  u255_21 06A5                  u256_20 06B8                  u256_21 06B7  
                u256_25 06B4                  u257_20 06EF                  u257_21 06EE                  u258_20 0706  
                u258_21 0705                  u259_20 0713                  u259_21 0712                  _TARGET 003F  
                _TMR1IF 0060                  _TMR2IF 0061                  _SSPADD 0093         setDirection@dir 0020  
                _TRISC6 043E                  _TRISC7 043F                  _SSPBUF 0013               ??_i2cInit 0020  
             ??_i2cSend 0071              _UpdateData 05D1                  saved_w 007E             _i2cWriteInt 007D  
     __end_of_EncUpdate 0621          __pcstackCOMMON 0071             ?_Initialise 0071           ?_setDirection 0020  
             ?_BeginPWM 0071   __end_of_i2cDataUpdate 05A6              __pbssBANK0 0036               ?_SetPulse 0020  
            __pmaintext 0765              __pintentry 0004                 _CCP2CON 001D          ??_setDirection 0022  
            ??_BeginPWM 0020             ?_UpdateData 0020                 _SSPSTAT 0094          main@currentPWM 0028  
   __size_of_Initialise 002D                 _i2cInit 05E8                 _i2cSend 0583              ??_SetPulse 0022  
 __end_of_i2cIsrHandler 0765               _DIRECTION 003B            _i2cDirection 0041            _i2cBufferVal 007B  
             _T2CONbits 0012            __size_of_isr 0052    end_of_initialization 05B6     __size_of_UpdateData 0017  
           UpdateData@c 0022             UpdateData@t 0020               _PORTBbits 0006          SetPulse@length 0020  
             _TRISDbits 0088    __end_of_setDirection 05D1             _CCP2CONbits 001D              main@counts 0032  
             _EncUpdate 0604            ??_Initialise 0021               _i2cBuffer 0036     start_initialization 05A6  
     __size_of_BeginPWM 001E             __end_of_isr 06DE      __end_of_Initialise 068C              ?_EncUpdate 0020  
     __size_of_SetPulse 0020            SetPulse@temp 0022            ??_UpdateData 0024             __pbssCOMMON 007B  
         __pcstackBANK0 0020           ?_BeginEncoder 0071                ?_i2cInit 0071                ?_i2cSend 0071  
    __end_of_UpdateData 05E8               __ptext361 0000               __ptext370 068C               __ptext362 065F  
             __ptext371 06DE               __ptext363 05E8               __ptext372 0597               __ptext364 058C  
             __ptext373 0583               __ptext365 0621               __ptext374 0000               __ptext366 05D1  
             __ptext367 0604               __ptext368 05BA               __ptext369 063F  __size_of_i2cDataUpdate 000F  
        ??_BeginEncoder 0020   __size_of_setDirection 0017                _DIR_READ 003D       interrupt_function 0004  
              _PIE1bits 008C                _PIR1bits 000C             ??_EncUpdate 0024               main@P_old 002E  
              _BeginPWM 0621            _setDirection 05BA  __size_of_i2cIsrHandler 0087           _i2cDataUpdate 0597  
              _i2cSpeed 0042        __size_of_i2cInit 001C        __size_of_i2cSend 0009                _SetPulse 063F  
        ?_i2cDataUpdate 0071             EncUpdate@t0 0020             EncUpdate@t1 0022           __size_of_main 009B  
         _i2cIsrHandler 06DE    __end_of_BeginEncoder 0597                main@time 0030                intlevel1 0000  
        ?_i2cIsrHandler 0071              _OPTION_REG 0081         ??_i2cDataUpdate 0071          i2cInit@address 0020  
            _SSPCONbits 0014  
