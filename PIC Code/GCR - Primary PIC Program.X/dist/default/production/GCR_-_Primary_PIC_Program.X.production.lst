

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Mon Mar 18 16:57:27 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 23 "primarymain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 23 "primarymain.c"
    45  2007  F4F2               	dw 0xFFFA & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFFFF & 0xF7FF ;#
    46                           	FNCALL	_main,_Initialise
    47                           	FNCALL	_main,_SetPulse
    48                           	FNCALL	_main,_setDirection
    49                           	FNCALL	_main,_EncUpdate
    50                           	FNCALL	_main,_UpdateData
    51                           	FNCALL	_Initialise,_BeginPWM
    52                           	FNCALL	_Initialise,_BeginEncoder
    53                           	FNCALL	_Initialise,_i2cInit
    54                           	FNROOT	_main
    55                           	FNCALL	_isr,_i2cIsrHandler
    56                           	FNCALL	_i2cIsrHandler,_i2cSend
    57                           	FNCALL	_i2cIsrHandler,_i2cDataUpdate
    58                           	FNCALL	intlevel1,_isr
    59                           	global	intlevel1
    60                           	FNROOT	intlevel1
    61                           	global	_i2cBuffer
    62                           	global	_COUNTS
    63                           	global	_DIRECTION
    64                           	global	_DIR_READ
    65                           	global	_TARGET
    66                           	global	_i2cDirection
    67                           	global	_i2cSpeed
    68                           	global	_i2cBufferVal
    69                           	global	_i2cRequest
    70                           	global	_i2cWriteInt
    71                           	global	_TMR1
    72                           psect	text361,local,class=CODE,delta=2
    73                           global __ptext361
    74  0000                     __ptext361:
    75  000E                     _TMR1	set	14
    76                           	global	_CCP2CON
    77  001D                     _CCP2CON	set	29
    78                           	global	_CCP2CONbits
    79  001D                     _CCP2CONbits	set	29
    80                           	global	_CCPR2L
    81  001B                     _CCPR2L	set	27
    82                           	global	_PIR1bits
    83  000C                     _PIR1bits	set	12
    84                           	global	_PORTBbits
    85  0006                     _PORTBbits	set	6
    86                           	global	_PORTD
    87  0008                     _PORTD	set	8
    88                           	global	_SSPBUF
    89  0013                     _SSPBUF	set	19
    90                           	global	_SSPCONbits
    91  0014                     _SSPCONbits	set	20
    92                           	global	_T1CON
    93  0010                     _T1CON	set	16
    94                           	global	_T2CON
    95  0012                     _T2CON	set	18
    96                           	global	_T2CONbits
    97  0012                     _T2CONbits	set	18
    98                           	global	_TMR0
    99  0001                     _TMR0	set	1
   100                           	global	_CARRY
   101  0018                     _CARRY	set	24
   102                           	global	_CKP
   103  00A4                     _CKP	set	164
   104                           	global	_GIE
   105  005F                     _GIE	set	95
   106                           	global	_PEIE
   107  005E                     _PEIE	set	94
   108                           	global	_RB5
   109  0035                     _RB5	set	53
   110                           	global	_RBIE
   111  005B                     _RBIE	set	91
   112                           	global	_RBIF
   113  0058                     _RBIF	set	88
   114                           	global	_SSPEN
   115  00A5                     _SSPEN	set	165
   116                           	global	_SSPIF
   117  0063                     _SSPIF	set	99
   118                           	global	_SSPM0
   119  00A0                     _SSPM0	set	160
   120                           	global	_SSPM1
   121  00A1                     _SSPM1	set	161
   122                           	global	_SSPM2
   123  00A2                     _SSPM2	set	162
   124                           	global	_SSPM3
   125  00A3                     _SSPM3	set	163
   126                           	global	_T0IE
   127  005D                     _T0IE	set	93
   128                           	global	_T0IF
   129  005A                     _T0IF	set	90
   130                           	global	_TMR1IF
   131  0060                     _TMR1IF	set	96
   132                           	global	_TMR2IF
   133  0061                     _TMR2IF	set	97
   134                           	global	_CMCON1
   135  0097                     _CMCON1	set	151
   136                           	global	_OPTION_REG
   137  0081                     _OPTION_REG	set	129
   138                           	global	_PIE1
   139  008C                     _PIE1	set	140
   140                           	global	_PIE1bits
   141  008C                     _PIE1bits	set	140
   142                           	global	_PIE2
   143  008D                     _PIE2	set	141
   144                           	global	_PR2
   145  0092                     _PR2	set	146
   146                           	global	_SSPADD
   147  0093                     _SSPADD	set	147
   148                           	global	_SSPSTAT
   149  0094                     _SSPSTAT	set	148
   150                           	global	_TRISB
   151  0086                     _TRISB	set	134
   152                           	global	_TRISD
   153  0088                     _TRISD	set	136
   154                           	global	_TRISDbits
   155  0088                     _TRISDbits	set	136
   156                           	global	_CKE
   157  04A6                     _CKE	set	1190
   158                           	global	_SMP
   159  04A7                     _SMP	set	1191
   160                           	global	_TRISC6
   161  043E                     _TRISC6	set	1086
   162                           	global	_TRISC7
   163  043F                     _TRISC7	set	1087
   164                           	global	_EEADR
   165  010D                     _EEADR	set	269
   166                           	global	_EEDATA
   167  010C                     _EEDATA	set	268
   168                           	global	_EECON1
   169  018C                     _EECON1	set	396
   170                           	global	_EECON2
   171  018D                     _EECON2	set	397
   172                           	global	_RD
   173  0C60                     _RD	set	3168
   174                           	global	_WR
   175  0C61                     _WR	set	3169
   176                           	global	_WREN
   177  0C62                     _WREN	set	3170
   178                           	global	_FLAG
   179  00AA                     _FLAG	set	170
   180                           	DABS	1,170,1	;_FLAG
   181                           
   182                           	global	_F
   183  00AA                     _F	set	170
   184                           	DABS	1,170,1	;_F
   185                           
   186                           	global	_DIR
   187  0553                     _DIR	set	1363
   188                           	DABS	1,170,1	;_DIR
   189                           
   190                           	global	_ERR
   191  0554                     _ERR	set	1364
   192                           	DABS	1,170,1	;_ERR
   193                           
   194                           	global	_I2C
   195  0550                     _I2C	set	1360
   196                           	DABS	1,170,1	;_I2C
   197                           
   198                           	global	_T0
   199  0551                     _T0	set	1361
   200                           	DABS	1,170,1	;_T0
   201                           
   202                           	global	_T1
   203  0552                     _T1	set	1362
   204                           	DABS	1,170,1	;_T1
   205                           
   206                           	file	"C:\Users\Alan\AppData\Local\Temp\s6nk."
   207                           	line	#
   208                           psect cinit,class=CODE,delta=2
   209                           global start_initialization
   210  023B                     start_initialization:
   211                           
   212                           psect	bssCOMMON,class=COMMON,space=1
   213                           global __pbssCOMMON
   214  007A                     __pbssCOMMON:
   215  007A                     _i2cBufferVal:
   216  007A                            ds      1
   217                           
   218  007B                     _i2cRequest:
   219  007B                            ds      1
   220                           
   221  007C                     _i2cWriteInt:
   222  007C                            ds      1
   223                           
   224                           psect	bssBANK0,class=BANK0,space=1
   225                           global __pbssBANK0
   226  0036                     __pbssBANK0:
   227  0036                     _i2cBuffer:
   228  0036                            ds      3
   229                           
   230  0039                     _COUNTS:
   231  0039                            ds      2
   232                           
   233  003B                     _DIRECTION:
   234  003B                            ds      2
   235                           
   236  003D                     _DIR_READ:
   237  003D                            ds      2
   238                           
   239  003F                     _TARGET:
   240  003F                            ds      2
   241                           
   242  0041                     _i2cDirection:
   243  0041                            ds      1
   244                           
   245  0042                     _i2cSpeed:
   246  0042                            ds      1
   247                           
   248                           ; Clear objects allocated to COMMON
   249                           psect cinit,class=CODE,delta=2
   250  023B  01FA               	clrf	((__pbssCOMMON)+0)&07Fh
   251  023C  01FB               	clrf	((__pbssCOMMON)+1)&07Fh
   252  023D  01FC               	clrf	((__pbssCOMMON)+2)&07Fh
   253                           ; Clear objects allocated to BANK0
   254                           psect cinit,class=CODE,delta=2
   255  023E  01B6               	clrf	((__pbssBANK0)+0)&07Fh
   256  023F  01B7               	clrf	((__pbssBANK0)+1)&07Fh
   257  0240  01B8               	clrf	((__pbssBANK0)+2)&07Fh
   258  0241  01B9               	clrf	((__pbssBANK0)+3)&07Fh
   259  0242  01BA               	clrf	((__pbssBANK0)+4)&07Fh
   260  0243  01BB               	clrf	((__pbssBANK0)+5)&07Fh
   261  0244  01BC               	clrf	((__pbssBANK0)+6)&07Fh
   262  0245  01BD               	clrf	((__pbssBANK0)+7)&07Fh
   263  0246  01BE               	clrf	((__pbssBANK0)+8)&07Fh
   264  0247  01BF               	clrf	((__pbssBANK0)+9)&07Fh
   265  0248  01C0               	clrf	((__pbssBANK0)+10)&07Fh
   266  0249  01C1               	clrf	((__pbssBANK0)+11)&07Fh
   267  024A  01C2               	clrf	((__pbssBANK0)+12)&07Fh
   268                           psect cinit,class=CODE,delta=2
   269                           global end_of_initialization
   270                           
   271                           ;End of C runtime variable initialization code
   272                           
   273  024B                     end_of_initialization:
   274  024B  0183               clrf status
   275  024C  120A  118A  2815   ljmp _main	;jump to C main() function
   276                           psect	cstackCOMMON,class=COMMON,space=1
   277                           global __pcstackCOMMON
   278  0070                     __pcstackCOMMON:
   279                           	global	?_Initialise
   280  0070                     ?_Initialise:	; 0 bytes @ 0x0
   281                           	global	?_BeginPWM
   282  0070                     ?_BeginPWM:	; 0 bytes @ 0x0
   283                           	global	?_BeginEncoder
   284  0070                     ?_BeginEncoder:	; 0 bytes @ 0x0
   285                           	global	?_i2cInit
   286  0070                     ?_i2cInit:	; 0 bytes @ 0x0
   287                           	global	?_i2cIsrHandler
   288  0070                     ?_i2cIsrHandler:	; 0 bytes @ 0x0
   289                           	global	?_i2cSend
   290  0070                     ?_i2cSend:	; 0 bytes @ 0x0
   291                           	global	??_i2cSend
   292  0070                     ??_i2cSend:	; 0 bytes @ 0x0
   293                           	global	?_i2cDataUpdate
   294  0070                     ?_i2cDataUpdate:	; 0 bytes @ 0x0
   295                           	global	??_i2cDataUpdate
   296  0070                     ??_i2cDataUpdate:	; 0 bytes @ 0x0
   297                           	global	?_isr
   298  0070                     ?_isr:	; 0 bytes @ 0x0
   299                           	global	?_main
   300  0070                     ?_main:	; 2 bytes @ 0x0
   301                           	global	i2cSend@i
   302  0070                     i2cSend@i:	; 2 bytes @ 0x0
   303  0070                     	ds	2
   304                           	global	i2cSend@msg
   305  0072                     i2cSend@msg:	; 1 bytes @ 0x2
   306  0072                     	ds	1
   307                           	global	??_i2cIsrHandler
   308  0073                     ??_i2cIsrHandler:	; 0 bytes @ 0x3
   309  0073                     	ds	1
   310                           	global	??_isr
   311  0074                     ??_isr:	; 0 bytes @ 0x4
   312  0074                     	ds	6
   313                           psect	cstackBANK0,class=BANK0,space=1
   314                           global __pcstackBANK0
   315  0020                     __pcstackBANK0:
   316                           	global	?_SetPulse
   317  0020                     ?_SetPulse:	; 0 bytes @ 0x0
   318                           	global	?_setDirection
   319  0020                     ?_setDirection:	; 0 bytes @ 0x0
   320                           	global	?_EncUpdate
   321  0020                     ?_EncUpdate:	; 0 bytes @ 0x0
   322                           	global	?_UpdateData
   323  0020                     ?_UpdateData:	; 0 bytes @ 0x0
   324                           	global	??_BeginPWM
   325  0020                     ??_BeginPWM:	; 0 bytes @ 0x0
   326                           	global	??_BeginEncoder
   327  0020                     ??_BeginEncoder:	; 0 bytes @ 0x0
   328                           	global	??_i2cInit
   329  0020                     ??_i2cInit:	; 0 bytes @ 0x0
   330                           	global	i2cInit@address
   331  0020                     i2cInit@address:	; 1 bytes @ 0x0
   332                           	global	UpdateData@t
   333  0020                     UpdateData@t:	; 2 bytes @ 0x0
   334                           	global	setDirection@dir
   335  0020                     setDirection@dir:	; 2 bytes @ 0x0
   336                           	global	SetPulse@length
   337  0020                     SetPulse@length:	; 2 bytes @ 0x0
   338                           	global	EncUpdate@t0
   339  0020                     EncUpdate@t0:	; 2 bytes @ 0x0
   340  0020                     	ds	1
   341                           	global	??_Initialise
   342  0021                     ??_Initialise:	; 0 bytes @ 0x1
   343  0021                     	ds	1
   344                           	global	??_SetPulse
   345  0022                     ??_SetPulse:	; 0 bytes @ 0x2
   346                           	global	??_setDirection
   347  0022                     ??_setDirection:	; 0 bytes @ 0x2
   348                           	global	UpdateData@c
   349  0022                     UpdateData@c:	; 2 bytes @ 0x2
   350                           	global	SetPulse@temp
   351  0022                     SetPulse@temp:	; 2 bytes @ 0x2
   352                           	global	EncUpdate@t1
   353  0022                     EncUpdate@t1:	; 2 bytes @ 0x2
   354  0022                     	ds	2
   355                           	global	??_EncUpdate
   356  0024                     ??_EncUpdate:	; 0 bytes @ 0x4
   357                           	global	??_UpdateData
   358  0024                     ??_UpdateData:	; 0 bytes @ 0x4
   359  0024                     	ds	2
   360                           	global	??_main
   361  0026                     ??_main:	; 0 bytes @ 0x6
   362  0026                     	ds	2
   363                           	global	main@currentPWM
   364  0028                     main@currentPWM:	; 2 bytes @ 0x8
   365  0028                     	ds	2
   366                           	global	main@I
   367  002A                     main@I:	; 2 bytes @ 0xA
   368  002A                     	ds	2
   369                           	global	main@D
   370  002C                     main@D:	; 2 bytes @ 0xC
   371  002C                     	ds	2
   372                           	global	main@P_old
   373  002E                     main@P_old:	; 2 bytes @ 0xE
   374  002E                     	ds	2
   375                           	global	main@time
   376  0030                     main@time:	; 2 bytes @ 0x10
   377  0030                     	ds	2
   378                           	global	main@counts
   379  0032                     main@counts:	; 2 bytes @ 0x12
   380  0032                     	ds	2
   381                           	global	main@t
   382  0034                     main@t:	; 1 bytes @ 0x14
   383  0034                     	ds	1
   384                           	global	main@c
   385  0035                     main@c:	; 1 bytes @ 0x15
   386  0035                     	ds	1
   387 ;;Data sizes: Strings 0, constant 0, data 0, bss 16, persistent 0 stack 0
   388 ;;Auto spaces:   Size  Autos    Used
   389 ;; COMMON          14     10      13
   390 ;; BANK0           80     22      35
   391 ;; BANK1h          69      0       0
   392 ;; BANK1l          10      0       0
   393 ;; BANK3           96      0       0
   394 ;; BANK2           80      0       0
   395                           
   396 ;;
   397 ;; Pointer list with targets:
   398                           
   399 ;; EncUpdate@t0	PTR int  size(2) Largest target is 512
   400 ;;		 -> RAM(DATA[512]), 
   401 ;;
   402 ;; EncUpdate@t1	PTR int  size(2) Largest target is 512
   403 ;;		 -> RAM(DATA[512]), 
   404 ;;
   405                           
   406                           
   407 ;;
   408 ;; Critical Paths under _main in COMMON
   409 ;;
   410 ;;   None.
   411 ;;
   412 ;; Critical Paths under _isr in COMMON
   413 ;;
   414 ;;   _isr->_i2cIsrHandler
   415 ;;   _i2cIsrHandler->_i2cSend
   416 ;;
   417 ;; Critical Paths under _main in BANK0
   418 ;;
   419 ;;   _main->_EncUpdate
   420 ;;   _Initialise->_i2cInit
   421 ;;
   422 ;; Critical Paths under _isr in BANK0
   423 ;;
   424 ;;   None.
   425 ;;
   426 ;; Critical Paths under _main in BANK1h
   427 ;;
   428 ;;   None.
   429 ;;
   430 ;; Critical Paths under _isr in BANK1h
   431 ;;
   432 ;;   None.
   433 ;;
   434 ;; Critical Paths under _main in BANK1l
   435 ;;
   436 ;;   None.
   437 ;;
   438 ;; Critical Paths under _isr in BANK1l
   439 ;;
   440 ;;   None.
   441 ;;
   442 ;; Critical Paths under _main in BANK3
   443 ;;
   444 ;;   None.
   445 ;;
   446 ;; Critical Paths under _isr in BANK3
   447 ;;
   448 ;;   None.
   449 ;;
   450 ;; Critical Paths under _main in BANK2
   451 ;;
   452 ;;   None.
   453 ;;
   454 ;; Critical Paths under _isr in BANK2
   455 ;;
   456 ;;   None.
   457                           
   458 ;;
   459 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   460 ;;
   461                           
   462 ;;
   463 ;;Call Graph Tables:
   464 ;;
   465 ;; ---------------------------------------------------------------------------------
   466 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   467 ;; ---------------------------------------------------------------------------------
   468 ;; (0) _main                                                22    22      0     341
   469 ;;                                              6 BANK0     16    16      0
   470 ;;                         _Initialise
   471 ;;                           _SetPulse
   472 ;;                       _setDirection
   473 ;;                          _EncUpdate
   474 ;;                         _UpdateData
   475 ;; ---------------------------------------------------------------------------------
   476 ;; (1) _Initialise                                           0     0      0      22
   477 ;;                           _BeginPWM
   478 ;;                       _BeginEncoder
   479 ;;                            _i2cInit
   480 ;; ---------------------------------------------------------------------------------
   481 ;; (2) _i2cInit                                              1     1      0      22
   482 ;;                                              0 BANK0      1     1      0
   483 ;; ---------------------------------------------------------------------------------
   484 ;; (2) _BeginEncoder                                         0     0      0       0
   485 ;; ---------------------------------------------------------------------------------
   486 ;; (2) _BeginPWM                                             0     0      0       0
   487 ;; ---------------------------------------------------------------------------------
   488 ;; (1) _UpdateData                                           4     0      4      44
   489 ;;                                              0 BANK0      4     0      4
   490 ;; ---------------------------------------------------------------------------------
   491 ;; (1) _EncUpdate                                            6     2      4      44
   492 ;;                                              0 BANK0      6     2      4
   493 ;; ---------------------------------------------------------------------------------
   494 ;; (1) _setDirection                                         2     0      2      44
   495 ;;                                              0 BANK0      2     0      2
   496 ;; ---------------------------------------------------------------------------------
   497 ;; (1) _SetPulse                                             4     2      2      68
   498 ;;                                              0 BANK0      4     2      2
   499 ;; ---------------------------------------------------------------------------------
   500 ;; Estimated maximum stack depth 2
   501 ;; ---------------------------------------------------------------------------------
   502 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   503 ;; ---------------------------------------------------------------------------------
   504 ;; (3) _isr                                                  6     6      0      24
   505 ;;                                              4 COMMON     6     6      0
   506 ;;                      _i2cIsrHandler
   507 ;; ---------------------------------------------------------------------------------
   508 ;; (4) _i2cIsrHandler                                        1     1      0      24
   509 ;;                                              3 COMMON     1     1      0
   510 ;;                            _i2cSend
   511 ;;                      _i2cDataUpdate
   512 ;; ---------------------------------------------------------------------------------
   513 ;; (5) _i2cDataUpdate                                        1     1      0       0
   514 ;;                                              0 COMMON     1     1      0
   515 ;; ---------------------------------------------------------------------------------
   516 ;; (5) _i2cSend                                              3     3      0      24
   517 ;;                                              0 COMMON     3     3      0
   518 ;; ---------------------------------------------------------------------------------
   519 ;; Estimated maximum stack depth 5
   520 ;; ---------------------------------------------------------------------------------
   521                           
   522 ;; Call Graph Graphs:
   523                           
   524 ;; _main (ROOT)
   525 ;;   _Initialise
   526 ;;     _BeginPWM
   527 ;;     _BeginEncoder
   528 ;;     _i2cInit
   529 ;;   _SetPulse
   530 ;;   _setDirection
   531 ;;   _EncUpdate
   532 ;;   _UpdateData
   533 ;;
   534 ;; _isr (ROOT)
   535 ;;   _i2cIsrHandler
   536 ;;     _i2cSend
   537 ;;     _i2cDataUpdate
   538 ;;
   539                           
   540 ;; Address spaces:
   541                           
   542 ;;Name               Size   Autos  Total    Cost      Usage
   543 ;;BITCOMMON            E      0       0       0        0.0%
   544 ;;EEDATA             100      0       0       0        0.0%
   545 ;;NULL                 0      0       0       0        0.0%
   546 ;;CODE                 0      0       0       0        0.0%
   547 ;;COMMON               E      A       D       1       92.9%
   548 ;;BITSFR0              0      0       0       1        0.0%
   549 ;;SFR0                 0      0       0       1        0.0%
   550 ;;BITSFR1              0      0       0       2        0.0%
   551 ;;SFR1                 0      0       0       2        0.0%
   552 ;;STACK                0      0       8       2        0.0%
   553 ;;BITBANK0            50      0       0       3        0.0%
   554 ;;BANK0               50     16      23       4       43.8%
   555 ;;BITSFR3              0      0       0       4        0.0%
   556 ;;SFR3                 0      0       0       4        0.0%
   557 ;;BITBANK1h           45      0       0       5        0.0%
   558 ;;BITSFR2              0      0       0       5        0.0%
   559 ;;SFR2                 0      0       0       5        0.0%
   560 ;;BITBANK1l            A      0       0       6        0.0%
   561 ;;BANK1h              45      0       0       7        0.0%
   562 ;;BANK1l               A      0       0       8        0.0%
   563 ;;BITBANK3            60      0       0       9        0.0%
   564 ;;BANK3               60      0       0      10        0.0%
   565 ;;BANK2               50      0       0      11        0.0%
   566 ;;ABS                  0      0      30      12        0.0%
   567 ;;BITBANK2            50      0       0      13        0.0%
   568 ;;DATA                 0      0      38      14        0.0%
   569                           
   570                           	global	_main
   571                           psect	maintext,global,class=CODE,delta=2
   572                           global __pmaintext
   573  0015                     __pmaintext:
   574                           
   575 ;; *************** function _main *****************
   576 ;; Defined at:
   577 ;;		line 102 in file "primarymain.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;  counts          2   18[BANK0 ] int 
   582 ;;  time            2   16[BANK0 ] int 
   583 ;;  P_old           2   14[BANK0 ] int 
   584 ;;  D               2   12[BANK0 ] int 
   585 ;;  I               2   10[BANK0 ] int 
   586 ;;  currentPWM      2    8[BANK0 ] int 
   587 ;;  PID             2    0        int 
   588 ;;  P               2    0        int 
   589 ;;  v               2    0        int 
   590 ;;  c               1   21[BANK0 ] PTR int 
   591 ;;  t               1   20[BANK0 ] PTR int 
   592 ;; Return value:  Size  Location     Type
   593 ;;                  2  1542[COMMON] int 
   594 ;; Registers used:
   595 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   596 ;; Tracked objects:
   597 ;;		On entry : 17F/0
   598 ;;		On exit  : 0/0
   599 ;;		Unchanged: 0/0
   600 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
   601 ;;      Params:         0       0       0       0       0       0
   602 ;;      Locals:         0      14       0       0       0       0
   603 ;;      Temps:          0       2       0       0       0       0
   604 ;;      Totals:         0      16       0       0       0       0
   605 ;;Total ram usage:       16 bytes
   606 ;; Hardware stack levels required when called:    5
   607 ;; This function calls:
   608 ;;		_Initialise
   609 ;;		_SetPulse
   610 ;;		_setDirection
   611 ;;		_EncUpdate
   612 ;;		_UpdateData
   613 ;; This function is called by:
   614 ;;		Startup code after reset
   615 ;; This function uses a non-reentrant model
   616 ;;
   617                           psect	maintext
   618                           	file	"primarymain.c"
   619                           	line	102
   620                           	global	__size_of_main
   621  009B                     	__size_of_main	equ	__end_of_main-_main
   622                           	
   623  0015                     _main:	
   624                           	opt	stack 3
   625                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   626                           	line	104
   627                           	
   628  0015                     l9207:	
   629                           ;primarymain.c: 104: int time = 0, counts = 0;
   630  0015  1283               	bcf	status, 5	;RP0=0, select bank0
   631  0016  1303               	bcf	status, 6	;RP1=0, select bank0
   632  0017  01B0               	clrf	(main@time)
   633  0018  01B1               	clrf	(main@time+1)
   634                           ;primarymain.c: 109: *c = counts;
   635  0019  01B2               	clrf	(main@counts)
   636  001A  01B3               	clrf	(main@counts+1)
   637                           	line	110
   638                           ;primarymain.c: 110: int currentPWM = 0;
   639  001B  01A8               	clrf	(main@currentPWM)
   640  001C  01A9               	clrf	(main@currentPWM+1)
   641                           	line	113
   642                           ;primarymain.c: 111: int v;
   643                           ;primarymain.c: 113: int P, I, D, P_old = 0, PID;
   644  001D  01AE               	clrf	(main@P_old)
   645  001E  01AF               	clrf	(main@P_old+1)
   646                           	line	118
   647                           	
   648  001F                     l9209:	
   649                           ;primarymain.c: 118: Initialise();
   650  001F  120A  118A  2169   	fcall	_Initialise
              120A  118A         
   651                           	line	120
   652                           	
   653  0024                     l9211:	
   654                           ;primarymain.c: 120: TARGET = 30;
   655  0024  301E               	movlw	low(01Eh)
   656  0025  1283               	bcf	status, 5	;RP0=0, select bank0
   657  0026  1303               	bcf	status, 6	;RP1=0, select bank0
   658  0027  00BF               	movwf	(_TARGET)
   659  0028  3000               	movlw	high(01Eh)
   660  0029  00C0               	movwf	((_TARGET))+1
   661                           	line	121
   662                           	
   663  002A                     l9213:	
   664                           ;primarymain.c: 121: SetPulse(0);
   665  002A  3000               	movlw	low(0)
   666  002B  00A0               	movwf	(?_SetPulse)
   667  002C  3000               	movlw	high(0)
   668  002D  00A1               	movwf	((?_SetPulse))+1
   669  002E  120A  118A  2196   	fcall	_SetPulse
              120A  118A         
   670  0033  2834               	goto	l9215
   671                           	line	123
   672                           ;primarymain.c: 123: while(1)
   673                           	
   674  0034                     l1543:	
   675                           	line	134
   676                           	
   677  0034                     l9215:	
   678                           ;primarymain.c: 124: {
   679                           ;primarymain.c: 134: PORTD = TMR1;
   680  0034  1283               	bcf	status, 5	;RP0=0, select bank0
   681  0035  1303               	bcf	status, 6	;RP1=0, select bank0
   682  0036  080E               	movf	(14),w	;volatile
   683  0037  0088               	movwf	(8)	;volatile
   684                           	line	135
   685                           	
   686  0038                     l9217:	
   687                           ;primarymain.c: 135: SetPulse(i2cSpeed);
   688  0038  0842               	movf	(_i2cSpeed),w
   689  0039  00A6               	movwf	(??_main+0)+0
   690  003A  01A7               	clrf	(??_main+0)+0+1
   691  003B  0826               	movf	0+(??_main+0)+0,w
   692  003C  00A0               	movwf	(?_SetPulse)
   693  003D  0827               	movf	1+(??_main+0)+0,w
   694  003E  00A1               	movwf	(?_SetPulse+1)
   695  003F  120A  118A  2196   	fcall	_SetPulse
              120A  118A         
   696                           	line	136
   697                           	
   698  0044                     l9219:	
   699                           ;primarymain.c: 136: DIRECTION = i2cDirection;
   700  0044  1283               	bcf	status, 5	;RP0=0, select bank0
   701  0045  1303               	bcf	status, 6	;RP1=0, select bank0
   702  0046  0841               	movf	(_i2cDirection),w
   703  0047  00A6               	movwf	(??_main+0)+0
   704  0048  01A7               	clrf	(??_main+0)+0+1
   705  0049  0826               	movf	0+(??_main+0)+0,w
   706  004A  00BB               	movwf	(_DIRECTION)
   707  004B  0827               	movf	1+(??_main+0)+0,w
   708  004C  00BC               	movwf	(_DIRECTION+1)
   709                           	line	137
   710                           	
   711  004D                     l9221:	
   712                           ;primarymain.c: 137: setDirection(DIRECTION);
   713  004D  083C               	movf	(_DIRECTION+1),w
   714  004E  01A1               	clrf	(?_setDirection+1)
   715  004F  07A1               	addwf	(?_setDirection+1)
   716  0050  083B               	movf	(_DIRECTION),w
   717  0051  01A0               	clrf	(?_setDirection)
   718  0052  07A0               	addwf	(?_setDirection)
   719                           
   720  0053  120A  118A  2224   	fcall	_setDirection
              120A  118A         
   721                           	line	142
   722                           	
   723  0058                     l9223:	
   724                           ;primarymain.c: 142: if (F.I2C == 1)
   725  0058  1683               	bsf	status, 5	;RP0=1, select bank1
   726  0059  1303               	bcf	status, 6	;RP1=0, select bank1
   727  005A  1C2A               	btfss	(170)^080h,0
   728  005B  285D               	goto	u2621
   729  005C  285E               	goto	u2620
   730  005D                     u2621:
   731  005D  286C               	goto	l9229
   732  005E                     u2620:
   733                           	line	149
   734                           	
   735  005E                     l9225:	
   736                           ;primarymain.c: 143: {
   737                           ;primarymain.c: 149: COUNTS = 0;
   738  005E  1283               	bcf	status, 5	;RP0=0, select bank0
   739  005F  1303               	bcf	status, 6	;RP1=0, select bank0
   740  0060  01B9               	clrf	(_COUNTS)
   741  0061  01BA               	clrf	(_COUNTS+1)
   742                           	line	150
   743                           ;primarymain.c: 150: I = 0;
   744  0062  01AA               	clrf	(main@I)
   745  0063  01AB               	clrf	(main@I+1)
   746                           	line	151
   747                           ;primarymain.c: 151: D = 0;
   748  0064  01AC               	clrf	(main@D)
   749  0065  01AD               	clrf	(main@D+1)
   750                           	line	152
   751                           ;primarymain.c: 152: P_old = 0;
   752  0066  01AE               	clrf	(main@P_old)
   753  0067  01AF               	clrf	(main@P_old+1)
   754                           	line	155
   755                           	
   756  0068                     l9227:	
   757                           ;primarymain.c: 155: F.I2C = 0;
   758  0068  1683               	bsf	status, 5	;RP0=1, select bank1
   759  0069  1303               	bcf	status, 6	;RP1=0, select bank1
   760  006A  102A               	bcf	(170)^080h,0
   761  006B  286C               	goto	l9229
   762                           	line	156
   763                           	
   764  006C                     l1544:	
   765                           	line	158
   766                           	
   767  006C                     l9229:	
   768                           ;primarymain.c: 156: }
   769                           ;primarymain.c: 158: if (F.DIR == 1)
   770  006C  1DAA               	btfss	(170)^080h,3
   771  006D  286F               	goto	u2631
   772  006E  2870               	goto	u2630
   773  006F                     u2631:
   774  006F  2834               	goto	l9215
   775  0070                     u2630:
   776                           	line	161
   777                           	
   778  0070                     l9231:	
   779                           ;primarymain.c: 159: {
   780                           ;primarymain.c: 161: EncUpdate(*t, *c);
   781  0070  1283               	bcf	status, 5	;RP0=0, select bank0
   782  0071  1303               	bcf	status, 6	;RP1=0, select bank0
   783  0072  0834               	movf	(main@t),w
   784  0073  0084               	movwf	fsr0
   785  0074  1383               	bcf	status, 7	;select IRP bank0
   786  0075  0800               	movf	indf,w
   787  0076  00A0               	movwf	(?_EncUpdate)
   788  0077  0A84               	incf	fsr0,f
   789  0078  0800               	movf	indf,w
   790  0079  00A1               	movwf	(?_EncUpdate+1)
   791  007A  0835               	movf	(main@c),w
   792  007B  0084               	movwf	fsr0
   793  007C  0800               	movf	indf,w
   794  007D  00A2               	movwf	(0+?_EncUpdate+02h)
   795  007E  0A84               	incf	fsr0,f
   796  007F  0800               	movf	indf,w
   797  0080  00A3               	movwf	(1+?_EncUpdate+02h)
   798  0081  120A  118A  21D4   	fcall	_EncUpdate
              120A  118A         
   799                           	line	162
   800                           	
   801  0086                     l9233:	
   802                           ;primarymain.c: 162: UpdateData(time, counts);
   803  0086  1283               	bcf	status, 5	;RP0=0, select bank0
   804  0087  1303               	bcf	status, 6	;RP1=0, select bank0
   805  0088  0831               	movf	(main@time+1),w
   806  0089  01A1               	clrf	(?_UpdateData+1)
   807  008A  07A1               	addwf	(?_UpdateData+1)
   808  008B  0830               	movf	(main@time),w
   809  008C  01A0               	clrf	(?_UpdateData)
   810  008D  07A0               	addwf	(?_UpdateData)
   811                           
   812  008E  0833               	movf	(main@counts+1),w
   813  008F  01A3               	clrf	1+(?_UpdateData)+02h
   814  0090  07A3               	addwf	1+(?_UpdateData)+02h
   815  0091  0832               	movf	(main@counts),w
   816  0092  01A2               	clrf	0+(?_UpdateData)+02h
   817  0093  07A2               	addwf	0+(?_UpdateData)+02h
   818                           
   819  0094  120A  118A  220D   	fcall	_UpdateData
              120A  118A         
   820                           	line	165
   821                           	
   822  0099                     l9235:	
   823                           ;primarymain.c: 165: DIR_READ = RB5;
   824  0099  1003               	clrc
   825  009A  1283               	bcf	status, 5	;RP0=0, select bank0
   826  009B  1303               	bcf	status, 6	;RP1=0, select bank0
   827  009C  1A86               	btfsc	(53/8),(53)&7
   828  009D  1403               	setc
   829  009E  3000               	movlw	0
   830  009F  1803               	skipnc
   831  00A0  3001               	movlw	1
   832                           
   833  00A1  00A6               	movwf	(??_main+0)+0
   834  00A2  01A7               	clrf	(??_main+0)+0+1
   835  00A3  0826               	movf	0+(??_main+0)+0,w
   836  00A4  00BD               	movwf	(_DIR_READ)
   837  00A5  0827               	movf	1+(??_main+0)+0,w
   838  00A6  00BE               	movwf	(_DIR_READ+1)
   839                           	line	168
   840                           	
   841  00A7                     l9237:	
   842                           ;primarymain.c: 168: F.DIR = 0;
   843  00A7  1683               	bsf	status, 5	;RP0=1, select bank1
   844  00A8  1303               	bcf	status, 6	;RP1=0, select bank1
   845  00A9  11AA               	bcf	(170)^080h,3
   846  00AA  2834               	goto	l9215
   847                           	line	169
   848                           	
   849  00AB                     l1545:	
   850  00AB  2834               	goto	l9215
   851                           	line	205
   852                           	
   853  00AC                     l1546:	
   854                           	line	123
   855  00AC  2834               	goto	l9215
   856                           	
   857  00AD                     l1547:	
   858                           	line	208
   859                           ;primarymain.c: 169: }
   860                           ;primarymain.c: 205: }
   861                           ;primarymain.c: 207: return 1;
   862                           ;	Return value of _main is never used
   863                           	
   864  00AD                     l1548:	
   865                           	global	start
   866  00AD  120A  118A  2812   	ljmp	start
   867                           	opt stack 0
   868                           GLOBAL	__end_of_main
   869  00B0                     	__end_of_main:
   870 ;; =============== function _main ends ============
   871                           
   872                           	signat	_main,90
   873                           	global	_Initialise
   874                           psect	text362,local,class=CODE,delta=2
   875                           global __ptext362
   876  0169                     __ptext362:
   877                           
   878 ;; *************** function _Initialise *****************
   879 ;; Defined at:
   880 ;;		line 214 in file "primarymain.c"
   881 ;; Parameters:    Size  Location     Type
   882 ;;		None
   883 ;; Auto vars:     Size  Location     Type
   884 ;;		None
   885 ;; Return value:  Size  Location     Type
   886 ;;		None               void
   887 ;; Registers used:
   888 ;;		wreg, status,2, status,0, pclath, cstack
   889 ;; Tracked objects:
   890 ;;		On entry : 0/0
   891 ;;		On exit  : 0/0
   892 ;;		Unchanged: 0/0
   893 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
   894 ;;      Params:         0       0       0       0       0       0
   895 ;;      Locals:         0       0       0       0       0       0
   896 ;;      Temps:          0       0       0       0       0       0
   897 ;;      Totals:         0       0       0       0       0       0
   898 ;;Total ram usage:        0 bytes
   899 ;; Hardware stack levels used:    1
   900 ;; Hardware stack levels required when called:    4
   901 ;; This function calls:
   902 ;;		_BeginPWM
   903 ;;		_BeginEncoder
   904 ;;		_i2cInit
   905 ;; This function is called by:
   906 ;;		_main
   907 ;; This function uses a non-reentrant model
   908 ;;
   909                           psect	text362
   910                           	file	"primarymain.c"
   911                           	line	214
   912                           	global	__size_of_Initialise
   913  002D                     	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   914                           	
   915  0169                     _Initialise:	
   916                           	opt	stack 3
   917                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   918                           	line	215
   919                           	
   920  0169                     l9177:	
   921                           ;primarymain.c: 215: FLAG = 0;
   922  0169  1683               	bsf	status, 5	;RP0=1, select bank1
   923  016A  1303               	bcf	status, 6	;RP1=0, select bank1
   924  016B  01AA               	clrf	(170)^080h
   925                           	line	216
   926                           	
   927  016C                     l9179:	
   928                           ;primarymain.c: 216: BeginPWM();
   929  016C  120A  118A  21B6   	fcall	_BeginPWM
              120A  118A         
   930                           	line	217
   931                           ;primarymain.c: 217: BeginEncoder();
   932  0171  120A  118A  226E   	fcall	_BeginEncoder
              120A  118A         
   933                           	line	218
   934                           ;primarymain.c: 218: i2cInit(0x10);
   935  0176  3010               	movlw	(010h)
   936  0177  120A  118A  21F1   	fcall	_i2cInit
              120A  118A         
   937                           	line	221
   938                           	
   939  017C                     l9181:	
   940                           ;primarymain.c: 221: PEIE = 1;
   941  017C  170B               	bsf	(94/8),(94)&7
   942                           	line	222
   943                           	
   944  017D                     l9183:	
   945                           ;primarymain.c: 222: RBIE = 1;
   946  017D  158B               	bsf	(91/8),(91)&7
   947                           	line	223
   948                           	
   949  017E                     l9185:	
   950                           ;primarymain.c: 223: T0IE = 0;
   951  017E  128B               	bcf	(93/8),(93)&7
   952                           	line	224
   953                           	
   954  017F                     l9187:	
   955                           ;primarymain.c: 224: PIE1 = 0b00001001;
   956  017F  3009               	movlw	(09h)
   957  0180  1683               	bsf	status, 5	;RP0=1, select bank1
   958  0181  1303               	bcf	status, 6	;RP1=0, select bank1
   959  0182  008C               	movwf	(140)^080h	;volatile
   960                           	line	225
   961                           	
   962  0183                     l9189:	
   963                           ;primarymain.c: 225: PIE2 = 0;
   964  0183  018D               	clrf	(141)^080h	;volatile
   965                           	line	227
   966                           	
   967  0184                     l9191:	
   968                           ;primarymain.c: 227: SSPIF = 0;
   969  0184  1283               	bcf	status, 5	;RP0=0, select bank0
   970  0185  1303               	bcf	status, 6	;RP1=0, select bank0
   971  0186  118C               	bcf	(99/8),(99)&7
   972                           	line	228
   973                           	
   974  0187                     l9193:	
   975                           ;primarymain.c: 228: RBIF = 0;
   976  0187  100B               	bcf	(88/8),(88)&7
   977                           	line	229
   978                           	
   979  0188                     l9195:	
   980                           ;primarymain.c: 229: T0IF = 0;
   981  0188  110B               	bcf	(90/8),(90)&7
   982                           	line	230
   983                           	
   984  0189                     l9197:	
   985                           ;primarymain.c: 230: TMR1IF = 0;
   986  0189  100C               	bcf	(96/8),(96)&7
   987                           	line	232
   988                           	
   989  018A                     l9199:	
   990                           ;primarymain.c: 232: GIE = 1;
   991  018A  178B               	bsf	(95/8),(95)&7
   992                           	line	234
   993                           	
   994  018B                     l9201:	
   995                           ;primarymain.c: 234: TRISB = 0b11110111;
   996  018B  30F7               	movlw	(0F7h)
   997  018C  1683               	bsf	status, 5	;RP0=1, select bank1
   998  018D  1303               	bcf	status, 6	;RP1=0, select bank1
   999  018E  0086               	movwf	(134)^080h	;volatile
  1000                           	line	235
  1001                           	
  1002  018F                     l9203:	
  1003                           ;primarymain.c: 235: PORTBbits.RB3 = 0;
  1004  018F  1283               	bcf	status, 5	;RP0=0, select bank0
  1005  0190  1303               	bcf	status, 6	;RP1=0, select bank0
  1006  0191  1186               	bcf	(6),3	;volatile
  1007                           	line	237
  1008                           	
  1009  0192                     l9205:	
  1010                           ;primarymain.c: 237: TRISD = 0;
  1011  0192  1683               	bsf	status, 5	;RP0=1, select bank1
  1012  0193  1303               	bcf	status, 6	;RP1=0, select bank1
  1013  0194  0188               	clrf	(136)^080h	;volatile
  1014                           	line	238
  1015                           	
  1016  0195                     l1551:	
  1017  0195  0008               	return
  1018                           	opt stack 0
  1019                           GLOBAL	__end_of_Initialise
  1020  0196                     	__end_of_Initialise:
  1021 ;; =============== function _Initialise ends ============
  1022                           
  1023                           	signat	_Initialise,88
  1024                           	global	_i2cInit
  1025                           psect	text363,local,class=CODE,delta=2
  1026                           global __ptext363
  1027  01F1                     __ptext363:
  1028                           
  1029 ;; *************** function _i2cInit *****************
  1030 ;; Defined at:
  1031 ;;		line 17 in file "i2cSlave.c"
  1032 ;; Parameters:    Size  Location     Type
  1033 ;;  address         1    wreg     unsigned char 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  address         1    0[BANK0 ] unsigned char 
  1036 ;; Return value:  Size  Location     Type
  1037 ;;		None               void
  1038 ;; Registers used:
  1039 ;;		wreg
  1040 ;; Tracked objects:
  1041 ;;		On entry : 0/0
  1042 ;;		On exit  : 0/0
  1043 ;;		Unchanged: 0/0
  1044 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1045 ;;      Params:         0       0       0       0       0       0
  1046 ;;      Locals:         0       1       0       0       0       0
  1047 ;;      Temps:          0       0       0       0       0       0
  1048 ;;      Totals:         0       1       0       0       0       0
  1049 ;;Total ram usage:        1 bytes
  1050 ;; Hardware stack levels used:    1
  1051 ;; Hardware stack levels required when called:    3
  1052 ;; This function calls:
  1053 ;;		Nothing
  1054 ;; This function is called by:
  1055 ;;		_Initialise
  1056 ;; This function uses a non-reentrant model
  1057 ;;
  1058                           psect	text363
  1059                           	file	"i2cSlave.c"
  1060                           	line	17
  1061                           	global	__size_of_i2cInit
  1062  001C                     	__size_of_i2cInit	equ	__end_of_i2cInit-_i2cInit
  1063                           	
  1064  01F1                     _i2cInit:	
  1065                           	opt	stack 3
  1066                           ; Regs used in _i2cInit: [wreg]
  1067                           ;i2cInit@address stored from wreg
  1068                           	line	19
  1069  01F1  1283               	bcf	status, 5	;RP0=0, select bank0
  1070  01F2  1303               	bcf	status, 6	;RP1=0, select bank0
  1071  01F3  00A0               	movwf	(i2cInit@address)
  1072                           	
  1073  01F4                     l9093:	
  1074                           ;i2cSlave.c: 19: TRISC6 = 1;
  1075  01F4  1683               	bsf	status, 5	;RP0=1, select bank1
  1076  01F5  1303               	bcf	status, 6	;RP1=0, select bank1
  1077  01F6  1707               	bsf	(1086/8)^080h,(1086)&7
  1078                           	line	20
  1079                           ;i2cSlave.c: 20: TRISC7 = 1;
  1080  01F7  1787               	bsf	(1087/8)^080h,(1087)&7
  1081                           	line	21
  1082                           ;i2cSlave.c: 21: SSPEN = 1;
  1083  01F8  1283               	bcf	status, 5	;RP0=0, select bank0
  1084  01F9  1303               	bcf	status, 6	;RP1=0, select bank0
  1085  01FA  1694               	bsf	(165/8),(165)&7
  1086                           	line	22
  1087                           ;i2cSlave.c: 22: CKE = 0;
  1088  01FB  1683               	bsf	status, 5	;RP0=1, select bank1
  1089  01FC  1303               	bcf	status, 6	;RP1=0, select bank1
  1090  01FD  1314               	bcf	(1190/8)^080h,(1190)&7
  1091                           	line	23
  1092                           ;i2cSlave.c: 23: SMP = 0;
  1093  01FE  1394               	bcf	(1191/8)^080h,(1191)&7
  1094                           	line	24
  1095                           ;i2cSlave.c: 24: CKP = 1;
  1096  01FF  1283               	bcf	status, 5	;RP0=0, select bank0
  1097  0200  1303               	bcf	status, 6	;RP1=0, select bank0
  1098  0201  1614               	bsf	(164/8),(164)&7
  1099                           	line	26
  1100                           ;i2cSlave.c: 26: SSPM0 = 0;
  1101  0202  1014               	bcf	(160/8),(160)&7
  1102                           	line	27
  1103                           ;i2cSlave.c: 27: SSPM1 = 1;
  1104  0203  1494               	bsf	(161/8),(161)&7
  1105                           	line	28
  1106                           ;i2cSlave.c: 28: SSPM2 = 1;
  1107  0204  1514               	bsf	(162/8),(162)&7
  1108                           	line	29
  1109                           ;i2cSlave.c: 29: SSPM3 = 0;
  1110  0205  1194               	bcf	(163/8),(163)&7
  1111                           	line	33
  1112                           	
  1113  0206                     l9095:	
  1114                           ;i2cSlave.c: 33: SSPADD = address;
  1115  0206  0820               	movf	(i2cInit@address),w
  1116  0207  1683               	bsf	status, 5	;RP0=1, select bank1
  1117  0208  1303               	bcf	status, 6	;RP1=0, select bank1
  1118  0209  0093               	movwf	(147)^080h	;volatile
  1119                           	line	39
  1120                           	
  1121  020A                     l9097:	
  1122                           ;i2cSlave.c: 39: i2cBufferVal = 0;
  1123  020A  01FA               	clrf	(_i2cBufferVal)
  1124                           	line	40
  1125                           	
  1126  020B                     l9099:	
  1127                           ;i2cSlave.c: 40: i2cWriteInt = 0;
  1128  020B  01FC               	clrf	(_i2cWriteInt)
  1129                           	line	41
  1130                           	
  1131  020C                     l6106:	
  1132  020C  0008               	return
  1133                           	opt stack 0
  1134                           GLOBAL	__end_of_i2cInit
  1135  020D                     	__end_of_i2cInit:
  1136 ;; =============== function _i2cInit ends ============
  1137                           
  1138                           	signat	_i2cInit,4216
  1139                           	global	_BeginEncoder
  1140                           psect	text364,local,class=CODE,delta=2
  1141                           global __ptext364
  1142  026E                     __ptext364:
  1143                           
  1144 ;; *************** function _BeginEncoder *****************
  1145 ;; Defined at:
  1146 ;;		line 22 in file "enclib.c"
  1147 ;; Parameters:    Size  Location     Type
  1148 ;;		None
  1149 ;; Auto vars:     Size  Location     Type
  1150 ;;		None
  1151 ;; Return value:  Size  Location     Type
  1152 ;;		None               void
  1153 ;; Registers used:
  1154 ;;		wreg
  1155 ;; Tracked objects:
  1156 ;;		On entry : 0/0
  1157 ;;		On exit  : 0/0
  1158 ;;		Unchanged: 0/0
  1159 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1160 ;;      Params:         0       0       0       0       0       0
  1161 ;;      Locals:         0       0       0       0       0       0
  1162 ;;      Temps:          0       0       0       0       0       0
  1163 ;;      Totals:         0       0       0       0       0       0
  1164 ;;Total ram usage:        0 bytes
  1165 ;; Hardware stack levels used:    1
  1166 ;; Hardware stack levels required when called:    3
  1167 ;; This function calls:
  1168 ;;		Nothing
  1169 ;; This function is called by:
  1170 ;;		_Initialise
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           psect	text364
  1174                           	file	"enclib.c"
  1175                           	line	22
  1176                           	global	__size_of_BeginEncoder
  1177  000B                     	__size_of_BeginEncoder	equ	__end_of_BeginEncoder-_BeginEncoder
  1178                           	
  1179  026E                     _BeginEncoder:	
  1180                           	opt	stack 3
  1181                           ; Regs used in _BeginEncoder: [wreg]
  1182                           	line	28
  1183                           	
  1184  026E                     l9091:	
  1185                           ;enclib.c: 28: OPTION_REG = 0b10010111;
  1186  026E  3097               	movlw	(097h)
  1187  026F  1683               	bsf	status, 5	;RP0=1, select bank1
  1188  0270  1303               	bcf	status, 6	;RP1=0, select bank1
  1189  0271  0081               	movwf	(129)^080h	;volatile
  1190                           	line	34
  1191                           ;enclib.c: 34: CMCON1 = 0x02;
  1192  0272  3002               	movlw	(02h)
  1193  0273  0097               	movwf	(151)^080h	;volatile
  1194                           	line	35
  1195                           ;enclib.c: 35: T1CON = 0b00000111;
  1196  0274  3007               	movlw	(07h)
  1197  0275  1283               	bcf	status, 5	;RP0=0, select bank0
  1198  0276  1303               	bcf	status, 6	;RP1=0, select bank0
  1199  0277  0090               	movwf	(16)	;volatile
  1200                           	line	36
  1201                           	
  1202  0278                     l4594:	
  1203  0278  0008               	return
  1204                           	opt stack 0
  1205                           GLOBAL	__end_of_BeginEncoder
  1206  0279                     	__end_of_BeginEncoder:
  1207 ;; =============== function _BeginEncoder ends ============
  1208                           
  1209                           	signat	_BeginEncoder,88
  1210                           	global	_BeginPWM
  1211                           psect	text365,local,class=CODE,delta=2
  1212                           global __ptext365
  1213  01B6                     __ptext365:
  1214                           
  1215 ;; *************** function _BeginPWM *****************
  1216 ;; Defined at:
  1217 ;;		line 41 in file "pwmlib.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;		None
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;		None               void
  1224 ;; Registers used:
  1225 ;;		wreg, status,2
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1231 ;;      Params:         0       0       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0       0
  1234 ;;      Totals:         0       0       0       0       0       0
  1235 ;;Total ram usage:        0 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    3
  1238 ;; This function calls:
  1239 ;;		Nothing
  1240 ;; This function is called by:
  1241 ;;		_Initialise
  1242 ;; This function uses a non-reentrant model
  1243 ;;
  1244                           psect	text365
  1245                           	file	"pwmlib.c"
  1246                           	line	41
  1247                           	global	__size_of_BeginPWM
  1248  001E                     	__size_of_BeginPWM	equ	__end_of_BeginPWM-_BeginPWM
  1249                           	
  1250  01B6                     _BeginPWM:	
  1251                           	opt	stack 3
  1252                           ; Regs used in _BeginPWM: [wreg+status,2]
  1253                           	line	44
  1254                           	
  1255  01B6                     l9073:	
  1256                           ;pwmlib.c: 44: TRISDbits.TRISD2 = 1;
  1257  01B6  1683               	bsf	status, 5	;RP0=1, select bank1
  1258  01B7  1303               	bcf	status, 6	;RP1=0, select bank1
  1259  01B8  1508               	bsf	(136)^080h,2	;volatile
  1260                           	line	47
  1261                           ;pwmlib.c: 47: PIE1bits.TMR2IE = 0;
  1262  01B9  108C               	bcf	(140)^080h,1	;volatile
  1263                           	line	51
  1264                           	
  1265  01BA                     l9075:	
  1266                           ;pwmlib.c: 51: PR2 = 0xFF;
  1267  01BA  30FF               	movlw	(0FFh)
  1268  01BB  0092               	movwf	(146)^080h	;volatile
  1269                           	line	55
  1270                           ;pwmlib.c: 55: CCP2CON = 0b00001100;
  1271  01BC  300C               	movlw	(0Ch)
  1272  01BD  1283               	bcf	status, 5	;RP0=0, select bank0
  1273  01BE  1303               	bcf	status, 6	;RP1=0, select bank0
  1274  01BF  009D               	movwf	(29)	;volatile
  1275                           	line	59
  1276                           	
  1277  01C0                     l9077:	
  1278                           ;pwmlib.c: 59: CCPR2L = 0;
  1279  01C0  019B               	clrf	(27)	;volatile
  1280                           	line	60
  1281                           	
  1282  01C1                     l9079:	
  1283                           ;pwmlib.c: 60: CCP2CONbits.CCP2X = 0;
  1284  01C1  129D               	bcf	(29),5	;volatile
  1285                           	line	61
  1286                           	
  1287  01C2                     l9081:	
  1288                           ;pwmlib.c: 61: CCP2CONbits.CCP2Y = 0;
  1289  01C2  121D               	bcf	(29),4	;volatile
  1290                           	line	66
  1291                           	
  1292  01C3                     l9083:	
  1293                           ;pwmlib.c: 66: PIR1bits.TMR2IF = 0;
  1294  01C3  108C               	bcf	(12),1	;volatile
  1295                           	line	70
  1296                           	
  1297  01C4                     l9085:	
  1298                           ;pwmlib.c: 70: T2CON = 0b00000100;
  1299  01C4  3004               	movlw	(04h)
  1300  01C5  0092               	movwf	(18)	;volatile
  1301  01C6  29C7               	goto	l9087
  1302                           	line	75
  1303                           ;pwmlib.c: 75: while(1)
  1304                           	
  1305  01C7                     l3088:	
  1306                           	line	77
  1307                           	
  1308  01C7                     l9087:	
  1309                           ;pwmlib.c: 76: {
  1310                           ;pwmlib.c: 77: if(PIR1bits.TMR2IF == 1)
  1311  01C7  1283               	bcf	status, 5	;RP0=0, select bank0
  1312  01C8  1C8C               	btfss	(12),1	;volatile
  1313  01C9  29CB               	goto	u2501
  1314  01CA  29CC               	goto	u2500
  1315  01CB                     u2501:
  1316  01CB  29C7               	goto	l9087
  1317  01CC                     u2500:
  1318                           	line	79
  1319                           	
  1320  01CC                     l9089:	
  1321                           ;pwmlib.c: 78: {
  1322                           ;pwmlib.c: 79: TMR2IF = 0;
  1323  01CC  108C               	bcf	(97/8),(97)&7
  1324                           	line	80
  1325                           ;pwmlib.c: 80: TRISDbits.TRISD2 = 0;
  1326  01CD  1683               	bsf	status, 5	;RP0=1, select bank1
  1327  01CE  1303               	bcf	status, 6	;RP1=0, select bank1
  1328  01CF  1108               	bcf	(136)^080h,2	;volatile
  1329                           	line	81
  1330                           ;pwmlib.c: 81: break;
  1331  01D0  29D3               	goto	l3092
  1332                           	line	82
  1333                           	
  1334  01D1                     l3089:	
  1335  01D1  29C7               	goto	l9087
  1336                           	line	83
  1337                           	
  1338  01D2                     l3091:	
  1339                           	line	75
  1340  01D2  29C7               	goto	l9087
  1341                           	
  1342  01D3                     l3090:	
  1343                           	line	84
  1344                           	
  1345  01D3                     l3092:	
  1346  01D3  0008               	return
  1347                           	opt stack 0
  1348                           GLOBAL	__end_of_BeginPWM
  1349  01D4                     	__end_of_BeginPWM:
  1350 ;; =============== function _BeginPWM ends ============
  1351                           
  1352                           	signat	_BeginPWM,88
  1353                           	global	_UpdateData
  1354                           psect	text366,local,class=CODE,delta=2
  1355                           global __ptext366
  1356  020D                     __ptext366:
  1357                           
  1358 ;; *************** function _UpdateData *****************
  1359 ;; Defined at:
  1360 ;;		line 279 in file "primarymain.c"
  1361 ;; Parameters:    Size  Location     Type
  1362 ;;  t               2    0[BANK0 ] int 
  1363 ;;  c               2    2[BANK0 ] int 
  1364 ;; Auto vars:     Size  Location     Type
  1365 ;;		None
  1366 ;; Return value:  Size  Location     Type
  1367 ;;		None               void
  1368 ;; Registers used:
  1369 ;;		wreg, status,2, status,0
  1370 ;; Tracked objects:
  1371 ;;		On entry : 0/0
  1372 ;;		On exit  : 0/0
  1373 ;;		Unchanged: 0/0
  1374 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1375 ;;      Params:         0       4       0       0       0       0
  1376 ;;      Locals:         0       0       0       0       0       0
  1377 ;;      Temps:          0       0       0       0       0       0
  1378 ;;      Totals:         0       4       0       0       0       0
  1379 ;;Total ram usage:        4 bytes
  1380 ;; Hardware stack levels used:    1
  1381 ;; Hardware stack levels required when called:    3
  1382 ;; This function calls:
  1383 ;;		Nothing
  1384 ;; This function is called by:
  1385 ;;		_main
  1386 ;; This function uses a non-reentrant model
  1387 ;;
  1388                           psect	text366
  1389                           	file	"primarymain.c"
  1390                           	line	279
  1391                           	global	__size_of_UpdateData
  1392  0017                     	__size_of_UpdateData	equ	__end_of_UpdateData-_UpdateData
  1393                           	
  1394  020D                     _UpdateData:	
  1395                           	opt	stack 4
  1396                           ; Regs used in _UpdateData: [wreg+status,2+status,0]
  1397                           	line	283
  1398                           	
  1399  020D                     l9067:	
  1400                           ;primarymain.c: 283: if (DIR_READ == 0)
  1401  020D  1283               	bcf	status, 5	;RP0=0, select bank0
  1402  020E  1303               	bcf	status, 6	;RP1=0, select bank0
  1403  020F  083E               	movf	((_DIR_READ+1)),w
  1404  0210  043D               	iorwf	((_DIR_READ)),w
  1405  0211  1D03               	skipz
  1406  0212  2A14               	goto	u2491
  1407  0213  2A15               	goto	u2490
  1408  0214                     u2491:
  1409  0214  2A1C               	goto	l9071
  1410  0215                     u2490:
  1411                           	line	286
  1412                           	
  1413  0215                     l9069:	
  1414                           ;primarymain.c: 284: {
  1415                           ;primarymain.c: 286: COUNTS += c;
  1416  0215  0822               	movf	(UpdateData@c),w
  1417  0216  07B9               	addwf	(_COUNTS),f
  1418  0217  1803               	skipnc
  1419  0218  0ABA               	incf	(_COUNTS+1),f
  1420  0219  0823               	movf	(UpdateData@c+1),w
  1421  021A  07BA               	addwf	(_COUNTS+1),f
  1422                           	line	287
  1423                           ;primarymain.c: 287: } else
  1424  021B  2A23               	goto	l1569
  1425                           	
  1426  021C                     l1567:	
  1427                           	line	290
  1428                           	
  1429  021C                     l9071:	
  1430                           ;primarymain.c: 288: {
  1431                           ;primarymain.c: 290: COUNTS -= c;
  1432  021C  0822               	movf	(UpdateData@c),w
  1433  021D  02B9               	subwf	(_COUNTS),f
  1434  021E  0823               	movf	(UpdateData@c+1),w
  1435  021F  1C03               	skipc
  1436  0220  03BA               	decf	(_COUNTS+1),f
  1437  0221  02BA               	subwf	(_COUNTS+1),f
  1438  0222  2A23               	goto	l1569
  1439                           	line	291
  1440                           	
  1441  0223                     l1568:	
  1442                           	line	292
  1443                           	
  1444  0223                     l1569:	
  1445  0223  0008               	return
  1446                           	opt stack 0
  1447                           GLOBAL	__end_of_UpdateData
  1448  0224                     	__end_of_UpdateData:
  1449 ;; =============== function _UpdateData ends ============
  1450                           
  1451                           	signat	_UpdateData,8312
  1452                           	global	_EncUpdate
  1453                           psect	text367,local,class=CODE,delta=2
  1454                           global __ptext367
  1455  01D4                     __ptext367:
  1456                           
  1457 ;; *************** function _EncUpdate *****************
  1458 ;; Defined at:
  1459 ;;		line 42 in file "enclib.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;  t0              2    0[BANK0 ] PTR int 
  1462 ;;		 -> RAM(512), 
  1463 ;;  t1              2    2[BANK0 ] PTR int 
  1464 ;;		 -> RAM(512), 
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;		None               void
  1469 ;; Registers used:
  1470 ;;		wreg, fsr0l, fsr0h, status,2
  1471 ;; Tracked objects:
  1472 ;;		On entry : 0/0
  1473 ;;		On exit  : 0/0
  1474 ;;		Unchanged: 0/0
  1475 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1476 ;;      Params:         0       4       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0       0
  1478 ;;      Temps:          0       2       0       0       0       0
  1479 ;;      Totals:         0       6       0       0       0       0
  1480 ;;Total ram usage:        6 bytes
  1481 ;; Hardware stack levels used:    1
  1482 ;; Hardware stack levels required when called:    3
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           psect	text367
  1490                           	file	"enclib.c"
  1491                           	line	42
  1492                           	global	__size_of_EncUpdate
  1493  001D                     	__size_of_EncUpdate	equ	__end_of_EncUpdate-_EncUpdate
  1494                           	
  1495  01D4                     _EncUpdate:	
  1496                           	opt	stack 4
  1497                           ; Regs used in _EncUpdate: [wreg-fsr0h+status,2]
  1498                           	line	43
  1499                           	
  1500  01D4                     l9061:	
  1501                           ;enclib.c: 43: *t1 = TMR1;
  1502  01D4  1283               	bcf	status, 5	;RP0=0, select bank0
  1503  01D5  1303               	bcf	status, 6	;RP1=0, select bank0
  1504  01D6  0822               	movf	(EncUpdate@t1),w
  1505  01D7  0084               	movwf	fsr0
  1506  01D8  1783               	bsf	status,7
  1507  01D9  1C23               	btfss	(EncUpdate@t1+1),0
  1508  01DA  1383               	bcf	status,7
  1509  01DB  080E               	movf	(14),w	;volatile
  1510  01DC  0080               	movwf	indf
  1511  01DD  0A84               	incf	fsr0,f
  1512  01DE  080F               	movf	(14+1),w	;volatile
  1513  01DF  0080               	movwf	indf
  1514                           	line	44
  1515                           ;enclib.c: 44: *t0 = TMR0;
  1516  01E0  0801               	movf	(1),w	;volatile
  1517  01E1  00A4               	movwf	(??_EncUpdate+0)+0
  1518  01E2  01A5               	clrf	(??_EncUpdate+0)+0+1
  1519  01E3  0820               	movf	(EncUpdate@t0),w
  1520  01E4  0084               	movwf	fsr0
  1521  01E5  1783               	bsf	status,7
  1522  01E6  1C21               	btfss	(EncUpdate@t0+1),0
  1523  01E7  1383               	bcf	status,7
  1524  01E8  0824               	movf	0+(??_EncUpdate+0)+0,w
  1525  01E9  0080               	movwf	indf
  1526  01EA  0A84               	incf	fsr0,f
  1527  01EB  0825               	movf	1+(??_EncUpdate+0)+0,w
  1528  01EC  0080               	movwf	indf
  1529                           	line	45
  1530                           	
  1531  01ED                     l9063:	
  1532                           ;enclib.c: 45: TMR1 = 0;
  1533  01ED  018E               	clrf	(14)	;volatile
  1534  01EE  018F               	clrf	(14+1)	;volatile
  1535                           	line	46
  1536                           	
  1537  01EF                     l9065:	
  1538                           ;enclib.c: 46: TMR0 = 0;
  1539  01EF  0181               	clrf	(1)	;volatile
  1540                           	line	47
  1541                           	
  1542  01F0                     l4597:	
  1543  01F0  0008               	return
  1544                           	opt stack 0
  1545                           GLOBAL	__end_of_EncUpdate
  1546  01F1                     	__end_of_EncUpdate:
  1547 ;; =============== function _EncUpdate ends ============
  1548                           
  1549                           	signat	_EncUpdate,8312
  1550                           	global	_setDirection
  1551                           psect	text368,local,class=CODE,delta=2
  1552                           global __ptext368
  1553  0224                     __ptext368:
  1554                           
  1555 ;; *************** function _setDirection *****************
  1556 ;; Defined at:
  1557 ;;		line 297 in file "primarymain.c"
  1558 ;; Parameters:    Size  Location     Type
  1559 ;;  dir             2    0[BANK0 ] int 
  1560 ;; Auto vars:     Size  Location     Type
  1561 ;;		None
  1562 ;; Return value:  Size  Location     Type
  1563 ;;		None               void
  1564 ;; Registers used:
  1565 ;;		wreg, status,2, status,0
  1566 ;; Tracked objects:
  1567 ;;		On entry : 0/0
  1568 ;;		On exit  : 0/0
  1569 ;;		Unchanged: 0/0
  1570 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1571 ;;      Params:         0       2       0       0       0       0
  1572 ;;      Locals:         0       0       0       0       0       0
  1573 ;;      Temps:          0       0       0       0       0       0
  1574 ;;      Totals:         0       2       0       0       0       0
  1575 ;;Total ram usage:        2 bytes
  1576 ;; Hardware stack levels used:    1
  1577 ;; Hardware stack levels required when called:    3
  1578 ;; This function calls:
  1579 ;;		Nothing
  1580 ;; This function is called by:
  1581 ;;		_main
  1582 ;; This function uses a non-reentrant model
  1583 ;;
  1584                           psect	text368
  1585                           	file	"primarymain.c"
  1586                           	line	297
  1587                           	global	__size_of_setDirection
  1588  0017                     	__size_of_setDirection	equ	__end_of_setDirection-_setDirection
  1589                           	
  1590  0224                     _setDirection:	
  1591                           	opt	stack 4
  1592                           ; Regs used in _setDirection: [wreg+status,2+status,0]
  1593                           	line	298
  1594                           	
  1595  0224                     l9053:	
  1596                           ;primarymain.c: 298: if (dir == 0)
  1597  0224  1283               	bcf	status, 5	;RP0=0, select bank0
  1598  0225  1303               	bcf	status, 6	;RP1=0, select bank0
  1599  0226  0821               	movf	((setDirection@dir+1)),w
  1600  0227  0420               	iorwf	((setDirection@dir)),w
  1601  0228  1D03               	skipz
  1602  0229  2A2B               	goto	u2471
  1603  022A  2A2C               	goto	u2470
  1604  022B                     u2471:
  1605  022B  2A2E               	goto	l9057
  1606  022C                     u2470:
  1607                           	line	299
  1608                           	
  1609  022C                     l9055:	
  1610                           ;primarymain.c: 299: PORTBbits.RB3 = 0;
  1611  022C  1186               	bcf	(6),3	;volatile
  1612  022D  2A3A               	goto	l1576
  1613                           	line	300
  1614                           	
  1615  022E                     l1572:	
  1616                           	
  1617  022E                     l9057:	
  1618                           ;primarymain.c: 300: else if (dir == 1)
  1619  022E  3001               	movlw	01h
  1620  022F  0620               	xorwf	(setDirection@dir),w
  1621  0230  0421               	iorwf	(setDirection@dir+1),w
  1622  0231  1D03               	skipz
  1623  0232  2A34               	goto	u2481
  1624  0233  2A35               	goto	u2480
  1625  0234                     u2481:
  1626  0234  2A37               	goto	l1574
  1627  0235                     u2480:
  1628                           	line	301
  1629                           	
  1630  0235                     l9059:	
  1631                           ;primarymain.c: 301: PORTBbits.RB3 = !0;
  1632  0235  1586               	bsf	(6),3	;volatile
  1633  0236  2A3A               	goto	l1576
  1634                           	line	302
  1635                           	
  1636  0237                     l1574:	
  1637                           	line	303
  1638                           ;primarymain.c: 302: else
  1639                           ;primarymain.c: 303: PORTBbits.RB3 = 0;
  1640  0237  1186               	bcf	(6),3	;volatile
  1641  0238  2A3A               	goto	l1576
  1642                           	
  1643  0239                     l1575:	
  1644  0239  2A3A               	goto	l1576
  1645                           	
  1646  023A                     l1573:	
  1647                           	line	304
  1648                           	
  1649  023A                     l1576:	
  1650  023A  0008               	return
  1651                           	opt stack 0
  1652                           GLOBAL	__end_of_setDirection
  1653  023B                     	__end_of_setDirection:
  1654 ;; =============== function _setDirection ends ============
  1655                           
  1656                           	signat	_setDirection,4216
  1657                           	global	_SetPulse
  1658                           psect	text369,local,class=CODE,delta=2
  1659                           global __ptext369
  1660  0196                     __ptext369:
  1661                           
  1662 ;; *************** function _SetPulse *****************
  1663 ;; Defined at:
  1664 ;;		line 105 in file "pwmlib.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  length          2    0[BANK0 ] int 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  temp            2    2[BANK0 ] int 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;		None               void
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, btemp+1
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1678 ;;      Params:         0       2       0       0       0       0
  1679 ;;      Locals:         0       2       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0
  1681 ;;      Totals:         0       4       0       0       0       0
  1682 ;;Total ram usage:        4 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    3
  1685 ;; This function calls:
  1686 ;;		Nothing
  1687 ;; This function is called by:
  1688 ;;		_main
  1689 ;;		_CalcPulse
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           psect	text369
  1693                           	file	"pwmlib.c"
  1694                           	line	105
  1695                           	global	__size_of_SetPulse
  1696  0020                     	__size_of_SetPulse	equ	__end_of_SetPulse-_SetPulse
  1697                           	
  1698  0196                     _SetPulse:	
  1699                           	opt	stack 4
  1700                           ; Regs used in _SetPulse: [wreg+status,2+status,0+btemp+1]
  1701                           	line	106
  1702                           	
  1703  0196                     l9047:	
  1704                           ;pwmlib.c: 106: int temp = length;
  1705  0196  1283               	bcf	status, 5	;RP0=0, select bank0
  1706  0197  1303               	bcf	status, 6	;RP1=0, select bank0
  1707  0198  0821               	movf	(SetPulse@length+1),w
  1708  0199  01A3               	clrf	(SetPulse@temp+1)
  1709  019A  07A3               	addwf	(SetPulse@temp+1)
  1710  019B  0820               	movf	(SetPulse@length),w
  1711  019C  01A2               	clrf	(SetPulse@temp)
  1712  019D  07A2               	addwf	(SetPulse@temp)
  1713                           
  1714                           	line	107
  1715                           	
  1716  019E                     l9049:	
  1717                           ;pwmlib.c: 107: if (temp > 255)
  1718  019E  0823               	movf	(SetPulse@temp+1),w
  1719  019F  3A80               	xorlw	80h
  1720  01A0  00FF               	movwf	btemp+1
  1721  01A1  3081               	movlw	(high(0100h))^80h
  1722  01A2  027F               	subwf	btemp+1,w
  1723  01A3  1D03               	skipz
  1724  01A4  29A7               	goto	u2465
  1725  01A5  3000               	movlw	low(0100h)
  1726  01A6  0222               	subwf	(SetPulse@temp),w
  1727  01A7                     u2465:
  1728                           
  1729  01A7  1C03               	skipc
  1730  01A8  29AA               	goto	u2461
  1731  01A9  29AB               	goto	u2460
  1732  01AA                     u2461:
  1733  01AA  29B1               	goto	l3099
  1734  01AB                     u2460:
  1735                           	line	108
  1736                           	
  1737  01AB                     l9051:	
  1738                           ;pwmlib.c: 108: temp = 255;
  1739  01AB  30FF               	movlw	low(0FFh)
  1740  01AC  1283               	bcf	status, 5	;RP0=0, select bank0
  1741  01AD  1303               	bcf	status, 6	;RP1=0, select bank0
  1742  01AE  00A2               	movwf	(SetPulse@temp)
  1743  01AF  3000               	movlw	high(0FFh)
  1744  01B0  00A3               	movwf	((SetPulse@temp))+1
  1745                           	
  1746  01B1                     l3099:	
  1747                           	line	109
  1748                           ;pwmlib.c: 109: CCPR2L = temp;
  1749  01B1  1283               	bcf	status, 5	;RP0=0, select bank0
  1750  01B2  1303               	bcf	status, 6	;RP1=0, select bank0
  1751  01B3  0822               	movf	(SetPulse@temp),w
  1752  01B4  009B               	movwf	(27)	;volatile
  1753                           	line	113
  1754                           	
  1755  01B5                     l3100:	
  1756  01B5  0008               	return
  1757                           	opt stack 0
  1758                           GLOBAL	__end_of_SetPulse
  1759  01B6                     	__end_of_SetPulse:
  1760 ;; =============== function _SetPulse ends ============
  1761                           
  1762                           	signat	_SetPulse,4216
  1763                           	global	_isr
  1764                           psect	text370,local,class=CODE,delta=2
  1765                           global __ptext370
  1766  0117                     __ptext370:
  1767                           
  1768 ;; *************** function _isr *****************
  1769 ;; Defined at:
  1770 ;;		line 243 in file "primarymain.c"
  1771 ;; Parameters:    Size  Location     Type
  1772 ;;		None
  1773 ;; Auto vars:     Size  Location     Type
  1774 ;;		None
  1775 ;; Return value:  Size  Location     Type
  1776 ;;		None               void
  1777 ;; Registers used:
  1778 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1779 ;; Tracked objects:
  1780 ;;		On entry : 0/0
  1781 ;;		On exit  : 0/0
  1782 ;;		Unchanged: 0/0
  1783 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1784 ;;      Params:         0       0       0       0       0       0
  1785 ;;      Locals:         0       0       0       0       0       0
  1786 ;;      Temps:          6       0       0       0       0       0
  1787 ;;      Totals:         6       0       0       0       0       0
  1788 ;;Total ram usage:        6 bytes
  1789 ;; Hardware stack levels used:    1
  1790 ;; Hardware stack levels required when called:    2
  1791 ;; This function calls:
  1792 ;;		_i2cIsrHandler
  1793 ;; This function is called by:
  1794 ;;		Interrupt level 1
  1795 ;; This function uses a non-reentrant model
  1796 ;;
  1797                           psect	text370
  1798                           	file	"primarymain.c"
  1799                           	line	243
  1800                           	global	__size_of_isr
  1801  0052                     	__size_of_isr	equ	__end_of_isr-_isr
  1802                           	
  1803  0117                     _isr:	
  1804                           	opt	stack 3
  1805                           ; Regs used in _isr: [allreg]
  1806                           psect	intentry,class=CODE,delta=2
  1807                           global __pintentry
  1808  0004                     __pintentry:
  1809                           global interrupt_function
  1810  0004                     interrupt_function:
  1811                           	global saved_w
  1812  007E                     	saved_w	set	btemp+0
  1813  0004  00FE               	movwf	saved_w
  1814  0005  0E03               	swapf	status,w
  1815  0006  00F6               	movwf	(??_isr+2)
  1816  0007  0804               	movf	fsr0,w
  1817  0008  00F7               	movwf	(??_isr+3)
  1818  0009  080A               	movf	pclath,w
  1819  000A  00F8               	movwf	(??_isr+4)
  1820  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1821  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1822  000D  087F               	movf	btemp+1,w
  1823  000E  00F9               	movwf	(??_isr+5)
  1824  000F  120A  118A  2917   	ljmp	_isr
  1825                           psect	text370
  1826                           	line	244
  1827                           	
  1828  0117                     i1l9101:	
  1829                           ;primarymain.c: 244: if (SSPIF == 1)
  1830  0117  1D8C               	btfss	(99/8),(99)&7
  1831  0118  291A               	goto	u251_21
  1832  0119  291B               	goto	u251_20
  1833  011A                     u251_21:
  1834  011A  2921               	goto	i1l1554
  1835  011B                     u251_20:
  1836                           	line	248
  1837                           	
  1838  011B                     i1l9103:	
  1839                           ;primarymain.c: 245: {
  1840                           ;primarymain.c: 248: i2cIsrHandler();
  1841  011B  120A  118A  20B0   	fcall	_i2cIsrHandler
              120A  118A         
  1842                           	line	249
  1843                           ;primarymain.c: 249: } else if (T0IF == 1)
  1844  0120  295C               	goto	i1l1564
  1845                           	
  1846  0121                     i1l1554:	
  1847  0121  1D0B               	btfss	(90/8),(90)&7
  1848  0122  2924               	goto	u252_21
  1849  0123  2925               	goto	u252_20
  1850  0124                     u252_21:
  1851  0124  2927               	goto	i1l1556
  1852  0125                     u252_20:
  1853                           	line	252
  1854                           	
  1855  0125                     i1l9105:	
  1856                           ;primarymain.c: 250: {
  1857                           ;primarymain.c: 252: T0IF = 0;
  1858  0125  110B               	bcf	(90/8),(90)&7
  1859                           	line	253
  1860                           ;primarymain.c: 253: } else if (TMR1IF == 1)
  1861  0126  295C               	goto	i1l1564
  1862                           	
  1863  0127                     i1l1556:	
  1864  0127  1C0C               	btfss	(96/8),(96)&7
  1865  0128  292A               	goto	u253_21
  1866  0129  292B               	goto	u253_20
  1867  012A                     u253_21:
  1868  012A  292D               	goto	i1l1558
  1869  012B                     u253_20:
  1870                           	line	256
  1871                           	
  1872  012B                     i1l9107:	
  1873                           ;primarymain.c: 256: TMR1IF = 0;
  1874  012B  100C               	bcf	(96/8),(96)&7
  1875                           	line	257
  1876                           ;primarymain.c: 257: } else if (RBIF == 1)
  1877  012C  295C               	goto	i1l1564
  1878                           	
  1879  012D                     i1l1558:	
  1880  012D  1C0B               	btfss	(88/8),(88)&7
  1881  012E  2930               	goto	u254_21
  1882  012F  2931               	goto	u254_20
  1883  0130                     u254_21:
  1884  0130  2951               	goto	i1l9119
  1885  0131                     u254_20:
  1886                           	line	259
  1887                           	
  1888  0131                     i1l9109:	
  1889                           ;primarymain.c: 258: {
  1890                           ;primarymain.c: 259: if (RB5 != DIR_READ)
  1891  0131  1003               	clrc
  1892  0132  1A86               	btfsc	(53/8),(53)&7
  1893  0133  1403               	setc
  1894  0134  3000               	movlw	0
  1895  0135  1803               	skipnc
  1896  0136  3001               	movlw	1
  1897                           
  1898  0137  00F4               	movwf	(??_isr+0)+0
  1899  0138  01F5               	clrf	(??_isr+0)+0+1
  1900  0139  083E               	movf	(_DIR_READ+1),w
  1901  013A  0675               	xorwf	1+(??_isr+0)+0,w
  1902  013B  1D03               	skipz
  1903  013C  293F               	goto	u255_25
  1904  013D  083D               	movf	(_DIR_READ),w
  1905  013E  0674               	xorwf	0+(??_isr+0)+0,w
  1906  013F                     u255_25:
  1907                           
  1908  013F  1903               	skipnz
  1909  0140  2942               	goto	u255_21
  1910  0141  2943               	goto	u255_20
  1911  0142                     u255_21:
  1912  0142  2947               	goto	i1l9113
  1913  0143                     u255_20:
  1914                           	line	261
  1915                           	
  1916  0143                     i1l9111:	
  1917                           ;primarymain.c: 260: {
  1918                           ;primarymain.c: 261: F.DIR = 1;
  1919  0143  1683               	bsf	status, 5	;RP0=1, select bank1
  1920  0144  1303               	bcf	status, 6	;RP1=0, select bank1
  1921  0145  15AA               	bsf	(170)^080h,3
  1922                           	line	262
  1923                           ;primarymain.c: 262: } else
  1924  0146  294F               	goto	i1l9117
  1925                           	
  1926  0147                     i1l1561:	
  1927                           	line	264
  1928                           	
  1929  0147                     i1l9113:	
  1930                           ;primarymain.c: 263: {
  1931                           ;primarymain.c: 264: TRISD = 0;
  1932  0147  1683               	bsf	status, 5	;RP0=1, select bank1
  1933  0148  1303               	bcf	status, 6	;RP1=0, select bank1
  1934  0149  0188               	clrf	(136)^080h	;volatile
  1935                           	line	265
  1936                           	
  1937  014A                     i1l9115:	
  1938                           ;primarymain.c: 265: PORTD = 0xE0;
  1939  014A  30E0               	movlw	(0E0h)
  1940  014B  1283               	bcf	status, 5	;RP0=0, select bank0
  1941  014C  1303               	bcf	status, 6	;RP1=0, select bank0
  1942  014D  0088               	movwf	(8)	;volatile
  1943  014E  294F               	goto	i1l9117
  1944                           	line	266
  1945                           	
  1946  014F                     i1l1562:	
  1947                           	line	267
  1948                           	
  1949  014F                     i1l9117:	
  1950                           ;primarymain.c: 266: }
  1951                           ;primarymain.c: 267: RBIF = 0;
  1952  014F  100B               	bcf	(88/8),(88)&7
  1953                           	line	268
  1954                           ;primarymain.c: 268: } else
  1955  0150  295C               	goto	i1l1564
  1956                           	
  1957  0151                     i1l1560:	
  1958                           	line	270
  1959                           	
  1960  0151                     i1l9119:	
  1961                           ;primarymain.c: 269: {
  1962                           ;primarymain.c: 270: TRISD = 0;
  1963  0151  1683               	bsf	status, 5	;RP0=1, select bank1
  1964  0152  1303               	bcf	status, 6	;RP1=0, select bank1
  1965  0153  0188               	clrf	(136)^080h	;volatile
  1966                           	line	271
  1967                           	
  1968  0154                     i1l9121:	
  1969                           ;primarymain.c: 271: PORTD = 0xF0;
  1970  0154  30F0               	movlw	(0F0h)
  1971  0155  1283               	bcf	status, 5	;RP0=0, select bank0
  1972  0156  1303               	bcf	status, 6	;RP1=0, select bank0
  1973  0157  0088               	movwf	(8)	;volatile
  1974  0158  295C               	goto	i1l1564
  1975                           	line	272
  1976                           	
  1977  0159                     i1l1563:	
  1978  0159  295C               	goto	i1l1564
  1979                           	
  1980  015A                     i1l1559:	
  1981  015A  295C               	goto	i1l1564
  1982                           	
  1983  015B                     i1l1557:	
  1984  015B  295C               	goto	i1l1564
  1985                           	
  1986  015C                     i1l1555:	
  1987                           	line	273
  1988                           	
  1989  015C                     i1l1564:	
  1990  015C  0879               	movf	(??_isr+5),w
  1991  015D  1283               	bcf	status, 5	;RP0=0, select bank0
  1992  015E  1303               	bcf	status, 6	;RP1=0, select bank0
  1993  015F  00FF               	movwf	btemp+1
  1994  0160  0878               	movf	(??_isr+4),w
  1995  0161  008A               	movwf	pclath
  1996  0162  0877               	movf	(??_isr+3),w
  1997  0163  0084               	movwf	fsr0
  1998  0164  0E76               	swapf	(??_isr+2)^0FFFFFF80h,w
  1999  0165  0083               	movwf	status
  2000  0166  0EFE               	swapf	saved_w,f
  2001  0167  0E7E               	swapf	saved_w,w
  2002  0168  0009               	retfie
  2003                           	opt stack 0
  2004                           GLOBAL	__end_of_isr
  2005  0169                     	__end_of_isr:
  2006 ;; =============== function _isr ends ============
  2007                           
  2008                           	signat	_isr,88
  2009                           	global	_i2cIsrHandler
  2010                           psect	text371,local,class=CODE,delta=2
  2011                           global __ptext371
  2012  00B0                     __ptext371:
  2013                           
  2014 ;; *************** function _i2cIsrHandler *****************
  2015 ;; Defined at:
  2016 ;;		line 43 in file "i2cSlave.c"
  2017 ;; Parameters:    Size  Location     Type
  2018 ;;		None
  2019 ;; Auto vars:     Size  Location     Type
  2020 ;;		None
  2021 ;; Return value:  Size  Location     Type
  2022 ;;		None               void
  2023 ;; Registers used:
  2024 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2025 ;; Tracked objects:
  2026 ;;		On entry : 0/0
  2027 ;;		On exit  : 0/0
  2028 ;;		Unchanged: 0/0
  2029 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  2030 ;;      Params:         0       0       0       0       0       0
  2031 ;;      Locals:         0       0       0       0       0       0
  2032 ;;      Temps:          1       0       0       0       0       0
  2033 ;;      Totals:         1       0       0       0       0       0
  2034 ;;Total ram usage:        1 bytes
  2035 ;; Hardware stack levels used:    1
  2036 ;; Hardware stack levels required when called:    1
  2037 ;; This function calls:
  2038 ;;		_i2cSend
  2039 ;;		_i2cDataUpdate
  2040 ;; This function is called by:
  2041 ;;		_isr
  2042 ;; This function uses a non-reentrant model
  2043 ;;
  2044                           psect	text371
  2045                           	file	"i2cSlave.c"
  2046                           	line	43
  2047                           	global	__size_of_i2cIsrHandler
  2048  0067                     	__size_of_i2cIsrHandler	equ	__end_of_i2cIsrHandler-_i2cIsrHandler
  2049                           	
  2050  00B0                     _i2cIsrHandler:	
  2051                           	opt	stack 3
  2052                           ; Regs used in _i2cIsrHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2053                           	line	53
  2054                           	
  2055  00B0                     i1l9123:	
  2056                           ;i2cSlave.c: 53: if ((SSPSTAT & 0b00100100) == 0b00100000){
  2057  00B0  1683               	bsf	status, 5	;RP0=1, select bank1
  2058  00B1  1303               	bcf	status, 6	;RP1=0, select bank1
  2059  00B2  0814               	movf	(148)^080h,w
  2060  00B3  3924               	andlw	024h
  2061  00B4  3A20               	xorlw	020h
  2062  00B5  1D03               	skipz
  2063  00B6  28B8               	goto	u256_21
  2064  00B7  28B9               	goto	u256_20
  2065  00B8                     u256_21:
  2066  00B8  28C8               	goto	i1l9129
  2067  00B9                     u256_20:
  2068                           	line	54
  2069                           	
  2070  00B9                     i1l9125:	
  2071                           ;i2cSlave.c: 54: i2cBuffer[i2cBufferVal] = SSPBUF;
  2072  00B9  1283               	bcf	status, 5	;RP0=0, select bank0
  2073  00BA  1303               	bcf	status, 6	;RP1=0, select bank0
  2074  00BB  0813               	movf	(19),w	;volatile
  2075  00BC  00F3               	movwf	(??_i2cIsrHandler+0)+0
  2076  00BD  087A               	movf	(_i2cBufferVal),w
  2077  00BE  3E36               	addlw	_i2cBuffer&0ffh
  2078  00BF  0084               	movwf	fsr0
  2079  00C0  0873               	movf	(??_i2cIsrHandler+0)+0,w
  2080  00C1  1383               	bcf	status, 7	;select IRP bank0
  2081  00C2  0080               	movwf	indf
  2082                           	line	55
  2083                           	
  2084  00C3                     i1l9127:	
  2085                           ;i2cSlave.c: 55: i2cBufferVal++;
  2086  00C3  3001               	movlw	(01h)
  2087  00C4  00F3               	movwf	(??_i2cIsrHandler+0)+0
  2088  00C5  0873               	movf	(??_i2cIsrHandler+0)+0,w
  2089  00C6  07FA               	addwf	(_i2cBufferVal),f
  2090                           	line	57
  2091                           ;i2cSlave.c: 57: } else if ((SSPSTAT & 0b00100100) == 0b0000000){
  2092  00C7  2905               	goto	i1l9147
  2093                           	
  2094  00C8                     i1l6109:	
  2095                           	
  2096  00C8                     i1l9129:	
  2097  00C8  1683               	bsf	status, 5	;RP0=1, select bank1
  2098  00C9  1303               	bcf	status, 6	;RP1=0, select bank1
  2099  00CA  0814               	movf	(148)^080h,w
  2100  00CB  3924               	andlw	024h
  2101  00CC  1D03               	btfss	status,2
  2102  00CD  28CF               	goto	u257_21
  2103  00CE  28D0               	goto	u257_20
  2104  00CF                     u257_21:
  2105  00CF  28D4               	goto	i1l9133
  2106  00D0                     u257_20:
  2107                           	line	59
  2108                           	
  2109  00D0                     i1l9131:	
  2110                           ;i2cSlave.c: 59: SSPBUF = 0;
  2111  00D0  1283               	bcf	status, 5	;RP0=0, select bank0
  2112  00D1  1303               	bcf	status, 6	;RP1=0, select bank0
  2113  00D2  0193               	clrf	(19)	;volatile
  2114                           	line	61
  2115                           ;i2cSlave.c: 61: } else if ((SSPSTAT & 0b00100100) == 0b0000100){
  2116  00D3  2905               	goto	i1l9147
  2117                           	
  2118  00D4                     i1l6111:	
  2119                           	
  2120  00D4                     i1l9133:	
  2121  00D4  1683               	bsf	status, 5	;RP0=1, select bank1
  2122  00D5  1303               	bcf	status, 6	;RP1=0, select bank1
  2123  00D6  0814               	movf	(148)^080h,w
  2124  00D7  3924               	andlw	024h
  2125  00D8  3A04               	xorlw	04h
  2126  00D9  1D03               	skipz
  2127  00DA  28DC               	goto	u258_21
  2128  00DB  28DD               	goto	u258_20
  2129  00DC                     u258_21:
  2130  00DC  28DF               	goto	i1l9137
  2131  00DD                     u258_20:
  2132  00DD  2905               	goto	i1l9147
  2133                           	line	64
  2134                           	
  2135  00DE                     i1l9135:	
  2136                           ;i2cSlave.c: 64: } else if ((SSPSTAT & 0b00001100) == 0b0001100){
  2137  00DE  2905               	goto	i1l9147
  2138                           	
  2139  00DF                     i1l6113:	
  2140                           	
  2141  00DF                     i1l9137:	
  2142  00DF  0814               	movf	(148)^080h,w
  2143  00E0  390C               	andlw	0Ch
  2144  00E1  3A0C               	xorlw	0Ch
  2145  00E2  1D03               	skipz
  2146  00E3  28E5               	goto	u259_21
  2147  00E4  28E6               	goto	u259_20
  2148  00E5                     u259_21:
  2149  00E5  2905               	goto	i1l9147
  2150  00E6                     u259_20:
  2151                           	line	66
  2152                           	
  2153  00E6                     i1l9139:	
  2154                           ;i2cSlave.c: 66: if (i2cWriteInt == 0)
  2155  00E6  08FC               	movf	(_i2cWriteInt),f
  2156  00E7  1D03               	skipz
  2157  00E8  28EA               	goto	u260_21
  2158  00E9  28EB               	goto	u260_20
  2159  00EA                     u260_21:
  2160  00EA  28F7               	goto	i1l6116
  2161  00EB                     u260_20:
  2162                           	line	68
  2163                           	
  2164  00EB                     i1l9141:	
  2165                           ;i2cSlave.c: 67: {
  2166                           ;i2cSlave.c: 68: i2cWriteInt = 1;
  2167  00EB  01FC               	clrf	(_i2cWriteInt)
  2168  00EC  1403               	bsf	status,0
  2169  00ED  0DFC               	rlf	(_i2cWriteInt),f
  2170                           	line	69
  2171                           	
  2172  00EE                     i1l9143:	
  2173                           ;i2cSlave.c: 69: i2cSend(COUNTS);
  2174  00EE  1283               	bcf	status, 5	;RP0=0, select bank0
  2175  00EF  1303               	bcf	status, 6	;RP1=0, select bank0
  2176  00F0  0839               	movf	(_COUNTS),w
  2177  00F1  120A  118A  224F   	fcall	_i2cSend
              120A  118A         
  2178                           	line	70
  2179                           ;i2cSlave.c: 70: } else
  2180  00F6  2905               	goto	i1l9147
  2181                           	
  2182  00F7                     i1l6116:	
  2183                           	line	72
  2184                           ;i2cSlave.c: 71: {
  2185                           ;i2cSlave.c: 72: i2cWriteInt = 0;
  2186  00F7  01FC               	clrf	(_i2cWriteInt)
  2187                           	line	73
  2188                           	
  2189  00F8                     i1l9145:	
  2190                           ;i2cSlave.c: 73: i2cSend(COUNTS >> 8);
  2191  00F8  1283               	bcf	status, 5	;RP0=0, select bank0
  2192  00F9  1303               	bcf	status, 6	;RP1=0, select bank0
  2193  00FA  083A               	movf	(_COUNTS+1),w
  2194  00FB  120A  118A  224F   	fcall	_i2cSend
              120A  118A         
  2195  0100  2905               	goto	i1l9147
  2196                           	line	74
  2197                           	
  2198  0101                     i1l6117:	
  2199  0101  2905               	goto	i1l9147
  2200                           	line	84
  2201                           	
  2202  0102                     i1l6115:	
  2203  0102  2905               	goto	i1l9147
  2204                           	line	87
  2205                           	
  2206  0103                     i1l6114:	
  2207  0103  2905               	goto	i1l9147
  2208                           	
  2209  0104                     i1l6112:	
  2210  0104  2905               	goto	i1l9147
  2211                           	
  2212  0105                     i1l6110:	
  2213                           	
  2214  0105                     i1l9147:	
  2215                           ;i2cSlave.c: 74: }
  2216                           ;i2cSlave.c: 84: }
  2217                           ;i2cSlave.c: 87: SSPIF = 0;
  2218  0105  1283               	bcf	status, 5	;RP0=0, select bank0
  2219  0106  1303               	bcf	status, 6	;RP1=0, select bank0
  2220  0107  118C               	bcf	(99/8),(99)&7
  2221                           	line	89
  2222                           	
  2223  0108                     i1l9149:	
  2224                           ;i2cSlave.c: 89: if (i2cBufferVal == 3){
  2225  0108  087A               	movf	(_i2cBufferVal),w
  2226  0109  3A03               	xorlw	03h
  2227  010A  1D03               	skipz
  2228  010B  290D               	goto	u261_21
  2229  010C  290E               	goto	u261_20
  2230  010D                     u261_21:
  2231  010D  2916               	goto	i1l6119
  2232  010E                     u261_20:
  2233                           	line	90
  2234                           	
  2235  010E                     i1l9151:	
  2236                           ;i2cSlave.c: 90: i2cBufferVal = 0;
  2237  010E  01FA               	clrf	(_i2cBufferVal)
  2238                           	line	91
  2239                           	
  2240  010F                     i1l9153:	
  2241                           ;i2cSlave.c: 91: i2cDataUpdate();
  2242  010F  120A  118A  225F   	fcall	_i2cDataUpdate
              120A  118A         
  2243  0114  2916               	goto	i1l6119
  2244                           	line	92
  2245                           	
  2246  0115                     i1l6118:	
  2247  0115  2916               	goto	i1l6119
  2248                           	line	93
  2249                           	
  2250  0116                     i1l9155:	
  2251                           	line	94
  2252                           ;i2cSlave.c: 92: }
  2253                           ;i2cSlave.c: 93: return;
  2254                           	
  2255  0116                     i1l6119:	
  2256  0116  0008               	return
  2257                           	opt stack 0
  2258                           GLOBAL	__end_of_i2cIsrHandler
  2259  0117                     	__end_of_i2cIsrHandler:
  2260 ;; =============== function _i2cIsrHandler ends ============
  2261                           
  2262                           	signat	_i2cIsrHandler,88
  2263                           	global	_i2cDataUpdate
  2264                           psect	text372,local,class=CODE,delta=2
  2265                           global __ptext372
  2266  025F                     __ptext372:
  2267                           
  2268 ;; *************** function _i2cDataUpdate *****************
  2269 ;; Defined at:
  2270 ;;		line 97 in file "i2cSlave.c"
  2271 ;; Parameters:    Size  Location     Type
  2272 ;;		None
  2273 ;; Auto vars:     Size  Location     Type
  2274 ;;		None
  2275 ;; Return value:  Size  Location     Type
  2276 ;;		None               void
  2277 ;; Registers used:
  2278 ;;		wreg
  2279 ;; Tracked objects:
  2280 ;;		On entry : 0/0
  2281 ;;		On exit  : 0/0
  2282 ;;		Unchanged: 0/0
  2283 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  2284 ;;      Params:         0       0       0       0       0       0
  2285 ;;      Locals:         0       0       0       0       0       0
  2286 ;;      Temps:          1       0       0       0       0       0
  2287 ;;      Totals:         1       0       0       0       0       0
  2288 ;;Total ram usage:        1 bytes
  2289 ;; Hardware stack levels used:    1
  2290 ;; This function calls:
  2291 ;;		Nothing
  2292 ;; This function is called by:
  2293 ;;		_i2cIsrHandler
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           psect	text372
  2297                           	file	"i2cSlave.c"
  2298                           	line	97
  2299                           	global	__size_of_i2cDataUpdate
  2300  000F                     	__size_of_i2cDataUpdate	equ	__end_of_i2cDataUpdate-_i2cDataUpdate
  2301                           	
  2302  025F                     _i2cDataUpdate:	
  2303                           	opt	stack 3
  2304                           ; Regs used in _i2cDataUpdate: [wreg]
  2305                           	line	98
  2306                           	
  2307  025F                     i1l9171:	
  2308                           ;i2cSlave.c: 98: switch (i2cBuffer[0]) {
  2309  025F  2A60               	goto	i1l9173
  2310                           	line	99
  2311                           ;i2cSlave.c: 99: default :
  2312                           	
  2313  0260                     i1l6123:	
  2314                           	line	100
  2315                           	
  2316  0260                     i1l9173:	
  2317                           ;i2cSlave.c: 100: i2cSpeed = (i2cBuffer[1]);
  2318  0260  1283               	bcf	status, 5	;RP0=0, select bank0
  2319  0261  1303               	bcf	status, 6	;RP1=0, select bank0
  2320  0262  0837               	movf	0+(_i2cBuffer)+01h,w
  2321  0263  00F0               	movwf	(??_i2cDataUpdate+0)+0
  2322  0264  0870               	movf	(??_i2cDataUpdate+0)+0,w
  2323  0265  00C2               	movwf	(_i2cSpeed)
  2324                           	line	101
  2325                           ;i2cSlave.c: 101: i2cDirection = (i2cBuffer[2]);
  2326  0266  0838               	movf	0+(_i2cBuffer)+02h,w
  2327  0267  00F0               	movwf	(??_i2cDataUpdate+0)+0
  2328  0268  0870               	movf	(??_i2cDataUpdate+0)+0,w
  2329  0269  00C1               	movwf	(_i2cDirection)
  2330                           	line	102
  2331                           ;i2cSlave.c: 102: break;
  2332  026A  2A6D               	goto	i1l6125
  2333                           	line	105
  2334                           	
  2335  026B                     i1l9175:	
  2336                           ;i2cSlave.c: 105: }
  2337  026B  2A6D               	goto	i1l6125
  2338                           	line	98
  2339                           	
  2340  026C                     i1l6122:	
  2341  026C  2A60               	goto	i1l9173
  2342                           	line	105
  2343                           	
  2344  026D                     i1l6124:	
  2345                           	line	107
  2346                           ;i2cSlave.c: 106: return;
  2347                           	
  2348  026D                     i1l6125:	
  2349  026D  0008               	return
  2350                           	opt stack 0
  2351                           GLOBAL	__end_of_i2cDataUpdate
  2352  026E                     	__end_of_i2cDataUpdate:
  2353 ;; =============== function _i2cDataUpdate ends ============
  2354                           
  2355                           	signat	_i2cDataUpdate,88
  2356                           	global	_i2cSend
  2357                           psect	text373,local,class=CODE,delta=2
  2358                           global __ptext373
  2359  024F                     __ptext373:
  2360                           
  2361 ;; *************** function _i2cSend *****************
  2362 ;; Defined at:
  2363 ;;		line 110 in file "i2cSlave.c"
  2364 ;; Parameters:    Size  Location     Type
  2365 ;;  msg             1    wreg     unsigned char 
  2366 ;; Auto vars:     Size  Location     Type
  2367 ;;  msg             1    2[COMMON] unsigned char 
  2368 ;;  i               2    0[COMMON] int 
  2369 ;; Return value:  Size  Location     Type
  2370 ;;		None               void
  2371 ;; Registers used:
  2372 ;;		wreg, status,2
  2373 ;; Tracked objects:
  2374 ;;		On entry : 0/0
  2375 ;;		On exit  : 0/0
  2376 ;;		Unchanged: 0/0
  2377 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  2378 ;;      Params:         0       0       0       0       0       0
  2379 ;;      Locals:         3       0       0       0       0       0
  2380 ;;      Temps:          0       0       0       0       0       0
  2381 ;;      Totals:         3       0       0       0       0       0
  2382 ;;Total ram usage:        3 bytes
  2383 ;; Hardware stack levels used:    1
  2384 ;; This function calls:
  2385 ;;		Nothing
  2386 ;; This function is called by:
  2387 ;;		_i2cIsrHandler
  2388 ;; This function uses a non-reentrant model
  2389 ;;
  2390                           psect	text373
  2391                           	file	"i2cSlave.c"
  2392                           	line	110
  2393                           	global	__size_of_i2cSend
  2394  0010                     	__size_of_i2cSend	equ	__end_of_i2cSend-_i2cSend
  2395                           	
  2396  024F                     _i2cSend:	
  2397                           	opt	stack 3
  2398                           ; Regs used in _i2cSend: [wreg+status,2]
  2399                           ;i2cSend@msg stored from wreg
  2400  024F  00F2               	movwf	(i2cSend@msg)
  2401                           	line	111
  2402                           	
  2403  0250                     i1l9161:	
  2404                           ;i2cSlave.c: 111: int i = 0;
  2405  0250  01F0               	clrf	(i2cSend@i)
  2406  0251  01F1               	clrf	(i2cSend@i+1)
  2407                           	line	112
  2408                           	
  2409  0252                     i1l9163:	
  2410                           ;i2cSlave.c: 112: i++;
  2411  0252  3001               	movlw	low(01h)
  2412  0253  07F0               	addwf	(i2cSend@i),f
  2413  0254  1803               	skipnc
  2414  0255  0AF1               	incf	(i2cSend@i+1),f
  2415  0256  3000               	movlw	high(01h)
  2416  0257  07F1               	addwf	(i2cSend@i+1),f
  2417                           	line	113
  2418                           	
  2419  0258                     i1l9165:	
  2420                           ;i2cSlave.c: 113: SSPBUF = msg;
  2421  0258  0872               	movf	(i2cSend@msg),w
  2422  0259  1283               	bcf	status, 5	;RP0=0, select bank0
  2423  025A  1303               	bcf	status, 6	;RP1=0, select bank0
  2424  025B  0093               	movwf	(19)	;volatile
  2425                           	line	114
  2426                           	
  2427  025C                     i1l9167:	
  2428                           ;i2cSlave.c: 114: SSPCONbits.CKP = 1;
  2429  025C  1614               	bsf	(20),4	;volatile
  2430  025D  2A5E               	goto	i1l6128
  2431                           	line	116
  2432                           	
  2433  025E                     i1l9169:	
  2434                           	line	117
  2435                           ;i2cSlave.c: 116: return;
  2436                           	
  2437  025E                     i1l6128:	
  2438  025E  0008               	return
  2439                           	opt stack 0
  2440                           GLOBAL	__end_of_i2cSend
  2441  025F                     	__end_of_i2cSend:
  2442 ;; =============== function _i2cSend ends ============
  2443                           
  2444                           	signat	_i2cSend,4216
  2445                           psect	text374,local,class=CODE,delta=2
  2446                           global __ptext374
  2447  0000                     __ptext374:
  2448                           	global	btemp
  2449  007E                     	btemp set 07Eh
  2450                           
  2451                           	DABS	1,126,2	;btemp
  2452                           	global	wtemp0
  2453  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Mon Mar 18 16:57:27 2013

                     _F 00AA              i2cSend@msg 0072                      _T0 0551                      _T1 0552  
                    _RD 0C60                      _WR 0C61                     _I2C 0550                     _CKE 04A6  
                   _CKP 00A4                     _GIE 005F                     _DIR 0553                     _RB5 0035  
                   _ERR 0554                     _PR2 0092                     _SMP 04A7                     _isr 0117  
                   fsr0 0004                     indf 0000                    l3100 01B5                    l1551 0195  
                  l1543 0034                    l1544 006C                    l1545 00AB                    l3090 01D3  
                  l1546 00AC                    l3091 01D2                    l1547 00AD                    l1572 022E  
                  l3092 01D3                    l1548 00AD                    l1573 023A                    l1574 0237  
                  l1575 0239                    l1567 021C                    l1576 023A                    l1568 0223  
                  l3088 01C7                    l1569 0223                    l3089 01D1                    l3099 01B1  
                  l6106 020C                    l4594 0278                    l4597 01F0                    l9201 018B  
                  l9051 01AB                    l9203 018F                    l9211 0024                    ?_isr 0070  
                  l9053 0224                    l9061 01D4                    l9205 0192                    l9221 004D  
                  l9213 002A                    l9047 0196                    l9055 022C                    l9063 01ED  
                  l9071 021C                    l9231 0070                    l9223 0058                    l9215 0034  
                  l9207 0015                    l9049 019E                    l9057 022E                    l9065 01EF  
                  l9081 01C2                    l9073 01B6                    l9233 0086                    l9225 005E  
                  l9217 0038                    l9209 001F                    l9059 0235                    l9067 020D  
                  l9083 01C3                    l9075 01BA                    l9091 026E                    l9235 0099  
                  l9227 0068                    l9219 0044                    l9069 0215                    l9085 01C4  
                  l9077 01C0                    l9093 01F4                    l9181 017C                    l9237 00A7  
                  l9229 006C                    l9087 01C7                    l9079 01C1                    l9095 0206  
                  l9191 0184                    l9183 017D                    l9089 01CC                    l9097 020A  
                  l9193 0187                    l9185 017E                    l9177 0169                    l9099 020B  
                  l9195 0188                    l9187 017F                    l9179 016C                    l9197 0189  
                  l9189 0183                    l9199 018A                    _FLAG 00AA                    _T0IE 005D  
                  _T0IF 005A                    u2500 01CC                    u2501 01CB                    u2460 01AB  
                  u2620 005E                    u2461 01AA                    u2621 005D                    u2470 022C  
                  u2630 0070                    u2471 022B                    u2631 006F                    _PIE1 008C  
                  u2480 0235                    _PIE2 008D                    u2465 01A7                    u2481 0234  
                  u2490 0215                    u2491 0214                    _PEIE 005E                    _RBIE 005B  
                  _RBIF 0058                    _TMR0 0001                    _TMR1 000E                    _WREN 0C62  
                  _main 0015                    btemp 007E                    start 0012   __size_of_BeginEncoder 000B  
       ??_i2cIsrHandler 0073         __end_of_i2cInit 020D         __end_of_i2cSend 025F                   ??_isr 0074  
                 ?_main 0070                   _EEADR 010D                   _CARRY 0018                   _T1CON 0010  
                 _T2CON 0012                   _PORTD 0008                   _SSPM0 00A0                   _SSPM1 00A1  
                 _SSPM2 00A2                   _SSPM3 00A3                   _TRISB 0086                   _TRISD 0088  
                 _SSPIF 0063                   _SSPEN 00A5                   main@D 002C                   main@I 002A  
                 main@c 0035                   main@t 0034            _BeginEncoder 026E                   pclath 000A  
      __end_of_BeginPWM 01D4              _i2cRequest 007B                   status 0003                   wtemp0 007E  
          __end_of_main 00B0              _Initialise 0169                  ??_main 0026      __size_of_EncUpdate 001D  
      __end_of_SetPulse 01B6                  _EEDATA 010C                  _CCPR2L 001B                  _EECON1 018C  
                _EECON2 018D                  _CMCON1 0097                  _COUNTS 0039                  i1l1560 0151  
                i1l1561 0147                  i1l1562 014F                  i1l1554 0121                  i1l1555 015C  
                i1l1563 0159                  i1l1556 0127                  i1l1564 015C                  i1l1557 015B  
                i1l1558 012D                  i1l1559 015A                  i1l6110 0105                  i1l6111 00D4  
                i1l6112 0104                  i1l6113 00DF                  i1l6122 026C                  i1l6114 0103  
                i1l6123 0260                  i1l6115 0102                  i1l6124 026D                  i1l6116 00F7  
                i1l6125 026D                  i1l6117 0101                  i1l6109 00C8                  i1l6118 0115  
                i1l6119 0116                  i1l6128 025E                  i1l9101 0117                  i1l9111 0143  
                i1l9103 011B                  i1l9121 0154                  i1l9113 0147                  i1l9105 0125  
                i1l9131 00D0                  i1l9123 00B0                  i1l9115 014A                  i1l9107 012B  
                i1l9141 00EB                  i1l9133 00D4                  i1l9125 00B9                  i1l9117 014F  
                i1l9109 0131                  i1l9151 010E                  i1l9143 00EE                  i1l9135 00DE  
                i1l9127 00C3                  i1l9119 0151                  i1l9161 0250                  i1l9153 010F  
                i1l9145 00F8                  i1l9137 00DF                  i1l9129 00C8                  i1l9163 0252  
                i1l9171 025F                  i1l9155 0116                  i1l9139 00E6                  i1l9147 0105  
                i1l9165 0258                  i1l9173 0260                  i1l9149 0108                  i1l9167 025C  
                i1l9175 026B                  i1l9169 025E                  u251_20 011B                  u251_21 011A  
                u260_20 00EB                  u252_20 0125                  u260_21 00EA                  u252_21 0124  
                u261_20 010E                  u253_20 012B                  u261_21 010D                  u253_21 012A  
                u254_20 0131                  u254_21 0130                  u255_20 0143                  u255_21 0142  
                u255_25 013F                  u256_20 00B9                  u256_21 00B8                  u257_20 00D0  
                u257_21 00CF                  u258_20 00DD                  u258_21 00DC                  u259_20 00E6  
                u259_21 00E5                  _TARGET 003F                  _TMR1IF 0060                  _TMR2IF 0061  
                _SSPADD 0093         setDirection@dir 0020                  _TRISC6 043E                  _TRISC7 043F  
                _SSPBUF 0013               ??_i2cInit 0020               ??_i2cSend 0070              _UpdateData 020D  
                saved_w 007E             _i2cWriteInt 007C       __end_of_EncUpdate 01F1          __pcstackCOMMON 0070  
           ?_Initialise 0070           ?_setDirection 0020               ?_BeginPWM 0070   __end_of_i2cDataUpdate 026E  
            __pbssBANK0 0036               ?_SetPulse 0020              __pmaintext 0015              __pintentry 0004  
               _CCP2CON 001D          ??_setDirection 0022              ??_BeginPWM 0020             ?_UpdateData 0020  
               _SSPSTAT 0094          main@currentPWM 0028     __size_of_Initialise 002D                 _i2cInit 01F1  
               _i2cSend 024F              ??_SetPulse 0022   __end_of_i2cIsrHandler 0117               _DIRECTION 003B  
          _i2cDirection 0041            _i2cBufferVal 007A               _T2CONbits 0012            __size_of_isr 0052  
  end_of_initialization 024B     __size_of_UpdateData 0017             UpdateData@c 0022             UpdateData@t 0020  
             _PORTBbits 0006          SetPulse@length 0020               _TRISDbits 0088    __end_of_setDirection 023B  
           _CCP2CONbits 001D              main@counts 0032               _EncUpdate 01D4            ??_Initialise 0021  
             _i2cBuffer 0036     start_initialization 023B       __size_of_BeginPWM 001E             __end_of_isr 0169  
    __end_of_Initialise 0196              ?_EncUpdate 0020       __size_of_SetPulse 0020            SetPulse@temp 0022  
          ??_UpdateData 0024             __pbssCOMMON 007A           __pcstackBANK0 0020           ?_BeginEncoder 0070  
              ?_i2cInit 0070                ?_i2cSend 0070      __end_of_UpdateData 0224               __ptext361 0000  
             __ptext370 0117               __ptext362 0169               __ptext371 00B0               __ptext363 01F1  
             __ptext372 025F               __ptext364 026E               __ptext373 024F               __ptext365 01B6  
             __ptext374 0000               __ptext366 020D               __ptext367 01D4               __ptext368 0224  
             __ptext369 0196  __size_of_i2cDataUpdate 000F          ??_BeginEncoder 0020   __size_of_setDirection 0017  
              _DIR_READ 003D       interrupt_function 0004                _PIE1bits 008C                _PIR1bits 000C  
           ??_EncUpdate 0024                i2cSend@i 0070               main@P_old 002E                _BeginPWM 01B6  
          _setDirection 0224  __size_of_i2cIsrHandler 0067           _i2cDataUpdate 025F                _i2cSpeed 0042  
      __size_of_i2cInit 001C        __size_of_i2cSend 0010                _SetPulse 0196          ?_i2cDataUpdate 0070  
           EncUpdate@t0 0020             EncUpdate@t1 0022           __size_of_main 009B           _i2cIsrHandler 00B0  
  __end_of_BeginEncoder 0279                main@time 0030                intlevel1 0000          ?_i2cIsrHandler 0070  
            _OPTION_REG 0081         ??_i2cDataUpdate 0070          i2cInit@address 0020              _SSPCONbits 0014  
