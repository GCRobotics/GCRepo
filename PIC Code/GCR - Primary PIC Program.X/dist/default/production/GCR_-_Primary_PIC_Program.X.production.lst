

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Fri Apr 12 10:49:17 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F917
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 23 "primarymain.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 23 "primarymain.c"
    45  2007  F4F2               	dw 0xFFFA & 0xFFF7 & 0xFFFF & 0xFFFF & 0xFFFF & 0xFFFF & 0xFCFF & 0xFFFF & 0xF7FF ;#
    46                           	FNCALL	_main,_Initialise
    47                           	FNCALL	_main,_SetPulse
    48                           	FNCALL	_main,_setDirection
    49                           	FNCALL	_main,_EncUpdate
    50                           	FNCALL	_main,_UpdateData
    51                           	FNCALL	_Initialise,_BeginPWM
    52                           	FNCALL	_Initialise,_BeginEncoder
    53                           	FNCALL	_Initialise,_i2cInit
    54                           	FNROOT	_main
    55                           	FNCALL	_isr,_i2cIsrHandler
    56                           	FNCALL	_i2cIsrHandler,_i2cSend
    57                           	FNCALL	_i2cIsrHandler,_i2cDataUpdate
    58                           	FNCALL	intlevel1,_isr
    59                           	global	intlevel1
    60                           	FNROOT	intlevel1
    61                           	global	_i2cBuffer
    62                           	global	_COUNTS
    63                           	global	_DIRECTION
    64                           	global	_DIR_READ
    65                           	global	_TARGET
    66                           	global	_i2cDirection
    67                           	global	_i2cRequest
    68                           	global	_i2cSpeed
    69                           	global	_i2cBufferVal
    70                           	global	_i2cWriteInt
    71                           	global	_TMR1
    72                           psect	text361,local,class=CODE,delta=2
    73                           global __ptext361
    74  0000                     __ptext361:
    75  000E                     _TMR1	set	14
    76                           	global	_CCP2CON
    77  001D                     _CCP2CON	set	29
    78                           	global	_CCP2CONbits
    79  001D                     _CCP2CONbits	set	29
    80                           	global	_CCPR2L
    81  001B                     _CCPR2L	set	27
    82                           	global	_PIR1bits
    83  000C                     _PIR1bits	set	12
    84                           	global	_PORTBbits
    85  0006                     _PORTBbits	set	6
    86                           	global	_PORTD
    87  0008                     _PORTD	set	8
    88                           	global	_SSPBUF
    89  0013                     _SSPBUF	set	19
    90                           	global	_SSPCONbits
    91  0014                     _SSPCONbits	set	20
    92                           	global	_T1CON
    93  0010                     _T1CON	set	16
    94                           	global	_T2CON
    95  0012                     _T2CON	set	18
    96                           	global	_T2CONbits
    97  0012                     _T2CONbits	set	18
    98                           	global	_TMR0
    99  0001                     _TMR0	set	1
   100                           	global	_CARRY
   101  0018                     _CARRY	set	24
   102                           	global	_CKP
   103  00A4                     _CKP	set	164
   104                           	global	_GIE
   105  005F                     _GIE	set	95
   106                           	global	_PEIE
   107  005E                     _PEIE	set	94
   108                           	global	_RB5
   109  0035                     _RB5	set	53
   110                           	global	_RBIE
   111  005B                     _RBIE	set	91
   112                           	global	_RBIF
   113  0058                     _RBIF	set	88
   114                           	global	_SSPEN
   115  00A5                     _SSPEN	set	165
   116                           	global	_SSPIF
   117  0063                     _SSPIF	set	99
   118                           	global	_SSPM0
   119  00A0                     _SSPM0	set	160
   120                           	global	_SSPM1
   121  00A1                     _SSPM1	set	161
   122                           	global	_SSPM2
   123  00A2                     _SSPM2	set	162
   124                           	global	_SSPM3
   125  00A3                     _SSPM3	set	163
   126                           	global	_T0IE
   127  005D                     _T0IE	set	93
   128                           	global	_T0IF
   129  005A                     _T0IF	set	90
   130                           	global	_TMR1IF
   131  0060                     _TMR1IF	set	96
   132                           	global	_TMR2IF
   133  0061                     _TMR2IF	set	97
   134                           	global	_CMCON1
   135  0097                     _CMCON1	set	151
   136                           	global	_OPTION_REG
   137  0081                     _OPTION_REG	set	129
   138                           	global	_PIE1
   139  008C                     _PIE1	set	140
   140                           	global	_PIE1bits
   141  008C                     _PIE1bits	set	140
   142                           	global	_PIE2
   143  008D                     _PIE2	set	141
   144                           	global	_PR2
   145  0092                     _PR2	set	146
   146                           	global	_SSPADD
   147  0093                     _SSPADD	set	147
   148                           	global	_SSPSTAT
   149  0094                     _SSPSTAT	set	148
   150                           	global	_TRISB
   151  0086                     _TRISB	set	134
   152                           	global	_TRISD
   153  0088                     _TRISD	set	136
   154                           	global	_TRISDbits
   155  0088                     _TRISDbits	set	136
   156                           	global	_CKE
   157  04A6                     _CKE	set	1190
   158                           	global	_SMP
   159  04A7                     _SMP	set	1191
   160                           	global	_TRISC6
   161  043E                     _TRISC6	set	1086
   162                           	global	_TRISC7
   163  043F                     _TRISC7	set	1087
   164                           	global	_EEADR
   165  010D                     _EEADR	set	269
   166                           	global	_EEDATA
   167  010C                     _EEDATA	set	268
   168                           	global	_EECON1
   169  018C                     _EECON1	set	396
   170                           	global	_EECON2
   171  018D                     _EECON2	set	397
   172                           	global	_RD
   173  0C60                     _RD	set	3168
   174                           	global	_WR
   175  0C61                     _WR	set	3169
   176                           	global	_WREN
   177  0C62                     _WREN	set	3170
   178                           	global	_FLAG
   179  00AA                     _FLAG	set	170
   180                           	DABS	1,170,1	;_FLAG
   181                           
   182                           	global	_F
   183  00AA                     _F	set	170
   184                           	DABS	1,170,1	;_F
   185                           
   186                           	global	_DIR
   187  0553                     _DIR	set	1363
   188                           	DABS	1,170,1	;_DIR
   189                           
   190                           	global	_ERR
   191  0554                     _ERR	set	1364
   192                           	DABS	1,170,1	;_ERR
   193                           
   194                           	global	_I2C
   195  0550                     _I2C	set	1360
   196                           	DABS	1,170,1	;_I2C
   197                           
   198                           	global	_T0
   199  0551                     _T0	set	1361
   200                           	DABS	1,170,1	;_T0
   201                           
   202                           	global	_T1
   203  0552                     _T1	set	1362
   204                           	DABS	1,170,1	;_T1
   205                           
   206                           	file	"C:\Users\josh\AppData\Local\Temp\s1ec."
   207                           	line	#
   208                           psect cinit,class=CODE,delta=2
   209                           global start_initialization
   210  0243                     start_initialization:
   211                           
   212                           psect	bssCOMMON,class=COMMON,space=1
   213                           global __pbssCOMMON
   214  007C                     __pbssCOMMON:
   215  007C                     _i2cBufferVal:
   216  007C                            ds      1
   217                           
   218  007D                     _i2cWriteInt:
   219  007D                            ds      1
   220                           
   221                           psect	bssBANK0,class=BANK0,space=1
   222                           global __pbssBANK0
   223  0036                     __pbssBANK0:
   224  0036                     _i2cBuffer:
   225  0036                            ds      3
   226                           
   227  0039                     _COUNTS:
   228  0039                            ds      2
   229                           
   230  003B                     _DIRECTION:
   231  003B                            ds      2
   232                           
   233  003D                     _DIR_READ:
   234  003D                            ds      2
   235                           
   236  003F                     _TARGET:
   237  003F                            ds      2
   238                           
   239  0041                     _i2cDirection:
   240  0041                            ds      1
   241                           
   242  0042                     _i2cRequest:
   243  0042                            ds      1
   244                           
   245  0043                     _i2cSpeed:
   246  0043                            ds      1
   247                           
   248                           ; Clear objects allocated to COMMON
   249                           psect cinit,class=CODE,delta=2
   250  0243  01FC               	clrf	((__pbssCOMMON)+0)&07Fh
   251  0244  01FD               	clrf	((__pbssCOMMON)+1)&07Fh
   252                           ; Clear objects allocated to BANK0
   253                           psect cinit,class=CODE,delta=2
   254  0245  01B6               	clrf	((__pbssBANK0)+0)&07Fh
   255  0246  01B7               	clrf	((__pbssBANK0)+1)&07Fh
   256  0247  01B8               	clrf	((__pbssBANK0)+2)&07Fh
   257  0248  01B9               	clrf	((__pbssBANK0)+3)&07Fh
   258  0249  01BA               	clrf	((__pbssBANK0)+4)&07Fh
   259  024A  01BB               	clrf	((__pbssBANK0)+5)&07Fh
   260  024B  01BC               	clrf	((__pbssBANK0)+6)&07Fh
   261  024C  01BD               	clrf	((__pbssBANK0)+7)&07Fh
   262  024D  01BE               	clrf	((__pbssBANK0)+8)&07Fh
   263  024E  01BF               	clrf	((__pbssBANK0)+9)&07Fh
   264  024F  01C0               	clrf	((__pbssBANK0)+10)&07Fh
   265  0250  01C1               	clrf	((__pbssBANK0)+11)&07Fh
   266  0251  01C2               	clrf	((__pbssBANK0)+12)&07Fh
   267  0252  01C3               	clrf	((__pbssBANK0)+13)&07Fh
   268                           psect cinit,class=CODE,delta=2
   269                           global end_of_initialization
   270                           
   271                           ;End of C runtime variable initialization code
   272                           
   273  0253                     end_of_initialization:
   274  0253  0183               clrf status
   275  0254  120A  118A  2815   ljmp _main	;jump to C main() function
   276                           psect	cstackCOMMON,class=COMMON,space=1
   277                           global __pcstackCOMMON
   278  0070                     __pcstackCOMMON:
   279                           	global	?_Initialise
   280  0070                     ?_Initialise:	; 0 bytes @ 0x0
   281                           	global	?_BeginPWM
   282  0070                     ?_BeginPWM:	; 0 bytes @ 0x0
   283                           	global	?_BeginEncoder
   284  0070                     ?_BeginEncoder:	; 0 bytes @ 0x0
   285                           	global	?_i2cInit
   286  0070                     ?_i2cInit:	; 0 bytes @ 0x0
   287                           	global	?_i2cIsrHandler
   288  0070                     ?_i2cIsrHandler:	; 0 bytes @ 0x0
   289                           	global	?_i2cSend
   290  0070                     ?_i2cSend:	; 0 bytes @ 0x0
   291                           	global	??_i2cSend
   292  0070                     ??_i2cSend:	; 0 bytes @ 0x0
   293                           	global	?_i2cDataUpdate
   294  0070                     ?_i2cDataUpdate:	; 0 bytes @ 0x0
   295                           	global	??_i2cDataUpdate
   296  0070                     ??_i2cDataUpdate:	; 0 bytes @ 0x0
   297                           	global	?_isr
   298  0070                     ?_isr:	; 0 bytes @ 0x0
   299                           	global	?_main
   300  0070                     ?_main:	; 2 bytes @ 0x0
   301                           	global	i2cSend@i
   302  0070                     i2cSend@i:	; 2 bytes @ 0x0
   303  0070                     	ds	2
   304                           	global	i2cSend@msg
   305  0072                     i2cSend@msg:	; 1 bytes @ 0x2
   306  0072                     	ds	1
   307                           	global	??_i2cIsrHandler
   308  0073                     ??_i2cIsrHandler:	; 0 bytes @ 0x3
   309  0073                     	ds	1
   310                           	global	i2cIsrHandler@i
   311  0074                     i2cIsrHandler@i:	; 2 bytes @ 0x4
   312  0074                     	ds	2
   313                           	global	??_isr
   314  0076                     ??_isr:	; 0 bytes @ 0x6
   315  0076                     	ds	6
   316                           psect	cstackBANK0,class=BANK0,space=1
   317                           global __pcstackBANK0
   318  0020                     __pcstackBANK0:
   319                           	global	?_SetPulse
   320  0020                     ?_SetPulse:	; 0 bytes @ 0x0
   321                           	global	?_setDirection
   322  0020                     ?_setDirection:	; 0 bytes @ 0x0
   323                           	global	?_EncUpdate
   324  0020                     ?_EncUpdate:	; 0 bytes @ 0x0
   325                           	global	?_UpdateData
   326  0020                     ?_UpdateData:	; 0 bytes @ 0x0
   327                           	global	??_BeginPWM
   328  0020                     ??_BeginPWM:	; 0 bytes @ 0x0
   329                           	global	??_BeginEncoder
   330  0020                     ??_BeginEncoder:	; 0 bytes @ 0x0
   331                           	global	??_i2cInit
   332  0020                     ??_i2cInit:	; 0 bytes @ 0x0
   333                           	global	i2cInit@address
   334  0020                     i2cInit@address:	; 1 bytes @ 0x0
   335                           	global	UpdateData@t
   336  0020                     UpdateData@t:	; 2 bytes @ 0x0
   337                           	global	setDirection@dir
   338  0020                     setDirection@dir:	; 2 bytes @ 0x0
   339                           	global	SetPulse@length
   340  0020                     SetPulse@length:	; 2 bytes @ 0x0
   341                           	global	EncUpdate@t0
   342  0020                     EncUpdate@t0:	; 2 bytes @ 0x0
   343  0020                     	ds	1
   344                           	global	??_Initialise
   345  0021                     ??_Initialise:	; 0 bytes @ 0x1
   346  0021                     	ds	1
   347                           	global	??_SetPulse
   348  0022                     ??_SetPulse:	; 0 bytes @ 0x2
   349                           	global	??_setDirection
   350  0022                     ??_setDirection:	; 0 bytes @ 0x2
   351                           	global	UpdateData@c
   352  0022                     UpdateData@c:	; 2 bytes @ 0x2
   353                           	global	SetPulse@temp
   354  0022                     SetPulse@temp:	; 2 bytes @ 0x2
   355                           	global	EncUpdate@t1
   356  0022                     EncUpdate@t1:	; 2 bytes @ 0x2
   357  0022                     	ds	2
   358                           	global	??_EncUpdate
   359  0024                     ??_EncUpdate:	; 0 bytes @ 0x4
   360                           	global	??_UpdateData
   361  0024                     ??_UpdateData:	; 0 bytes @ 0x4
   362  0024                     	ds	2
   363                           	global	??_main
   364  0026                     ??_main:	; 0 bytes @ 0x6
   365  0026                     	ds	2
   366                           	global	main@currentPWM
   367  0028                     main@currentPWM:	; 2 bytes @ 0x8
   368  0028                     	ds	2
   369                           	global	main@I
   370  002A                     main@I:	; 2 bytes @ 0xA
   371  002A                     	ds	2
   372                           	global	main@D
   373  002C                     main@D:	; 2 bytes @ 0xC
   374  002C                     	ds	2
   375                           	global	main@P_old
   376  002E                     main@P_old:	; 2 bytes @ 0xE
   377  002E                     	ds	2
   378                           	global	main@time
   379  0030                     main@time:	; 2 bytes @ 0x10
   380  0030                     	ds	2
   381                           	global	main@counts
   382  0032                     main@counts:	; 2 bytes @ 0x12
   383  0032                     	ds	2
   384                           	global	main@t
   385  0034                     main@t:	; 1 bytes @ 0x14
   386  0034                     	ds	1
   387                           	global	main@c
   388  0035                     main@c:	; 1 bytes @ 0x15
   389  0035                     	ds	1
   390 ;;Data sizes: Strings 0, constant 0, data 0, bss 16, persistent 0 stack 0
   391 ;;Auto spaces:   Size  Autos    Used
   392 ;; COMMON          14     12      14
   393 ;; BANK0           80     22      36
   394 ;; BANK1h          69      0       0
   395 ;; BANK1l          10      0       0
   396 ;; BANK3           96      0       0
   397 ;; BANK2           80      0       0
   398                           
   399 ;;
   400 ;; Pointer list with targets:
   401                           
   402 ;; EncUpdate@t0	PTR int  size(2) Largest target is 512
   403 ;;		 -> RAM(DATA[512]), 
   404 ;;
   405 ;; EncUpdate@t1	PTR int  size(2) Largest target is 512
   406 ;;		 -> RAM(DATA[512]), 
   407 ;;
   408                           
   409                           
   410 ;;
   411 ;; Critical Paths under _main in COMMON
   412 ;;
   413 ;;   None.
   414 ;;
   415 ;; Critical Paths under _isr in COMMON
   416 ;;
   417 ;;   _isr->_i2cIsrHandler
   418 ;;   _i2cIsrHandler->_i2cSend
   419 ;;
   420 ;; Critical Paths under _main in BANK0
   421 ;;
   422 ;;   _main->_EncUpdate
   423 ;;   _Initialise->_i2cInit
   424 ;;
   425 ;; Critical Paths under _isr in BANK0
   426 ;;
   427 ;;   None.
   428 ;;
   429 ;; Critical Paths under _main in BANK1h
   430 ;;
   431 ;;   None.
   432 ;;
   433 ;; Critical Paths under _isr in BANK1h
   434 ;;
   435 ;;   None.
   436 ;;
   437 ;; Critical Paths under _main in BANK1l
   438 ;;
   439 ;;   None.
   440 ;;
   441 ;; Critical Paths under _isr in BANK1l
   442 ;;
   443 ;;   None.
   444 ;;
   445 ;; Critical Paths under _main in BANK3
   446 ;;
   447 ;;   None.
   448 ;;
   449 ;; Critical Paths under _isr in BANK3
   450 ;;
   451 ;;   None.
   452 ;;
   453 ;; Critical Paths under _main in BANK2
   454 ;;
   455 ;;   None.
   456 ;;
   457 ;; Critical Paths under _isr in BANK2
   458 ;;
   459 ;;   None.
   460                           
   461 ;;
   462 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   463 ;;
   464                           
   465 ;;
   466 ;;Call Graph Tables:
   467 ;;
   468 ;; ---------------------------------------------------------------------------------
   469 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   470 ;; ---------------------------------------------------------------------------------
   471 ;; (0) _main                                                22    22      0     341
   472 ;;                                              6 BANK0     16    16      0
   473 ;;                         _Initialise
   474 ;;                           _SetPulse
   475 ;;                       _setDirection
   476 ;;                          _EncUpdate
   477 ;;                         _UpdateData
   478 ;; ---------------------------------------------------------------------------------
   479 ;; (1) _Initialise                                           0     0      0      22
   480 ;;                           _BeginPWM
   481 ;;                       _BeginEncoder
   482 ;;                            _i2cInit
   483 ;; ---------------------------------------------------------------------------------
   484 ;; (2) _i2cInit                                              1     1      0      22
   485 ;;                                              0 BANK0      1     1      0
   486 ;; ---------------------------------------------------------------------------------
   487 ;; (2) _BeginEncoder                                         0     0      0       0
   488 ;; ---------------------------------------------------------------------------------
   489 ;; (2) _BeginPWM                                             0     0      0       0
   490 ;; ---------------------------------------------------------------------------------
   491 ;; (1) _UpdateData                                           4     0      4      44
   492 ;;                                              0 BANK0      4     0      4
   493 ;; ---------------------------------------------------------------------------------
   494 ;; (1) _EncUpdate                                            6     2      4      44
   495 ;;                                              0 BANK0      6     2      4
   496 ;; ---------------------------------------------------------------------------------
   497 ;; (1) _setDirection                                         2     0      2      44
   498 ;;                                              0 BANK0      2     0      2
   499 ;; ---------------------------------------------------------------------------------
   500 ;; (1) _SetPulse                                             4     2      2      68
   501 ;;                                              0 BANK0      4     2      2
   502 ;; ---------------------------------------------------------------------------------
   503 ;; Estimated maximum stack depth 2
   504 ;; ---------------------------------------------------------------------------------
   505 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   506 ;; ---------------------------------------------------------------------------------
   507 ;; (3) _isr                                                  6     6      0      26
   508 ;;                                              6 COMMON     6     6      0
   509 ;;                      _i2cIsrHandler
   510 ;; ---------------------------------------------------------------------------------
   511 ;; (4) _i2cIsrHandler                                        3     3      0      26
   512 ;;                                              3 COMMON     3     3      0
   513 ;;                            _i2cSend
   514 ;;                      _i2cDataUpdate
   515 ;; ---------------------------------------------------------------------------------
   516 ;; (5) _i2cDataUpdate                                        1     1      0       0
   517 ;;                                              0 COMMON     1     1      0
   518 ;; ---------------------------------------------------------------------------------
   519 ;; (5) _i2cSend                                              3     3      0      24
   520 ;;                                              0 COMMON     3     3      0
   521 ;; ---------------------------------------------------------------------------------
   522 ;; Estimated maximum stack depth 5
   523 ;; ---------------------------------------------------------------------------------
   524                           
   525 ;; Call Graph Graphs:
   526                           
   527 ;; _main (ROOT)
   528 ;;   _Initialise
   529 ;;     _BeginPWM
   530 ;;     _BeginEncoder
   531 ;;     _i2cInit
   532 ;;   _SetPulse
   533 ;;   _setDirection
   534 ;;   _EncUpdate
   535 ;;   _UpdateData
   536 ;;
   537 ;; _isr (ROOT)
   538 ;;   _i2cIsrHandler
   539 ;;     _i2cSend
   540 ;;     _i2cDataUpdate
   541 ;;
   542                           
   543 ;; Address spaces:
   544                           
   545 ;;Name               Size   Autos  Total    Cost      Usage
   546 ;;BITCOMMON            E      0       0       0        0.0%
   547 ;;EEDATA             100      0       0       0        0.0%
   548 ;;NULL                 0      0       0       0        0.0%
   549 ;;CODE                 0      0       0       0        0.0%
   550 ;;COMMON               E      C       E       1      100.0%
   551 ;;BITSFR0              0      0       0       1        0.0%
   552 ;;SFR0                 0      0       0       1        0.0%
   553 ;;BITSFR1              0      0       0       2        0.0%
   554 ;;SFR1                 0      0       0       2        0.0%
   555 ;;STACK                0      0       8       2        0.0%
   556 ;;BITBANK0            50      0       0       3        0.0%
   557 ;;BANK0               50     16      24       4       45.0%
   558 ;;BITSFR3              0      0       0       4        0.0%
   559 ;;SFR3                 0      0       0       4        0.0%
   560 ;;BITBANK1h           45      0       0       5        0.0%
   561 ;;BITSFR2              0      0       0       5        0.0%
   562 ;;SFR2                 0      0       0       5        0.0%
   563 ;;BITBANK1l            A      0       0       6        0.0%
   564 ;;BANK1h              45      0       0       7        0.0%
   565 ;;BANK1l               A      0       0       8        0.0%
   566 ;;BITBANK3            60      0       0       9        0.0%
   567 ;;BANK3               60      0       0      10        0.0%
   568 ;;BANK2               50      0       0      11        0.0%
   569 ;;ABS                  0      0      32      12        0.0%
   570 ;;BITBANK2            50      0       0      13        0.0%
   571 ;;DATA                 0      0      3A      14        0.0%
   572                           
   573                           	global	_main
   574                           psect	maintext,global,class=CODE,delta=2
   575                           global __pmaintext
   576  0015                     __pmaintext:
   577                           
   578 ;; *************** function _main *****************
   579 ;; Defined at:
   580 ;;		line 102 in file "primarymain.c"
   581 ;; Parameters:    Size  Location     Type
   582 ;;		None
   583 ;; Auto vars:     Size  Location     Type
   584 ;;  counts          2   18[BANK0 ] int 
   585 ;;  time            2   16[BANK0 ] int 
   586 ;;  P_old           2   14[BANK0 ] int 
   587 ;;  D               2   12[BANK0 ] int 
   588 ;;  I               2   10[BANK0 ] int 
   589 ;;  currentPWM      2    8[BANK0 ] int 
   590 ;;  PID             2    0        int 
   591 ;;  P               2    0        int 
   592 ;;  v               2    0        int 
   593 ;;  c               1   21[BANK0 ] PTR int 
   594 ;;  t               1   20[BANK0 ] PTR int 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  2  1542[COMMON] int 
   597 ;; Registers used:
   598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : 17F/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0       0
   605 ;;      Locals:         0      14       0       0       0       0
   606 ;;      Temps:          0       2       0       0       0       0
   607 ;;      Totals:         0      16       0       0       0       0
   608 ;;Total ram usage:       16 bytes
   609 ;; Hardware stack levels required when called:    5
   610 ;; This function calls:
   611 ;;		_Initialise
   612 ;;		_SetPulse
   613 ;;		_setDirection
   614 ;;		_EncUpdate
   615 ;;		_UpdateData
   616 ;; This function is called by:
   617 ;;		Startup code after reset
   618 ;; This function uses a non-reentrant model
   619 ;;
   620                           psect	maintext
   621                           	file	"primarymain.c"
   622                           	line	102
   623                           	global	__size_of_main
   624  009B                     	__size_of_main	equ	__end_of_main-_main
   625                           	
   626  0015                     _main:	
   627                           	opt	stack 3
   628                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   629                           	line	104
   630                           	
   631  0015                     l9211:	
   632                           ;primarymain.c: 104: int time = 0, counts = 0;
   633  0015  1283               	bcf	status, 5	;RP0=0, select bank0
   634  0016  1303               	bcf	status, 6	;RP1=0, select bank0
   635  0017  01B0               	clrf	(main@time)
   636  0018  01B1               	clrf	(main@time+1)
   637                           ;primarymain.c: 109: *c = counts;
   638  0019  01B2               	clrf	(main@counts)
   639  001A  01B3               	clrf	(main@counts+1)
   640                           	line	110
   641                           ;primarymain.c: 110: int currentPWM = 0;
   642  001B  01A8               	clrf	(main@currentPWM)
   643  001C  01A9               	clrf	(main@currentPWM+1)
   644                           	line	113
   645                           ;primarymain.c: 111: int v;
   646                           ;primarymain.c: 113: int P, I, D, P_old = 0, PID;
   647  001D  01AE               	clrf	(main@P_old)
   648  001E  01AF               	clrf	(main@P_old+1)
   649                           	line	118
   650                           	
   651  001F                     l9213:	
   652                           ;primarymain.c: 118: Initialise();
   653  001F  120A  118A  2171   	fcall	_Initialise
              120A  118A         
   654                           	line	120
   655                           	
   656  0024                     l9215:	
   657                           ;primarymain.c: 120: TARGET = 30;
   658  0024  301E               	movlw	low(01Eh)
   659  0025  1283               	bcf	status, 5	;RP0=0, select bank0
   660  0026  1303               	bcf	status, 6	;RP1=0, select bank0
   661  0027  00BF               	movwf	(_TARGET)
   662  0028  3000               	movlw	high(01Eh)
   663  0029  00C0               	movwf	((_TARGET))+1
   664                           	line	121
   665                           	
   666  002A                     l9217:	
   667                           ;primarymain.c: 121: SetPulse(0);
   668  002A  3000               	movlw	low(0)
   669  002B  00A0               	movwf	(?_SetPulse)
   670  002C  3000               	movlw	high(0)
   671  002D  00A1               	movwf	((?_SetPulse))+1
   672  002E  120A  118A  219E   	fcall	_SetPulse
              120A  118A         
   673  0033  2834               	goto	l9219
   674                           	line	123
   675                           ;primarymain.c: 123: while(1)
   676                           	
   677  0034                     l1543:	
   678                           	line	134
   679                           	
   680  0034                     l9219:	
   681                           ;primarymain.c: 124: {
   682                           ;primarymain.c: 134: PORTD = TMR1;
   683  0034  1283               	bcf	status, 5	;RP0=0, select bank0
   684  0035  1303               	bcf	status, 6	;RP1=0, select bank0
   685  0036  080E               	movf	(14),w	;volatile
   686  0037  0088               	movwf	(8)	;volatile
   687                           	line	135
   688                           	
   689  0038                     l9221:	
   690                           ;primarymain.c: 135: SetPulse(i2cSpeed);
   691  0038  0843               	movf	(_i2cSpeed),w
   692  0039  00A6               	movwf	(??_main+0)+0
   693  003A  01A7               	clrf	(??_main+0)+0+1
   694  003B  0826               	movf	0+(??_main+0)+0,w
   695  003C  00A0               	movwf	(?_SetPulse)
   696  003D  0827               	movf	1+(??_main+0)+0,w
   697  003E  00A1               	movwf	(?_SetPulse+1)
   698  003F  120A  118A  219E   	fcall	_SetPulse
              120A  118A         
   699                           	line	136
   700                           	
   701  0044                     l9223:	
   702                           ;primarymain.c: 136: DIRECTION = i2cDirection;
   703  0044  1283               	bcf	status, 5	;RP0=0, select bank0
   704  0045  1303               	bcf	status, 6	;RP1=0, select bank0
   705  0046  0841               	movf	(_i2cDirection),w
   706  0047  00A6               	movwf	(??_main+0)+0
   707  0048  01A7               	clrf	(??_main+0)+0+1
   708  0049  0826               	movf	0+(??_main+0)+0,w
   709  004A  00BB               	movwf	(_DIRECTION)
   710  004B  0827               	movf	1+(??_main+0)+0,w
   711  004C  00BC               	movwf	(_DIRECTION+1)
   712                           	line	137
   713                           	
   714  004D                     l9225:	
   715                           ;primarymain.c: 137: setDirection(DIRECTION);
   716  004D  083C               	movf	(_DIRECTION+1),w
   717  004E  01A1               	clrf	(?_setDirection+1)
   718  004F  07A1               	addwf	(?_setDirection+1)
   719  0050  083B               	movf	(_DIRECTION),w
   720  0051  01A0               	clrf	(?_setDirection)
   721  0052  07A0               	addwf	(?_setDirection)
   722                           
   723  0053  120A  118A  222C   	fcall	_setDirection
              120A  118A         
   724                           	line	142
   725                           	
   726  0058                     l9227:	
   727                           ;primarymain.c: 142: if (F.I2C == 1)
   728  0058  1683               	bsf	status, 5	;RP0=1, select bank1
   729  0059  1303               	bcf	status, 6	;RP1=0, select bank1
   730  005A  1C2A               	btfss	(170)^080h,0
   731  005B  285D               	goto	u2621
   732  005C  285E               	goto	u2620
   733  005D                     u2621:
   734  005D  286C               	goto	l9233
   735  005E                     u2620:
   736                           	line	149
   737                           	
   738  005E                     l9229:	
   739                           ;primarymain.c: 143: {
   740                           ;primarymain.c: 149: COUNTS = 0;
   741  005E  1283               	bcf	status, 5	;RP0=0, select bank0
   742  005F  1303               	bcf	status, 6	;RP1=0, select bank0
   743  0060  01B9               	clrf	(_COUNTS)
   744  0061  01BA               	clrf	(_COUNTS+1)
   745                           	line	150
   746                           ;primarymain.c: 150: I = 0;
   747  0062  01AA               	clrf	(main@I)
   748  0063  01AB               	clrf	(main@I+1)
   749                           	line	151
   750                           ;primarymain.c: 151: D = 0;
   751  0064  01AC               	clrf	(main@D)
   752  0065  01AD               	clrf	(main@D+1)
   753                           	line	152
   754                           ;primarymain.c: 152: P_old = 0;
   755  0066  01AE               	clrf	(main@P_old)
   756  0067  01AF               	clrf	(main@P_old+1)
   757                           	line	155
   758                           	
   759  0068                     l9231:	
   760                           ;primarymain.c: 155: F.I2C = 0;
   761  0068  1683               	bsf	status, 5	;RP0=1, select bank1
   762  0069  1303               	bcf	status, 6	;RP1=0, select bank1
   763  006A  102A               	bcf	(170)^080h,0
   764  006B  286C               	goto	l9233
   765                           	line	156
   766                           	
   767  006C                     l1544:	
   768                           	line	158
   769                           	
   770  006C                     l9233:	
   771                           ;primarymain.c: 156: }
   772                           ;primarymain.c: 158: if (F.DIR == 1)
   773  006C  1DAA               	btfss	(170)^080h,3
   774  006D  286F               	goto	u2631
   775  006E  2870               	goto	u2630
   776  006F                     u2631:
   777  006F  2834               	goto	l9219
   778  0070                     u2630:
   779                           	line	161
   780                           	
   781  0070                     l9235:	
   782                           ;primarymain.c: 159: {
   783                           ;primarymain.c: 161: EncUpdate(*t, *c);
   784  0070  1283               	bcf	status, 5	;RP0=0, select bank0
   785  0071  1303               	bcf	status, 6	;RP1=0, select bank0
   786  0072  0834               	movf	(main@t),w
   787  0073  0084               	movwf	fsr0
   788  0074  1383               	bcf	status, 7	;select IRP bank0
   789  0075  0800               	movf	indf,w
   790  0076  00A0               	movwf	(?_EncUpdate)
   791  0077  0A84               	incf	fsr0,f
   792  0078  0800               	movf	indf,w
   793  0079  00A1               	movwf	(?_EncUpdate+1)
   794  007A  0835               	movf	(main@c),w
   795  007B  0084               	movwf	fsr0
   796  007C  0800               	movf	indf,w
   797  007D  00A2               	movwf	(0+?_EncUpdate+02h)
   798  007E  0A84               	incf	fsr0,f
   799  007F  0800               	movf	indf,w
   800  0080  00A3               	movwf	(1+?_EncUpdate+02h)
   801  0081  120A  118A  21DC   	fcall	_EncUpdate
              120A  118A         
   802                           	line	162
   803                           	
   804  0086                     l9237:	
   805                           ;primarymain.c: 162: UpdateData(time, counts);
   806  0086  1283               	bcf	status, 5	;RP0=0, select bank0
   807  0087  1303               	bcf	status, 6	;RP1=0, select bank0
   808  0088  0831               	movf	(main@time+1),w
   809  0089  01A1               	clrf	(?_UpdateData+1)
   810  008A  07A1               	addwf	(?_UpdateData+1)
   811  008B  0830               	movf	(main@time),w
   812  008C  01A0               	clrf	(?_UpdateData)
   813  008D  07A0               	addwf	(?_UpdateData)
   814                           
   815  008E  0833               	movf	(main@counts+1),w
   816  008F  01A3               	clrf	1+(?_UpdateData)+02h
   817  0090  07A3               	addwf	1+(?_UpdateData)+02h
   818  0091  0832               	movf	(main@counts),w
   819  0092  01A2               	clrf	0+(?_UpdateData)+02h
   820  0093  07A2               	addwf	0+(?_UpdateData)+02h
   821                           
   822  0094  120A  118A  2215   	fcall	_UpdateData
              120A  118A         
   823                           	line	165
   824                           	
   825  0099                     l9239:	
   826                           ;primarymain.c: 165: DIR_READ = RB5;
   827  0099  1003               	clrc
   828  009A  1283               	bcf	status, 5	;RP0=0, select bank0
   829  009B  1303               	bcf	status, 6	;RP1=0, select bank0
   830  009C  1A86               	btfsc	(53/8),(53)&7
   831  009D  1403               	setc
   832  009E  3000               	movlw	0
   833  009F  1803               	skipnc
   834  00A0  3001               	movlw	1
   835                           
   836  00A1  00A6               	movwf	(??_main+0)+0
   837  00A2  01A7               	clrf	(??_main+0)+0+1
   838  00A3  0826               	movf	0+(??_main+0)+0,w
   839  00A4  00BD               	movwf	(_DIR_READ)
   840  00A5  0827               	movf	1+(??_main+0)+0,w
   841  00A6  00BE               	movwf	(_DIR_READ+1)
   842                           	line	168
   843                           	
   844  00A7                     l9241:	
   845                           ;primarymain.c: 168: F.DIR = 0;
   846  00A7  1683               	bsf	status, 5	;RP0=1, select bank1
   847  00A8  1303               	bcf	status, 6	;RP1=0, select bank1
   848  00A9  11AA               	bcf	(170)^080h,3
   849  00AA  2834               	goto	l9219
   850                           	line	169
   851                           	
   852  00AB                     l1545:	
   853  00AB  2834               	goto	l9219
   854                           	line	205
   855                           	
   856  00AC                     l1546:	
   857                           	line	123
   858  00AC  2834               	goto	l9219
   859                           	
   860  00AD                     l1547:	
   861                           	line	208
   862                           ;primarymain.c: 169: }
   863                           ;primarymain.c: 205: }
   864                           ;primarymain.c: 207: return 1;
   865                           ;	Return value of _main is never used
   866                           	
   867  00AD                     l1548:	
   868                           	global	start
   869  00AD  120A  118A  2812   	ljmp	start
   870                           	opt stack 0
   871                           GLOBAL	__end_of_main
   872  00B0                     	__end_of_main:
   873 ;; =============== function _main ends ============
   874                           
   875                           	signat	_main,90
   876                           	global	_Initialise
   877                           psect	text362,local,class=CODE,delta=2
   878                           global __ptext362
   879  0171                     __ptext362:
   880                           
   881 ;; *************** function _Initialise *****************
   882 ;; Defined at:
   883 ;;		line 214 in file "primarymain.c"
   884 ;; Parameters:    Size  Location     Type
   885 ;;		None
   886 ;; Auto vars:     Size  Location     Type
   887 ;;		None
   888 ;; Return value:  Size  Location     Type
   889 ;;		None               void
   890 ;; Registers used:
   891 ;;		wreg, status,2, status,0, pclath, cstack
   892 ;; Tracked objects:
   893 ;;		On entry : 0/0
   894 ;;		On exit  : 0/0
   895 ;;		Unchanged: 0/0
   896 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
   897 ;;      Params:         0       0       0       0       0       0
   898 ;;      Locals:         0       0       0       0       0       0
   899 ;;      Temps:          0       0       0       0       0       0
   900 ;;      Totals:         0       0       0       0       0       0
   901 ;;Total ram usage:        0 bytes
   902 ;; Hardware stack levels used:    1
   903 ;; Hardware stack levels required when called:    4
   904 ;; This function calls:
   905 ;;		_BeginPWM
   906 ;;		_BeginEncoder
   907 ;;		_i2cInit
   908 ;; This function is called by:
   909 ;;		_main
   910 ;; This function uses a non-reentrant model
   911 ;;
   912                           psect	text362
   913                           	file	"primarymain.c"
   914                           	line	214
   915                           	global	__size_of_Initialise
   916  002D                     	__size_of_Initialise	equ	__end_of_Initialise-_Initialise
   917                           	
   918  0171                     _Initialise:	
   919                           	opt	stack 3
   920                           ; Regs used in _Initialise: [wreg+status,2+status,0+pclath+cstack]
   921                           	line	215
   922                           	
   923  0171                     l9181:	
   924                           ;primarymain.c: 215: FLAG = 0;
   925  0171  1683               	bsf	status, 5	;RP0=1, select bank1
   926  0172  1303               	bcf	status, 6	;RP1=0, select bank1
   927  0173  01AA               	clrf	(170)^080h
   928                           	line	216
   929                           	
   930  0174                     l9183:	
   931                           ;primarymain.c: 216: BeginPWM();
   932  0174  120A  118A  21BE   	fcall	_BeginPWM
              120A  118A         
   933                           	line	217
   934                           ;primarymain.c: 217: BeginEncoder();
   935  0179  120A  118A  2276   	fcall	_BeginEncoder
              120A  118A         
   936                           	line	218
   937                           ;primarymain.c: 218: i2cInit(0x10);
   938  017E  3010               	movlw	(010h)
   939  017F  120A  118A  21F9   	fcall	_i2cInit
              120A  118A         
   940                           	line	221
   941                           	
   942  0184                     l9185:	
   943                           ;primarymain.c: 221: PEIE = 1;
   944  0184  170B               	bsf	(94/8),(94)&7
   945                           	line	222
   946                           	
   947  0185                     l9187:	
   948                           ;primarymain.c: 222: RBIE = 1;
   949  0185  158B               	bsf	(91/8),(91)&7
   950                           	line	223
   951                           	
   952  0186                     l9189:	
   953                           ;primarymain.c: 223: T0IE = 0;
   954  0186  128B               	bcf	(93/8),(93)&7
   955                           	line	224
   956                           	
   957  0187                     l9191:	
   958                           ;primarymain.c: 224: PIE1 = 0b00001001;
   959  0187  3009               	movlw	(09h)
   960  0188  1683               	bsf	status, 5	;RP0=1, select bank1
   961  0189  1303               	bcf	status, 6	;RP1=0, select bank1
   962  018A  008C               	movwf	(140)^080h	;volatile
   963                           	line	225
   964                           	
   965  018B                     l9193:	
   966                           ;primarymain.c: 225: PIE2 = 0;
   967  018B  018D               	clrf	(141)^080h	;volatile
   968                           	line	227
   969                           	
   970  018C                     l9195:	
   971                           ;primarymain.c: 227: SSPIF = 0;
   972  018C  1283               	bcf	status, 5	;RP0=0, select bank0
   973  018D  1303               	bcf	status, 6	;RP1=0, select bank0
   974  018E  118C               	bcf	(99/8),(99)&7
   975                           	line	228
   976                           	
   977  018F                     l9197:	
   978                           ;primarymain.c: 228: RBIF = 0;
   979  018F  100B               	bcf	(88/8),(88)&7
   980                           	line	229
   981                           	
   982  0190                     l9199:	
   983                           ;primarymain.c: 229: T0IF = 0;
   984  0190  110B               	bcf	(90/8),(90)&7
   985                           	line	230
   986                           	
   987  0191                     l9201:	
   988                           ;primarymain.c: 230: TMR1IF = 0;
   989  0191  100C               	bcf	(96/8),(96)&7
   990                           	line	232
   991                           	
   992  0192                     l9203:	
   993                           ;primarymain.c: 232: GIE = 1;
   994  0192  178B               	bsf	(95/8),(95)&7
   995                           	line	234
   996                           	
   997  0193                     l9205:	
   998                           ;primarymain.c: 234: TRISB = 0b11110111;
   999  0193  30F7               	movlw	(0F7h)
  1000  0194  1683               	bsf	status, 5	;RP0=1, select bank1
  1001  0195  1303               	bcf	status, 6	;RP1=0, select bank1
  1002  0196  0086               	movwf	(134)^080h	;volatile
  1003                           	line	235
  1004                           	
  1005  0197                     l9207:	
  1006                           ;primarymain.c: 235: PORTBbits.RB3 = 0;
  1007  0197  1283               	bcf	status, 5	;RP0=0, select bank0
  1008  0198  1303               	bcf	status, 6	;RP1=0, select bank0
  1009  0199  1186               	bcf	(6),3	;volatile
  1010                           	line	237
  1011                           	
  1012  019A                     l9209:	
  1013                           ;primarymain.c: 237: TRISD = 0;
  1014  019A  1683               	bsf	status, 5	;RP0=1, select bank1
  1015  019B  1303               	bcf	status, 6	;RP1=0, select bank1
  1016  019C  0188               	clrf	(136)^080h	;volatile
  1017                           	line	238
  1018                           	
  1019  019D                     l1551:	
  1020  019D  0008               	return
  1021                           	opt stack 0
  1022                           GLOBAL	__end_of_Initialise
  1023  019E                     	__end_of_Initialise:
  1024 ;; =============== function _Initialise ends ============
  1025                           
  1026                           	signat	_Initialise,88
  1027                           	global	_i2cInit
  1028                           psect	text363,local,class=CODE,delta=2
  1029                           global __ptext363
  1030  01F9                     __ptext363:
  1031                           
  1032 ;; *************** function _i2cInit *****************
  1033 ;; Defined at:
  1034 ;;		line 17 in file "i2cSlave.c"
  1035 ;; Parameters:    Size  Location     Type
  1036 ;;  address         1    wreg     unsigned char 
  1037 ;; Auto vars:     Size  Location     Type
  1038 ;;  address         1    0[BANK0 ] unsigned char 
  1039 ;; Return value:  Size  Location     Type
  1040 ;;		None               void
  1041 ;; Registers used:
  1042 ;;		wreg
  1043 ;; Tracked objects:
  1044 ;;		On entry : 0/0
  1045 ;;		On exit  : 0/0
  1046 ;;		Unchanged: 0/0
  1047 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1048 ;;      Params:         0       0       0       0       0       0
  1049 ;;      Locals:         0       1       0       0       0       0
  1050 ;;      Temps:          0       0       0       0       0       0
  1051 ;;      Totals:         0       1       0       0       0       0
  1052 ;;Total ram usage:        1 bytes
  1053 ;; Hardware stack levels used:    1
  1054 ;; Hardware stack levels required when called:    3
  1055 ;; This function calls:
  1056 ;;		Nothing
  1057 ;; This function is called by:
  1058 ;;		_Initialise
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           psect	text363
  1062                           	file	"i2cSlave.c"
  1063                           	line	17
  1064                           	global	__size_of_i2cInit
  1065  001C                     	__size_of_i2cInit	equ	__end_of_i2cInit-_i2cInit
  1066                           	
  1067  01F9                     _i2cInit:	
  1068                           	opt	stack 3
  1069                           ; Regs used in _i2cInit: [wreg]
  1070                           ;i2cInit@address stored from wreg
  1071                           	line	19
  1072  01F9  1283               	bcf	status, 5	;RP0=0, select bank0
  1073  01FA  1303               	bcf	status, 6	;RP1=0, select bank0
  1074  01FB  00A0               	movwf	(i2cInit@address)
  1075                           	
  1076  01FC                     l9095:	
  1077                           ;i2cSlave.c: 19: TRISC6 = 1;
  1078  01FC  1683               	bsf	status, 5	;RP0=1, select bank1
  1079  01FD  1303               	bcf	status, 6	;RP1=0, select bank1
  1080  01FE  1707               	bsf	(1086/8)^080h,(1086)&7
  1081                           	line	20
  1082                           ;i2cSlave.c: 20: TRISC7 = 1;
  1083  01FF  1787               	bsf	(1087/8)^080h,(1087)&7
  1084                           	line	21
  1085                           ;i2cSlave.c: 21: SSPEN = 1;
  1086  0200  1283               	bcf	status, 5	;RP0=0, select bank0
  1087  0201  1303               	bcf	status, 6	;RP1=0, select bank0
  1088  0202  1694               	bsf	(165/8),(165)&7
  1089                           	line	22
  1090                           ;i2cSlave.c: 22: CKE = 0;
  1091  0203  1683               	bsf	status, 5	;RP0=1, select bank1
  1092  0204  1303               	bcf	status, 6	;RP1=0, select bank1
  1093  0205  1314               	bcf	(1190/8)^080h,(1190)&7
  1094                           	line	23
  1095                           ;i2cSlave.c: 23: SMP = 0;
  1096  0206  1394               	bcf	(1191/8)^080h,(1191)&7
  1097                           	line	24
  1098                           ;i2cSlave.c: 24: CKP = 1;
  1099  0207  1283               	bcf	status, 5	;RP0=0, select bank0
  1100  0208  1303               	bcf	status, 6	;RP1=0, select bank0
  1101  0209  1614               	bsf	(164/8),(164)&7
  1102                           	line	26
  1103                           ;i2cSlave.c: 26: SSPM0 = 0;
  1104  020A  1014               	bcf	(160/8),(160)&7
  1105                           	line	27
  1106                           ;i2cSlave.c: 27: SSPM1 = 1;
  1107  020B  1494               	bsf	(161/8),(161)&7
  1108                           	line	28
  1109                           ;i2cSlave.c: 28: SSPM2 = 1;
  1110  020C  1514               	bsf	(162/8),(162)&7
  1111                           	line	29
  1112                           ;i2cSlave.c: 29: SSPM3 = 0;
  1113  020D  1194               	bcf	(163/8),(163)&7
  1114                           	line	33
  1115                           	
  1116  020E                     l9097:	
  1117                           ;i2cSlave.c: 33: SSPADD = address;
  1118  020E  0820               	movf	(i2cInit@address),w
  1119  020F  1683               	bsf	status, 5	;RP0=1, select bank1
  1120  0210  1303               	bcf	status, 6	;RP1=0, select bank1
  1121  0211  0093               	movwf	(147)^080h	;volatile
  1122                           	line	39
  1123                           	
  1124  0212                     l9099:	
  1125                           ;i2cSlave.c: 39: i2cBufferVal = 0;
  1126  0212  01FC               	clrf	(_i2cBufferVal)
  1127                           	line	40
  1128                           	
  1129  0213                     l9101:	
  1130                           ;i2cSlave.c: 40: i2cWriteInt = 0;
  1131  0213  01FD               	clrf	(_i2cWriteInt)
  1132                           	line	41
  1133                           	
  1134  0214                     l6106:	
  1135  0214  0008               	return
  1136                           	opt stack 0
  1137                           GLOBAL	__end_of_i2cInit
  1138  0215                     	__end_of_i2cInit:
  1139 ;; =============== function _i2cInit ends ============
  1140                           
  1141                           	signat	_i2cInit,4216
  1142                           	global	_BeginEncoder
  1143                           psect	text364,local,class=CODE,delta=2
  1144                           global __ptext364
  1145  0276                     __ptext364:
  1146                           
  1147 ;; *************** function _BeginEncoder *****************
  1148 ;; Defined at:
  1149 ;;		line 22 in file "enclib.c"
  1150 ;; Parameters:    Size  Location     Type
  1151 ;;		None
  1152 ;; Auto vars:     Size  Location     Type
  1153 ;;		None
  1154 ;; Return value:  Size  Location     Type
  1155 ;;		None               void
  1156 ;; Registers used:
  1157 ;;		wreg
  1158 ;; Tracked objects:
  1159 ;;		On entry : 0/0
  1160 ;;		On exit  : 0/0
  1161 ;;		Unchanged: 0/0
  1162 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1163 ;;      Params:         0       0       0       0       0       0
  1164 ;;      Locals:         0       0       0       0       0       0
  1165 ;;      Temps:          0       0       0       0       0       0
  1166 ;;      Totals:         0       0       0       0       0       0
  1167 ;;Total ram usage:        0 bytes
  1168 ;; Hardware stack levels used:    1
  1169 ;; Hardware stack levels required when called:    3
  1170 ;; This function calls:
  1171 ;;		Nothing
  1172 ;; This function is called by:
  1173 ;;		_Initialise
  1174 ;; This function uses a non-reentrant model
  1175 ;;
  1176                           psect	text364
  1177                           	file	"enclib.c"
  1178                           	line	22
  1179                           	global	__size_of_BeginEncoder
  1180  000B                     	__size_of_BeginEncoder	equ	__end_of_BeginEncoder-_BeginEncoder
  1181                           	
  1182  0276                     _BeginEncoder:	
  1183                           	opt	stack 3
  1184                           ; Regs used in _BeginEncoder: [wreg]
  1185                           	line	28
  1186                           	
  1187  0276                     l9093:	
  1188                           ;enclib.c: 28: OPTION_REG = 0b10010111;
  1189  0276  3097               	movlw	(097h)
  1190  0277  1683               	bsf	status, 5	;RP0=1, select bank1
  1191  0278  1303               	bcf	status, 6	;RP1=0, select bank1
  1192  0279  0081               	movwf	(129)^080h	;volatile
  1193                           	line	34
  1194                           ;enclib.c: 34: CMCON1 = 0x02;
  1195  027A  3002               	movlw	(02h)
  1196  027B  0097               	movwf	(151)^080h	;volatile
  1197                           	line	35
  1198                           ;enclib.c: 35: T1CON = 0b00000111;
  1199  027C  3007               	movlw	(07h)
  1200  027D  1283               	bcf	status, 5	;RP0=0, select bank0
  1201  027E  1303               	bcf	status, 6	;RP1=0, select bank0
  1202  027F  0090               	movwf	(16)	;volatile
  1203                           	line	36
  1204                           	
  1205  0280                     l4594:	
  1206  0280  0008               	return
  1207                           	opt stack 0
  1208                           GLOBAL	__end_of_BeginEncoder
  1209  0281                     	__end_of_BeginEncoder:
  1210 ;; =============== function _BeginEncoder ends ============
  1211                           
  1212                           	signat	_BeginEncoder,88
  1213                           	global	_BeginPWM
  1214                           psect	text365,local,class=CODE,delta=2
  1215                           global __ptext365
  1216  01BE                     __ptext365:
  1217                           
  1218 ;; *************** function _BeginPWM *****************
  1219 ;; Defined at:
  1220 ;;		line 41 in file "pwmlib.c"
  1221 ;; Parameters:    Size  Location     Type
  1222 ;;		None
  1223 ;; Auto vars:     Size  Location     Type
  1224 ;;		None
  1225 ;; Return value:  Size  Location     Type
  1226 ;;		None               void
  1227 ;; Registers used:
  1228 ;;		wreg, status,2
  1229 ;; Tracked objects:
  1230 ;;		On entry : 0/0
  1231 ;;		On exit  : 0/0
  1232 ;;		Unchanged: 0/0
  1233 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1234 ;;      Params:         0       0       0       0       0       0
  1235 ;;      Locals:         0       0       0       0       0       0
  1236 ;;      Temps:          0       0       0       0       0       0
  1237 ;;      Totals:         0       0       0       0       0       0
  1238 ;;Total ram usage:        0 bytes
  1239 ;; Hardware stack levels used:    1
  1240 ;; Hardware stack levels required when called:    3
  1241 ;; This function calls:
  1242 ;;		Nothing
  1243 ;; This function is called by:
  1244 ;;		_Initialise
  1245 ;; This function uses a non-reentrant model
  1246 ;;
  1247                           psect	text365
  1248                           	file	"pwmlib.c"
  1249                           	line	41
  1250                           	global	__size_of_BeginPWM
  1251  001E                     	__size_of_BeginPWM	equ	__end_of_BeginPWM-_BeginPWM
  1252                           	
  1253  01BE                     _BeginPWM:	
  1254                           	opt	stack 3
  1255                           ; Regs used in _BeginPWM: [wreg+status,2]
  1256                           	line	44
  1257                           	
  1258  01BE                     l9075:	
  1259                           ;pwmlib.c: 44: TRISDbits.TRISD2 = 1;
  1260  01BE  1683               	bsf	status, 5	;RP0=1, select bank1
  1261  01BF  1303               	bcf	status, 6	;RP1=0, select bank1
  1262  01C0  1508               	bsf	(136)^080h,2	;volatile
  1263                           	line	47
  1264                           ;pwmlib.c: 47: PIE1bits.TMR2IE = 0;
  1265  01C1  108C               	bcf	(140)^080h,1	;volatile
  1266                           	line	51
  1267                           	
  1268  01C2                     l9077:	
  1269                           ;pwmlib.c: 51: PR2 = 0xFF;
  1270  01C2  30FF               	movlw	(0FFh)
  1271  01C3  0092               	movwf	(146)^080h	;volatile
  1272                           	line	55
  1273                           ;pwmlib.c: 55: CCP2CON = 0b00001100;
  1274  01C4  300C               	movlw	(0Ch)
  1275  01C5  1283               	bcf	status, 5	;RP0=0, select bank0
  1276  01C6  1303               	bcf	status, 6	;RP1=0, select bank0
  1277  01C7  009D               	movwf	(29)	;volatile
  1278                           	line	59
  1279                           	
  1280  01C8                     l9079:	
  1281                           ;pwmlib.c: 59: CCPR2L = 0;
  1282  01C8  019B               	clrf	(27)	;volatile
  1283                           	line	60
  1284                           	
  1285  01C9                     l9081:	
  1286                           ;pwmlib.c: 60: CCP2CONbits.CCP2X = 0;
  1287  01C9  129D               	bcf	(29),5	;volatile
  1288                           	line	61
  1289                           	
  1290  01CA                     l9083:	
  1291                           ;pwmlib.c: 61: CCP2CONbits.CCP2Y = 0;
  1292  01CA  121D               	bcf	(29),4	;volatile
  1293                           	line	66
  1294                           	
  1295  01CB                     l9085:	
  1296                           ;pwmlib.c: 66: PIR1bits.TMR2IF = 0;
  1297  01CB  108C               	bcf	(12),1	;volatile
  1298                           	line	70
  1299                           	
  1300  01CC                     l9087:	
  1301                           ;pwmlib.c: 70: T2CON = 0b00000100;
  1302  01CC  3004               	movlw	(04h)
  1303  01CD  0092               	movwf	(18)	;volatile
  1304  01CE  29CF               	goto	l9089
  1305                           	line	75
  1306                           ;pwmlib.c: 75: while(1)
  1307                           	
  1308  01CF                     l3088:	
  1309                           	line	77
  1310                           	
  1311  01CF                     l9089:	
  1312                           ;pwmlib.c: 76: {
  1313                           ;pwmlib.c: 77: if(PIR1bits.TMR2IF == 1)
  1314  01CF  1283               	bcf	status, 5	;RP0=0, select bank0
  1315  01D0  1C8C               	btfss	(12),1	;volatile
  1316  01D1  29D3               	goto	u2501
  1317  01D2  29D4               	goto	u2500
  1318  01D3                     u2501:
  1319  01D3  29CF               	goto	l9089
  1320  01D4                     u2500:
  1321                           	line	79
  1322                           	
  1323  01D4                     l9091:	
  1324                           ;pwmlib.c: 78: {
  1325                           ;pwmlib.c: 79: TMR2IF = 0;
  1326  01D4  108C               	bcf	(97/8),(97)&7
  1327                           	line	80
  1328                           ;pwmlib.c: 80: TRISDbits.TRISD2 = 0;
  1329  01D5  1683               	bsf	status, 5	;RP0=1, select bank1
  1330  01D6  1303               	bcf	status, 6	;RP1=0, select bank1
  1331  01D7  1108               	bcf	(136)^080h,2	;volatile
  1332                           	line	81
  1333                           ;pwmlib.c: 81: break;
  1334  01D8  29DB               	goto	l3092
  1335                           	line	82
  1336                           	
  1337  01D9                     l3089:	
  1338  01D9  29CF               	goto	l9089
  1339                           	line	83
  1340                           	
  1341  01DA                     l3091:	
  1342                           	line	75
  1343  01DA  29CF               	goto	l9089
  1344                           	
  1345  01DB                     l3090:	
  1346                           	line	84
  1347                           	
  1348  01DB                     l3092:	
  1349  01DB  0008               	return
  1350                           	opt stack 0
  1351                           GLOBAL	__end_of_BeginPWM
  1352  01DC                     	__end_of_BeginPWM:
  1353 ;; =============== function _BeginPWM ends ============
  1354                           
  1355                           	signat	_BeginPWM,88
  1356                           	global	_UpdateData
  1357                           psect	text366,local,class=CODE,delta=2
  1358                           global __ptext366
  1359  0215                     __ptext366:
  1360                           
  1361 ;; *************** function _UpdateData *****************
  1362 ;; Defined at:
  1363 ;;		line 279 in file "primarymain.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;  t               2    0[BANK0 ] int 
  1366 ;;  c               2    2[BANK0 ] int 
  1367 ;; Auto vars:     Size  Location     Type
  1368 ;;		None
  1369 ;; Return value:  Size  Location     Type
  1370 ;;		None               void
  1371 ;; Registers used:
  1372 ;;		wreg, status,2, status,0
  1373 ;; Tracked objects:
  1374 ;;		On entry : 0/0
  1375 ;;		On exit  : 0/0
  1376 ;;		Unchanged: 0/0
  1377 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1378 ;;      Params:         0       4       0       0       0       0
  1379 ;;      Locals:         0       0       0       0       0       0
  1380 ;;      Temps:          0       0       0       0       0       0
  1381 ;;      Totals:         0       4       0       0       0       0
  1382 ;;Total ram usage:        4 bytes
  1383 ;; Hardware stack levels used:    1
  1384 ;; Hardware stack levels required when called:    3
  1385 ;; This function calls:
  1386 ;;		Nothing
  1387 ;; This function is called by:
  1388 ;;		_main
  1389 ;; This function uses a non-reentrant model
  1390 ;;
  1391                           psect	text366
  1392                           	file	"primarymain.c"
  1393                           	line	279
  1394                           	global	__size_of_UpdateData
  1395  0017                     	__size_of_UpdateData	equ	__end_of_UpdateData-_UpdateData
  1396                           	
  1397  0215                     _UpdateData:	
  1398                           	opt	stack 4
  1399                           ; Regs used in _UpdateData: [wreg+status,2+status,0]
  1400                           	line	283
  1401                           	
  1402  0215                     l9069:	
  1403                           ;primarymain.c: 283: if (DIR_READ == 0)
  1404  0215  1283               	bcf	status, 5	;RP0=0, select bank0
  1405  0216  1303               	bcf	status, 6	;RP1=0, select bank0
  1406  0217  083E               	movf	((_DIR_READ+1)),w
  1407  0218  043D               	iorwf	((_DIR_READ)),w
  1408  0219  1D03               	skipz
  1409  021A  2A1C               	goto	u2491
  1410  021B  2A1D               	goto	u2490
  1411  021C                     u2491:
  1412  021C  2A24               	goto	l9073
  1413  021D                     u2490:
  1414                           	line	286
  1415                           	
  1416  021D                     l9071:	
  1417                           ;primarymain.c: 284: {
  1418                           ;primarymain.c: 286: COUNTS += c;
  1419  021D  0822               	movf	(UpdateData@c),w
  1420  021E  07B9               	addwf	(_COUNTS),f
  1421  021F  1803               	skipnc
  1422  0220  0ABA               	incf	(_COUNTS+1),f
  1423  0221  0823               	movf	(UpdateData@c+1),w
  1424  0222  07BA               	addwf	(_COUNTS+1),f
  1425                           	line	287
  1426                           ;primarymain.c: 287: } else
  1427  0223  2A2B               	goto	l1569
  1428                           	
  1429  0224                     l1567:	
  1430                           	line	290
  1431                           	
  1432  0224                     l9073:	
  1433                           ;primarymain.c: 288: {
  1434                           ;primarymain.c: 290: COUNTS -= c;
  1435  0224  0822               	movf	(UpdateData@c),w
  1436  0225  02B9               	subwf	(_COUNTS),f
  1437  0226  0823               	movf	(UpdateData@c+1),w
  1438  0227  1C03               	skipc
  1439  0228  03BA               	decf	(_COUNTS+1),f
  1440  0229  02BA               	subwf	(_COUNTS+1),f
  1441  022A  2A2B               	goto	l1569
  1442                           	line	291
  1443                           	
  1444  022B                     l1568:	
  1445                           	line	292
  1446                           	
  1447  022B                     l1569:	
  1448  022B  0008               	return
  1449                           	opt stack 0
  1450                           GLOBAL	__end_of_UpdateData
  1451  022C                     	__end_of_UpdateData:
  1452 ;; =============== function _UpdateData ends ============
  1453                           
  1454                           	signat	_UpdateData,8312
  1455                           	global	_EncUpdate
  1456                           psect	text367,local,class=CODE,delta=2
  1457                           global __ptext367
  1458  01DC                     __ptext367:
  1459                           
  1460 ;; *************** function _EncUpdate *****************
  1461 ;; Defined at:
  1462 ;;		line 42 in file "enclib.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;  t0              2    0[BANK0 ] PTR int 
  1465 ;;		 -> RAM(512), 
  1466 ;;  t1              2    2[BANK0 ] PTR int 
  1467 ;;		 -> RAM(512), 
  1468 ;; Auto vars:     Size  Location     Type
  1469 ;;		None
  1470 ;; Return value:  Size  Location     Type
  1471 ;;		None               void
  1472 ;; Registers used:
  1473 ;;		wreg, fsr0l, fsr0h, status,2
  1474 ;; Tracked objects:
  1475 ;;		On entry : 0/0
  1476 ;;		On exit  : 0/0
  1477 ;;		Unchanged: 0/0
  1478 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1479 ;;      Params:         0       4       0       0       0       0
  1480 ;;      Locals:         0       0       0       0       0       0
  1481 ;;      Temps:          0       2       0       0       0       0
  1482 ;;      Totals:         0       6       0       0       0       0
  1483 ;;Total ram usage:        6 bytes
  1484 ;; Hardware stack levels used:    1
  1485 ;; Hardware stack levels required when called:    3
  1486 ;; This function calls:
  1487 ;;		Nothing
  1488 ;; This function is called by:
  1489 ;;		_main
  1490 ;; This function uses a non-reentrant model
  1491 ;;
  1492                           psect	text367
  1493                           	file	"enclib.c"
  1494                           	line	42
  1495                           	global	__size_of_EncUpdate
  1496  001D                     	__size_of_EncUpdate	equ	__end_of_EncUpdate-_EncUpdate
  1497                           	
  1498  01DC                     _EncUpdate:	
  1499                           	opt	stack 4
  1500                           ; Regs used in _EncUpdate: [wreg-fsr0h+status,2]
  1501                           	line	43
  1502                           	
  1503  01DC                     l9063:	
  1504                           ;enclib.c: 43: *t1 = TMR1;
  1505  01DC  1283               	bcf	status, 5	;RP0=0, select bank0
  1506  01DD  1303               	bcf	status, 6	;RP1=0, select bank0
  1507  01DE  0822               	movf	(EncUpdate@t1),w
  1508  01DF  0084               	movwf	fsr0
  1509  01E0  1783               	bsf	status,7
  1510  01E1  1C23               	btfss	(EncUpdate@t1+1),0
  1511  01E2  1383               	bcf	status,7
  1512  01E3  080E               	movf	(14),w	;volatile
  1513  01E4  0080               	movwf	indf
  1514  01E5  0A84               	incf	fsr0,f
  1515  01E6  080F               	movf	(14+1),w	;volatile
  1516  01E7  0080               	movwf	indf
  1517                           	line	44
  1518                           ;enclib.c: 44: *t0 = TMR0;
  1519  01E8  0801               	movf	(1),w	;volatile
  1520  01E9  00A4               	movwf	(??_EncUpdate+0)+0
  1521  01EA  01A5               	clrf	(??_EncUpdate+0)+0+1
  1522  01EB  0820               	movf	(EncUpdate@t0),w
  1523  01EC  0084               	movwf	fsr0
  1524  01ED  1783               	bsf	status,7
  1525  01EE  1C21               	btfss	(EncUpdate@t0+1),0
  1526  01EF  1383               	bcf	status,7
  1527  01F0  0824               	movf	0+(??_EncUpdate+0)+0,w
  1528  01F1  0080               	movwf	indf
  1529  01F2  0A84               	incf	fsr0,f
  1530  01F3  0825               	movf	1+(??_EncUpdate+0)+0,w
  1531  01F4  0080               	movwf	indf
  1532                           	line	45
  1533                           	
  1534  01F5                     l9065:	
  1535                           ;enclib.c: 45: TMR1 = 0;
  1536  01F5  018E               	clrf	(14)	;volatile
  1537  01F6  018F               	clrf	(14+1)	;volatile
  1538                           	line	46
  1539                           	
  1540  01F7                     l9067:	
  1541                           ;enclib.c: 46: TMR0 = 0;
  1542  01F7  0181               	clrf	(1)	;volatile
  1543                           	line	47
  1544                           	
  1545  01F8                     l4597:	
  1546  01F8  0008               	return
  1547                           	opt stack 0
  1548                           GLOBAL	__end_of_EncUpdate
  1549  01F9                     	__end_of_EncUpdate:
  1550 ;; =============== function _EncUpdate ends ============
  1551                           
  1552                           	signat	_EncUpdate,8312
  1553                           	global	_setDirection
  1554                           psect	text368,local,class=CODE,delta=2
  1555                           global __ptext368
  1556  022C                     __ptext368:
  1557                           
  1558 ;; *************** function _setDirection *****************
  1559 ;; Defined at:
  1560 ;;		line 297 in file "primarymain.c"
  1561 ;; Parameters:    Size  Location     Type
  1562 ;;  dir             2    0[BANK0 ] int 
  1563 ;; Auto vars:     Size  Location     Type
  1564 ;;		None
  1565 ;; Return value:  Size  Location     Type
  1566 ;;		None               void
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1574 ;;      Params:         0       2       0       0       0       0
  1575 ;;      Locals:         0       0       0       0       0       0
  1576 ;;      Temps:          0       0       0       0       0       0
  1577 ;;      Totals:         0       2       0       0       0       0
  1578 ;;Total ram usage:        2 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; Hardware stack levels required when called:    3
  1581 ;; This function calls:
  1582 ;;		Nothing
  1583 ;; This function is called by:
  1584 ;;		_main
  1585 ;; This function uses a non-reentrant model
  1586 ;;
  1587                           psect	text368
  1588                           	file	"primarymain.c"
  1589                           	line	297
  1590                           	global	__size_of_setDirection
  1591  0017                     	__size_of_setDirection	equ	__end_of_setDirection-_setDirection
  1592                           	
  1593  022C                     _setDirection:	
  1594                           	opt	stack 4
  1595                           ; Regs used in _setDirection: [wreg+status,2+status,0]
  1596                           	line	298
  1597                           	
  1598  022C                     l9055:	
  1599                           ;primarymain.c: 298: if (dir == 0)
  1600  022C  1283               	bcf	status, 5	;RP0=0, select bank0
  1601  022D  1303               	bcf	status, 6	;RP1=0, select bank0
  1602  022E  0821               	movf	((setDirection@dir+1)),w
  1603  022F  0420               	iorwf	((setDirection@dir)),w
  1604  0230  1D03               	skipz
  1605  0231  2A33               	goto	u2471
  1606  0232  2A34               	goto	u2470
  1607  0233                     u2471:
  1608  0233  2A36               	goto	l9059
  1609  0234                     u2470:
  1610                           	line	299
  1611                           	
  1612  0234                     l9057:	
  1613                           ;primarymain.c: 299: PORTBbits.RB3 = 0;
  1614  0234  1186               	bcf	(6),3	;volatile
  1615  0235  2A42               	goto	l1576
  1616                           	line	300
  1617                           	
  1618  0236                     l1572:	
  1619                           	
  1620  0236                     l9059:	
  1621                           ;primarymain.c: 300: else if (dir == 1)
  1622  0236  3001               	movlw	01h
  1623  0237  0620               	xorwf	(setDirection@dir),w
  1624  0238  0421               	iorwf	(setDirection@dir+1),w
  1625  0239  1D03               	skipz
  1626  023A  2A3C               	goto	u2481
  1627  023B  2A3D               	goto	u2480
  1628  023C                     u2481:
  1629  023C  2A3F               	goto	l1574
  1630  023D                     u2480:
  1631                           	line	301
  1632                           	
  1633  023D                     l9061:	
  1634                           ;primarymain.c: 301: PORTBbits.RB3 = !0;
  1635  023D  1586               	bsf	(6),3	;volatile
  1636  023E  2A42               	goto	l1576
  1637                           	line	302
  1638                           	
  1639  023F                     l1574:	
  1640                           	line	303
  1641                           ;primarymain.c: 302: else
  1642                           ;primarymain.c: 303: PORTBbits.RB3 = 0;
  1643  023F  1186               	bcf	(6),3	;volatile
  1644  0240  2A42               	goto	l1576
  1645                           	
  1646  0241                     l1575:	
  1647  0241  2A42               	goto	l1576
  1648                           	
  1649  0242                     l1573:	
  1650                           	line	304
  1651                           	
  1652  0242                     l1576:	
  1653  0242  0008               	return
  1654                           	opt stack 0
  1655                           GLOBAL	__end_of_setDirection
  1656  0243                     	__end_of_setDirection:
  1657 ;; =============== function _setDirection ends ============
  1658                           
  1659                           	signat	_setDirection,4216
  1660                           	global	_SetPulse
  1661                           psect	text369,local,class=CODE,delta=2
  1662                           global __ptext369
  1663  019E                     __ptext369:
  1664                           
  1665 ;; *************** function _SetPulse *****************
  1666 ;; Defined at:
  1667 ;;		line 105 in file "pwmlib.c"
  1668 ;; Parameters:    Size  Location     Type
  1669 ;;  length          2    0[BANK0 ] int 
  1670 ;; Auto vars:     Size  Location     Type
  1671 ;;  temp            2    2[BANK0 ] int 
  1672 ;; Return value:  Size  Location     Type
  1673 ;;		None               void
  1674 ;; Registers used:
  1675 ;;		wreg, status,2, status,0, btemp+1
  1676 ;; Tracked objects:
  1677 ;;		On entry : 0/0
  1678 ;;		On exit  : 0/0
  1679 ;;		Unchanged: 0/0
  1680 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1681 ;;      Params:         0       2       0       0       0       0
  1682 ;;      Locals:         0       2       0       0       0       0
  1683 ;;      Temps:          0       0       0       0       0       0
  1684 ;;      Totals:         0       4       0       0       0       0
  1685 ;;Total ram usage:        4 bytes
  1686 ;; Hardware stack levels used:    1
  1687 ;; Hardware stack levels required when called:    3
  1688 ;; This function calls:
  1689 ;;		Nothing
  1690 ;; This function is called by:
  1691 ;;		_main
  1692 ;;		_CalcPulse
  1693 ;; This function uses a non-reentrant model
  1694 ;;
  1695                           psect	text369
  1696                           	file	"pwmlib.c"
  1697                           	line	105
  1698                           	global	__size_of_SetPulse
  1699  0020                     	__size_of_SetPulse	equ	__end_of_SetPulse-_SetPulse
  1700                           	
  1701  019E                     _SetPulse:	
  1702                           	opt	stack 4
  1703                           ; Regs used in _SetPulse: [wreg+status,2+status,0+btemp+1]
  1704                           	line	106
  1705                           	
  1706  019E                     l9049:	
  1707                           ;pwmlib.c: 106: int temp = length;
  1708  019E  1283               	bcf	status, 5	;RP0=0, select bank0
  1709  019F  1303               	bcf	status, 6	;RP1=0, select bank0
  1710  01A0  0821               	movf	(SetPulse@length+1),w
  1711  01A1  01A3               	clrf	(SetPulse@temp+1)
  1712  01A2  07A3               	addwf	(SetPulse@temp+1)
  1713  01A3  0820               	movf	(SetPulse@length),w
  1714  01A4  01A2               	clrf	(SetPulse@temp)
  1715  01A5  07A2               	addwf	(SetPulse@temp)
  1716                           
  1717                           	line	107
  1718                           	
  1719  01A6                     l9051:	
  1720                           ;pwmlib.c: 107: if (temp > 255)
  1721  01A6  0823               	movf	(SetPulse@temp+1),w
  1722  01A7  3A80               	xorlw	80h
  1723  01A8  00FF               	movwf	btemp+1
  1724  01A9  3081               	movlw	(high(0100h))^80h
  1725  01AA  027F               	subwf	btemp+1,w
  1726  01AB  1D03               	skipz
  1727  01AC  29AF               	goto	u2465
  1728  01AD  3000               	movlw	low(0100h)
  1729  01AE  0222               	subwf	(SetPulse@temp),w
  1730  01AF                     u2465:
  1731                           
  1732  01AF  1C03               	skipc
  1733  01B0  29B2               	goto	u2461
  1734  01B1  29B3               	goto	u2460
  1735  01B2                     u2461:
  1736  01B2  29B9               	goto	l3099
  1737  01B3                     u2460:
  1738                           	line	108
  1739                           	
  1740  01B3                     l9053:	
  1741                           ;pwmlib.c: 108: temp = 255;
  1742  01B3  30FF               	movlw	low(0FFh)
  1743  01B4  1283               	bcf	status, 5	;RP0=0, select bank0
  1744  01B5  1303               	bcf	status, 6	;RP1=0, select bank0
  1745  01B6  00A2               	movwf	(SetPulse@temp)
  1746  01B7  3000               	movlw	high(0FFh)
  1747  01B8  00A3               	movwf	((SetPulse@temp))+1
  1748                           	
  1749  01B9                     l3099:	
  1750                           	line	109
  1751                           ;pwmlib.c: 109: CCPR2L = temp;
  1752  01B9  1283               	bcf	status, 5	;RP0=0, select bank0
  1753  01BA  1303               	bcf	status, 6	;RP1=0, select bank0
  1754  01BB  0822               	movf	(SetPulse@temp),w
  1755  01BC  009B               	movwf	(27)	;volatile
  1756                           	line	113
  1757                           	
  1758  01BD                     l3100:	
  1759  01BD  0008               	return
  1760                           	opt stack 0
  1761                           GLOBAL	__end_of_SetPulse
  1762  01BE                     	__end_of_SetPulse:
  1763 ;; =============== function _SetPulse ends ============
  1764                           
  1765                           	signat	_SetPulse,4216
  1766                           	global	_isr
  1767                           psect	text370,local,class=CODE,delta=2
  1768                           global __ptext370
  1769  011F                     __ptext370:
  1770                           
  1771 ;; *************** function _isr *****************
  1772 ;; Defined at:
  1773 ;;		line 243 in file "primarymain.c"
  1774 ;; Parameters:    Size  Location     Type
  1775 ;;		None
  1776 ;; Auto vars:     Size  Location     Type
  1777 ;;		None
  1778 ;; Return value:  Size  Location     Type
  1779 ;;		None               void
  1780 ;; Registers used:
  1781 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, status,2, status,0, btemp+1, pclath, cstack
  1782 ;; Tracked objects:
  1783 ;;		On entry : 0/0
  1784 ;;		On exit  : 0/0
  1785 ;;		Unchanged: 0/0
  1786 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  1787 ;;      Params:         0       0       0       0       0       0
  1788 ;;      Locals:         0       0       0       0       0       0
  1789 ;;      Temps:          6       0       0       0       0       0
  1790 ;;      Totals:         6       0       0       0       0       0
  1791 ;;Total ram usage:        6 bytes
  1792 ;; Hardware stack levels used:    1
  1793 ;; Hardware stack levels required when called:    2
  1794 ;; This function calls:
  1795 ;;		_i2cIsrHandler
  1796 ;; This function is called by:
  1797 ;;		Interrupt level 1
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           psect	text370
  1801                           	file	"primarymain.c"
  1802                           	line	243
  1803                           	global	__size_of_isr
  1804  0052                     	__size_of_isr	equ	__end_of_isr-_isr
  1805                           	
  1806  011F                     _isr:	
  1807                           	opt	stack 3
  1808                           ; Regs used in _isr: [allreg]
  1809                           psect	intentry,class=CODE,delta=2
  1810                           global __pintentry
  1811  0004                     __pintentry:
  1812                           global interrupt_function
  1813  0004                     interrupt_function:
  1814                           	global saved_w
  1815  007E                     	saved_w	set	btemp+0
  1816  0004  00FE               	movwf	saved_w
  1817  0005  0E03               	swapf	status,w
  1818  0006  00F8               	movwf	(??_isr+2)
  1819  0007  0804               	movf	fsr0,w
  1820  0008  00F9               	movwf	(??_isr+3)
  1821  0009  080A               	movf	pclath,w
  1822  000A  00FA               	movwf	(??_isr+4)
  1823  000B  1283               	bcf	status, 5	;RP0=0, select bank0
  1824  000C  1303               	bcf	status, 6	;RP1=0, select bank0
  1825  000D  087F               	movf	btemp+1,w
  1826  000E  00FB               	movwf	(??_isr+5)
  1827  000F  120A  118A  291F   	ljmp	_isr
  1828                           psect	text370
  1829                           	line	244
  1830                           	
  1831  011F                     i1l9103:	
  1832                           ;primarymain.c: 244: if (SSPIF == 1)
  1833  011F  1D8C               	btfss	(99/8),(99)&7
  1834  0120  2922               	goto	u251_21
  1835  0121  2923               	goto	u251_20
  1836  0122                     u251_21:
  1837  0122  2929               	goto	i1l1554
  1838  0123                     u251_20:
  1839                           	line	248
  1840                           	
  1841  0123                     i1l9105:	
  1842                           ;primarymain.c: 245: {
  1843                           ;primarymain.c: 248: i2cIsrHandler();
  1844  0123  120A  118A  20B0   	fcall	_i2cIsrHandler
              120A  118A         
  1845                           	line	249
  1846                           ;primarymain.c: 249: } else if (T0IF == 1)
  1847  0128  2964               	goto	i1l1564
  1848                           	
  1849  0129                     i1l1554:	
  1850  0129  1D0B               	btfss	(90/8),(90)&7
  1851  012A  292C               	goto	u252_21
  1852  012B  292D               	goto	u252_20
  1853  012C                     u252_21:
  1854  012C  292F               	goto	i1l1556
  1855  012D                     u252_20:
  1856                           	line	252
  1857                           	
  1858  012D                     i1l9107:	
  1859                           ;primarymain.c: 250: {
  1860                           ;primarymain.c: 252: T0IF = 0;
  1861  012D  110B               	bcf	(90/8),(90)&7
  1862                           	line	253
  1863                           ;primarymain.c: 253: } else if (TMR1IF == 1)
  1864  012E  2964               	goto	i1l1564
  1865                           	
  1866  012F                     i1l1556:	
  1867  012F  1C0C               	btfss	(96/8),(96)&7
  1868  0130  2932               	goto	u253_21
  1869  0131  2933               	goto	u253_20
  1870  0132                     u253_21:
  1871  0132  2935               	goto	i1l1558
  1872  0133                     u253_20:
  1873                           	line	256
  1874                           	
  1875  0133                     i1l9109:	
  1876                           ;primarymain.c: 256: TMR1IF = 0;
  1877  0133  100C               	bcf	(96/8),(96)&7
  1878                           	line	257
  1879                           ;primarymain.c: 257: } else if (RBIF == 1)
  1880  0134  2964               	goto	i1l1564
  1881                           	
  1882  0135                     i1l1558:	
  1883  0135  1C0B               	btfss	(88/8),(88)&7
  1884  0136  2938               	goto	u254_21
  1885  0137  2939               	goto	u254_20
  1886  0138                     u254_21:
  1887  0138  2959               	goto	i1l9121
  1888  0139                     u254_20:
  1889                           	line	259
  1890                           	
  1891  0139                     i1l9111:	
  1892                           ;primarymain.c: 258: {
  1893                           ;primarymain.c: 259: if (RB5 != DIR_READ)
  1894  0139  1003               	clrc
  1895  013A  1A86               	btfsc	(53/8),(53)&7
  1896  013B  1403               	setc
  1897  013C  3000               	movlw	0
  1898  013D  1803               	skipnc
  1899  013E  3001               	movlw	1
  1900                           
  1901  013F  00F6               	movwf	(??_isr+0)+0
  1902  0140  01F7               	clrf	(??_isr+0)+0+1
  1903  0141  083E               	movf	(_DIR_READ+1),w
  1904  0142  0677               	xorwf	1+(??_isr+0)+0,w
  1905  0143  1D03               	skipz
  1906  0144  2947               	goto	u255_25
  1907  0145  083D               	movf	(_DIR_READ),w
  1908  0146  0676               	xorwf	0+(??_isr+0)+0,w
  1909  0147                     u255_25:
  1910                           
  1911  0147  1903               	skipnz
  1912  0148  294A               	goto	u255_21
  1913  0149  294B               	goto	u255_20
  1914  014A                     u255_21:
  1915  014A  294F               	goto	i1l9115
  1916  014B                     u255_20:
  1917                           	line	261
  1918                           	
  1919  014B                     i1l9113:	
  1920                           ;primarymain.c: 260: {
  1921                           ;primarymain.c: 261: F.DIR = 1;
  1922  014B  1683               	bsf	status, 5	;RP0=1, select bank1
  1923  014C  1303               	bcf	status, 6	;RP1=0, select bank1
  1924  014D  15AA               	bsf	(170)^080h,3
  1925                           	line	262
  1926                           ;primarymain.c: 262: } else
  1927  014E  2957               	goto	i1l9119
  1928                           	
  1929  014F                     i1l1561:	
  1930                           	line	264
  1931                           	
  1932  014F                     i1l9115:	
  1933                           ;primarymain.c: 263: {
  1934                           ;primarymain.c: 264: TRISD = 0;
  1935  014F  1683               	bsf	status, 5	;RP0=1, select bank1
  1936  0150  1303               	bcf	status, 6	;RP1=0, select bank1
  1937  0151  0188               	clrf	(136)^080h	;volatile
  1938                           	line	265
  1939                           	
  1940  0152                     i1l9117:	
  1941                           ;primarymain.c: 265: PORTD = 0xE0;
  1942  0152  30E0               	movlw	(0E0h)
  1943  0153  1283               	bcf	status, 5	;RP0=0, select bank0
  1944  0154  1303               	bcf	status, 6	;RP1=0, select bank0
  1945  0155  0088               	movwf	(8)	;volatile
  1946  0156  2957               	goto	i1l9119
  1947                           	line	266
  1948                           	
  1949  0157                     i1l1562:	
  1950                           	line	267
  1951                           	
  1952  0157                     i1l9119:	
  1953                           ;primarymain.c: 266: }
  1954                           ;primarymain.c: 267: RBIF = 0;
  1955  0157  100B               	bcf	(88/8),(88)&7
  1956                           	line	268
  1957                           ;primarymain.c: 268: } else
  1958  0158  2964               	goto	i1l1564
  1959                           	
  1960  0159                     i1l1560:	
  1961                           	line	270
  1962                           	
  1963  0159                     i1l9121:	
  1964                           ;primarymain.c: 269: {
  1965                           ;primarymain.c: 270: TRISD = 0;
  1966  0159  1683               	bsf	status, 5	;RP0=1, select bank1
  1967  015A  1303               	bcf	status, 6	;RP1=0, select bank1
  1968  015B  0188               	clrf	(136)^080h	;volatile
  1969                           	line	271
  1970                           	
  1971  015C                     i1l9123:	
  1972                           ;primarymain.c: 271: PORTD = 0xF0;
  1973  015C  30F0               	movlw	(0F0h)
  1974  015D  1283               	bcf	status, 5	;RP0=0, select bank0
  1975  015E  1303               	bcf	status, 6	;RP1=0, select bank0
  1976  015F  0088               	movwf	(8)	;volatile
  1977  0160  2964               	goto	i1l1564
  1978                           	line	272
  1979                           	
  1980  0161                     i1l1563:	
  1981  0161  2964               	goto	i1l1564
  1982                           	
  1983  0162                     i1l1559:	
  1984  0162  2964               	goto	i1l1564
  1985                           	
  1986  0163                     i1l1557:	
  1987  0163  2964               	goto	i1l1564
  1988                           	
  1989  0164                     i1l1555:	
  1990                           	line	273
  1991                           	
  1992  0164                     i1l1564:	
  1993  0164  087B               	movf	(??_isr+5),w
  1994  0165  1283               	bcf	status, 5	;RP0=0, select bank0
  1995  0166  1303               	bcf	status, 6	;RP1=0, select bank0
  1996  0167  00FF               	movwf	btemp+1
  1997  0168  087A               	movf	(??_isr+4),w
  1998  0169  008A               	movwf	pclath
  1999  016A  0879               	movf	(??_isr+3),w
  2000  016B  0084               	movwf	fsr0
  2001  016C  0E78               	swapf	(??_isr+2)^0FFFFFF80h,w
  2002  016D  0083               	movwf	status
  2003  016E  0EFE               	swapf	saved_w,f
  2004  016F  0E7E               	swapf	saved_w,w
  2005  0170  0009               	retfie
  2006                           	opt stack 0
  2007                           GLOBAL	__end_of_isr
  2008  0171                     	__end_of_isr:
  2009 ;; =============== function _isr ends ============
  2010                           
  2011                           	signat	_isr,88
  2012                           	global	_i2cIsrHandler
  2013                           psect	text371,local,class=CODE,delta=2
  2014                           global __ptext371
  2015  00B0                     __ptext371:
  2016                           
  2017 ;; *************** function _i2cIsrHandler *****************
  2018 ;; Defined at:
  2019 ;;		line 43 in file "i2cSlave.c"
  2020 ;; Parameters:    Size  Location     Type
  2021 ;;		None
  2022 ;; Auto vars:     Size  Location     Type
  2023 ;;  i               2    4[COMMON] int 
  2024 ;; Return value:  Size  Location     Type
  2025 ;;		None               void
  2026 ;; Registers used:
  2027 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2028 ;; Tracked objects:
  2029 ;;		On entry : 0/0
  2030 ;;		On exit  : 0/0
  2031 ;;		Unchanged: 0/0
  2032 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  2033 ;;      Params:         0       0       0       0       0       0
  2034 ;;      Locals:         2       0       0       0       0       0
  2035 ;;      Temps:          1       0       0       0       0       0
  2036 ;;      Totals:         3       0       0       0       0       0
  2037 ;;Total ram usage:        3 bytes
  2038 ;; Hardware stack levels used:    1
  2039 ;; Hardware stack levels required when called:    1
  2040 ;; This function calls:
  2041 ;;		_i2cSend
  2042 ;;		_i2cDataUpdate
  2043 ;; This function is called by:
  2044 ;;		_isr
  2045 ;; This function uses a non-reentrant model
  2046 ;;
  2047                           psect	text371
  2048                           	file	"i2cSlave.c"
  2049                           	line	43
  2050                           	global	__size_of_i2cIsrHandler
  2051  006F                     	__size_of_i2cIsrHandler	equ	__end_of_i2cIsrHandler-_i2cIsrHandler
  2052                           	
  2053  00B0                     _i2cIsrHandler:	
  2054                           	opt	stack 3
  2055                           ; Regs used in _i2cIsrHandler: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2056                           	line	51
  2057                           	
  2058  00B0                     i1l9125:	
  2059                           ;i2cSlave.c: 51: int i = 0;
  2060  00B0  01F4               	clrf	(i2cIsrHandler@i)
  2061  00B1  01F5               	clrf	(i2cIsrHandler@i+1)
  2062                           	line	52
  2063                           	
  2064  00B2                     i1l9127:	
  2065                           ;i2cSlave.c: 52: i++;
  2066  00B2  3001               	movlw	low(01h)
  2067  00B3  07F4               	addwf	(i2cIsrHandler@i),f
  2068  00B4  1803               	skipnc
  2069  00B5  0AF5               	incf	(i2cIsrHandler@i+1),f
  2070  00B6  3000               	movlw	high(01h)
  2071  00B7  07F5               	addwf	(i2cIsrHandler@i+1),f
  2072                           	line	54
  2073                           ;i2cSlave.c: 54: if ((SSPSTAT & 0b00100100) == 0b00100000){
  2074  00B8  1683               	bsf	status, 5	;RP0=1, select bank1
  2075  00B9  1303               	bcf	status, 6	;RP1=0, select bank1
  2076  00BA  0814               	movf	(148)^080h,w
  2077  00BB  3924               	andlw	024h
  2078  00BC  3A20               	xorlw	020h
  2079  00BD  1D03               	skipz
  2080  00BE  28C0               	goto	u256_21
  2081  00BF  28C1               	goto	u256_20
  2082  00C0                     u256_21:
  2083  00C0  28D0               	goto	i1l9133
  2084  00C1                     u256_20:
  2085                           	line	55
  2086                           	
  2087  00C1                     i1l9129:	
  2088                           ;i2cSlave.c: 55: i2cBuffer[i2cBufferVal] = SSPBUF;
  2089  00C1  1283               	bcf	status, 5	;RP0=0, select bank0
  2090  00C2  1303               	bcf	status, 6	;RP1=0, select bank0
  2091  00C3  0813               	movf	(19),w	;volatile
  2092  00C4  00F3               	movwf	(??_i2cIsrHandler+0)+0
  2093  00C5  087C               	movf	(_i2cBufferVal),w
  2094  00C6  3E36               	addlw	_i2cBuffer&0ffh
  2095  00C7  0084               	movwf	fsr0
  2096  00C8  0873               	movf	(??_i2cIsrHandler+0)+0,w
  2097  00C9  1383               	bcf	status, 7	;select IRP bank0
  2098  00CA  0080               	movwf	indf
  2099                           	line	56
  2100                           	
  2101  00CB                     i1l9131:	
  2102                           ;i2cSlave.c: 56: i2cBufferVal++;
  2103  00CB  3001               	movlw	(01h)
  2104  00CC  00F3               	movwf	(??_i2cIsrHandler+0)+0
  2105  00CD  0873               	movf	(??_i2cIsrHandler+0)+0,w
  2106  00CE  07FC               	addwf	(_i2cBufferVal),f
  2107                           	line	58
  2108                           ;i2cSlave.c: 58: } else if ((SSPSTAT & 0b00100100) == 0b0000000){
  2109  00CF  290D               	goto	i1l9151
  2110                           	
  2111  00D0                     i1l6109:	
  2112                           	
  2113  00D0                     i1l9133:	
  2114  00D0  1683               	bsf	status, 5	;RP0=1, select bank1
  2115  00D1  1303               	bcf	status, 6	;RP1=0, select bank1
  2116  00D2  0814               	movf	(148)^080h,w
  2117  00D3  3924               	andlw	024h
  2118  00D4  1D03               	btfss	status,2
  2119  00D5  28D7               	goto	u257_21
  2120  00D6  28D8               	goto	u257_20
  2121  00D7                     u257_21:
  2122  00D7  28DC               	goto	i1l9137
  2123  00D8                     u257_20:
  2124                           	line	60
  2125                           	
  2126  00D8                     i1l9135:	
  2127                           ;i2cSlave.c: 60: SSPBUF = 0;
  2128  00D8  1283               	bcf	status, 5	;RP0=0, select bank0
  2129  00D9  1303               	bcf	status, 6	;RP1=0, select bank0
  2130  00DA  0193               	clrf	(19)	;volatile
  2131                           	line	62
  2132                           ;i2cSlave.c: 62: } else if ((SSPSTAT & 0b00100100) == 0b0000100){
  2133  00DB  290D               	goto	i1l9151
  2134                           	
  2135  00DC                     i1l6111:	
  2136                           	
  2137  00DC                     i1l9137:	
  2138  00DC  1683               	bsf	status, 5	;RP0=1, select bank1
  2139  00DD  1303               	bcf	status, 6	;RP1=0, select bank1
  2140  00DE  0814               	movf	(148)^080h,w
  2141  00DF  3924               	andlw	024h
  2142  00E0  3A04               	xorlw	04h
  2143  00E1  1D03               	skipz
  2144  00E2  28E4               	goto	u258_21
  2145  00E3  28E5               	goto	u258_20
  2146  00E4                     u258_21:
  2147  00E4  28E7               	goto	i1l9141
  2148  00E5                     u258_20:
  2149  00E5  290D               	goto	i1l9151
  2150                           	line	65
  2151                           	
  2152  00E6                     i1l9139:	
  2153                           ;i2cSlave.c: 65: } else if ((SSPSTAT & 0b00001100) == 0b00001100){
  2154  00E6  290D               	goto	i1l9151
  2155                           	
  2156  00E7                     i1l6113:	
  2157                           	
  2158  00E7                     i1l9141:	
  2159  00E7  0814               	movf	(148)^080h,w
  2160  00E8  390C               	andlw	0Ch
  2161  00E9  3A0C               	xorlw	0Ch
  2162  00EA  1D03               	skipz
  2163  00EB  28ED               	goto	u259_21
  2164  00EC  28EE               	goto	u259_20
  2165  00ED                     u259_21:
  2166  00ED  290D               	goto	i1l9151
  2167  00EE                     u259_20:
  2168                           	line	67
  2169                           	
  2170  00EE                     i1l9143:	
  2171                           ;i2cSlave.c: 67: if (i2cWriteInt == 0)
  2172  00EE  08FD               	movf	(_i2cWriteInt),f
  2173  00EF  1D03               	skipz
  2174  00F0  28F2               	goto	u260_21
  2175  00F1  28F3               	goto	u260_20
  2176  00F2                     u260_21:
  2177  00F2  28FF               	goto	i1l6116
  2178  00F3                     u260_20:
  2179                           	line	69
  2180                           	
  2181  00F3                     i1l9145:	
  2182                           ;i2cSlave.c: 68: {
  2183                           ;i2cSlave.c: 69: i2cWriteInt = 1;
  2184  00F3  01FD               	clrf	(_i2cWriteInt)
  2185  00F4  1403               	bsf	status,0
  2186  00F5  0DFD               	rlf	(_i2cWriteInt),f
  2187                           	line	70
  2188                           	
  2189  00F6                     i1l9147:	
  2190                           ;i2cSlave.c: 70: i2cSend(COUNTS);
  2191  00F6  1283               	bcf	status, 5	;RP0=0, select bank0
  2192  00F7  1303               	bcf	status, 6	;RP1=0, select bank0
  2193  00F8  0839               	movf	(_COUNTS),w
  2194  00F9  120A  118A  2257   	fcall	_i2cSend
              120A  118A         
  2195                           	line	71
  2196                           ;i2cSlave.c: 71: } else
  2197  00FE  290D               	goto	i1l9151
  2198                           	
  2199  00FF                     i1l6116:	
  2200                           	line	73
  2201                           ;i2cSlave.c: 72: {
  2202                           ;i2cSlave.c: 73: i2cWriteInt = 0;
  2203  00FF  01FD               	clrf	(_i2cWriteInt)
  2204                           	line	74
  2205                           	
  2206  0100                     i1l9149:	
  2207                           ;i2cSlave.c: 74: i2cSend(COUNTS >> 8);
  2208  0100  1283               	bcf	status, 5	;RP0=0, select bank0
  2209  0101  1303               	bcf	status, 6	;RP1=0, select bank0
  2210  0102  083A               	movf	(_COUNTS+1),w
  2211  0103  120A  118A  2257   	fcall	_i2cSend
              120A  118A         
  2212  0108  290D               	goto	i1l9151
  2213                           	line	75
  2214                           	
  2215  0109                     i1l6117:	
  2216  0109  290D               	goto	i1l9151
  2217                           	line	85
  2218                           	
  2219  010A                     i1l6115:	
  2220  010A  290D               	goto	i1l9151
  2221                           	line	88
  2222                           	
  2223  010B                     i1l6114:	
  2224  010B  290D               	goto	i1l9151
  2225                           	
  2226  010C                     i1l6112:	
  2227  010C  290D               	goto	i1l9151
  2228                           	
  2229  010D                     i1l6110:	
  2230                           	
  2231  010D                     i1l9151:	
  2232                           ;i2cSlave.c: 75: }
  2233                           ;i2cSlave.c: 85: }
  2234                           ;i2cSlave.c: 88: SSPIF = 0;
  2235  010D  1283               	bcf	status, 5	;RP0=0, select bank0
  2236  010E  1303               	bcf	status, 6	;RP1=0, select bank0
  2237  010F  118C               	bcf	(99/8),(99)&7
  2238                           	line	90
  2239                           	
  2240  0110                     i1l9153:	
  2241                           ;i2cSlave.c: 90: if (i2cBufferVal == 3){
  2242  0110  087C               	movf	(_i2cBufferVal),w
  2243  0111  3A03               	xorlw	03h
  2244  0112  1D03               	skipz
  2245  0113  2915               	goto	u261_21
  2246  0114  2916               	goto	u261_20
  2247  0115                     u261_21:
  2248  0115  291E               	goto	i1l6119
  2249  0116                     u261_20:
  2250                           	line	91
  2251                           	
  2252  0116                     i1l9155:	
  2253                           ;i2cSlave.c: 91: i2cBufferVal = 0;
  2254  0116  01FC               	clrf	(_i2cBufferVal)
  2255                           	line	92
  2256                           	
  2257  0117                     i1l9157:	
  2258                           ;i2cSlave.c: 92: i2cDataUpdate();
  2259  0117  120A  118A  2267   	fcall	_i2cDataUpdate
              120A  118A         
  2260  011C  291E               	goto	i1l6119
  2261                           	line	93
  2262                           	
  2263  011D                     i1l6118:	
  2264  011D  291E               	goto	i1l6119
  2265                           	line	94
  2266                           	
  2267  011E                     i1l9159:	
  2268                           	line	95
  2269                           ;i2cSlave.c: 93: }
  2270                           ;i2cSlave.c: 94: return;
  2271                           	
  2272  011E                     i1l6119:	
  2273  011E  0008               	return
  2274                           	opt stack 0
  2275                           GLOBAL	__end_of_i2cIsrHandler
  2276  011F                     	__end_of_i2cIsrHandler:
  2277 ;; =============== function _i2cIsrHandler ends ============
  2278                           
  2279                           	signat	_i2cIsrHandler,88
  2280                           	global	_i2cDataUpdate
  2281                           psect	text372,local,class=CODE,delta=2
  2282                           global __ptext372
  2283  0267                     __ptext372:
  2284                           
  2285 ;; *************** function _i2cDataUpdate *****************
  2286 ;; Defined at:
  2287 ;;		line 98 in file "i2cSlave.c"
  2288 ;; Parameters:    Size  Location     Type
  2289 ;;		None
  2290 ;; Auto vars:     Size  Location     Type
  2291 ;;		None
  2292 ;; Return value:  Size  Location     Type
  2293 ;;		None               void
  2294 ;; Registers used:
  2295 ;;		wreg
  2296 ;; Tracked objects:
  2297 ;;		On entry : 0/0
  2298 ;;		On exit  : 0/0
  2299 ;;		Unchanged: 0/0
  2300 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  2301 ;;      Params:         0       0       0       0       0       0
  2302 ;;      Locals:         0       0       0       0       0       0
  2303 ;;      Temps:          1       0       0       0       0       0
  2304 ;;      Totals:         1       0       0       0       0       0
  2305 ;;Total ram usage:        1 bytes
  2306 ;; Hardware stack levels used:    1
  2307 ;; This function calls:
  2308 ;;		Nothing
  2309 ;; This function is called by:
  2310 ;;		_i2cIsrHandler
  2311 ;; This function uses a non-reentrant model
  2312 ;;
  2313                           psect	text372
  2314                           	file	"i2cSlave.c"
  2315                           	line	98
  2316                           	global	__size_of_i2cDataUpdate
  2317  000F                     	__size_of_i2cDataUpdate	equ	__end_of_i2cDataUpdate-_i2cDataUpdate
  2318                           	
  2319  0267                     _i2cDataUpdate:	
  2320                           	opt	stack 3
  2321                           ; Regs used in _i2cDataUpdate: [wreg]
  2322                           	line	99
  2323                           	
  2324  0267                     i1l9175:	
  2325                           ;i2cSlave.c: 99: switch (i2cBuffer[0]) {
  2326  0267  2A68               	goto	i1l9177
  2327                           	line	100
  2328                           ;i2cSlave.c: 100: default :
  2329                           	
  2330  0268                     i1l6123:	
  2331                           	line	101
  2332                           	
  2333  0268                     i1l9177:	
  2334                           ;i2cSlave.c: 101: i2cSpeed = (i2cBuffer[1]);
  2335  0268  1283               	bcf	status, 5	;RP0=0, select bank0
  2336  0269  1303               	bcf	status, 6	;RP1=0, select bank0
  2337  026A  0837               	movf	0+(_i2cBuffer)+01h,w
  2338  026B  00F0               	movwf	(??_i2cDataUpdate+0)+0
  2339  026C  0870               	movf	(??_i2cDataUpdate+0)+0,w
  2340  026D  00C3               	movwf	(_i2cSpeed)
  2341                           	line	102
  2342                           ;i2cSlave.c: 102: i2cDirection = (i2cBuffer[2]);
  2343  026E  0838               	movf	0+(_i2cBuffer)+02h,w
  2344  026F  00F0               	movwf	(??_i2cDataUpdate+0)+0
  2345  0270  0870               	movf	(??_i2cDataUpdate+0)+0,w
  2346  0271  00C1               	movwf	(_i2cDirection)
  2347                           	line	103
  2348                           ;i2cSlave.c: 103: break;
  2349  0272  2A75               	goto	i1l6125
  2350                           	line	106
  2351                           	
  2352  0273                     i1l9179:	
  2353                           ;i2cSlave.c: 106: }
  2354  0273  2A75               	goto	i1l6125
  2355                           	line	99
  2356                           	
  2357  0274                     i1l6122:	
  2358  0274  2A68               	goto	i1l9177
  2359                           	line	106
  2360                           	
  2361  0275                     i1l6124:	
  2362                           	line	108
  2363                           ;i2cSlave.c: 107: return;
  2364                           	
  2365  0275                     i1l6125:	
  2366  0275  0008               	return
  2367                           	opt stack 0
  2368                           GLOBAL	__end_of_i2cDataUpdate
  2369  0276                     	__end_of_i2cDataUpdate:
  2370 ;; =============== function _i2cDataUpdate ends ============
  2371                           
  2372                           	signat	_i2cDataUpdate,88
  2373                           	global	_i2cSend
  2374                           psect	text373,local,class=CODE,delta=2
  2375                           global __ptext373
  2376  0257                     __ptext373:
  2377                           
  2378 ;; *************** function _i2cSend *****************
  2379 ;; Defined at:
  2380 ;;		line 111 in file "i2cSlave.c"
  2381 ;; Parameters:    Size  Location     Type
  2382 ;;  msg             1    wreg     unsigned char 
  2383 ;; Auto vars:     Size  Location     Type
  2384 ;;  msg             1    2[COMMON] unsigned char 
  2385 ;;  i               2    0[COMMON] int 
  2386 ;; Return value:  Size  Location     Type
  2387 ;;		None               void
  2388 ;; Registers used:
  2389 ;;		wreg, status,2
  2390 ;; Tracked objects:
  2391 ;;		On entry : 0/0
  2392 ;;		On exit  : 0/0
  2393 ;;		Unchanged: 0/0
  2394 ;; Data sizes:     COMMON   BANK0  BANK1h  BANK1l   BANK3   BANK2
  2395 ;;      Params:         0       0       0       0       0       0
  2396 ;;      Locals:         3       0       0       0       0       0
  2397 ;;      Temps:          0       0       0       0       0       0
  2398 ;;      Totals:         3       0       0       0       0       0
  2399 ;;Total ram usage:        3 bytes
  2400 ;; Hardware stack levels used:    1
  2401 ;; This function calls:
  2402 ;;		Nothing
  2403 ;; This function is called by:
  2404 ;;		_i2cIsrHandler
  2405 ;; This function uses a non-reentrant model
  2406 ;;
  2407                           psect	text373
  2408                           	file	"i2cSlave.c"
  2409                           	line	111
  2410                           	global	__size_of_i2cSend
  2411  0010                     	__size_of_i2cSend	equ	__end_of_i2cSend-_i2cSend
  2412                           	
  2413  0257                     _i2cSend:	
  2414                           	opt	stack 3
  2415                           ; Regs used in _i2cSend: [wreg+status,2]
  2416                           ;i2cSend@msg stored from wreg
  2417  0257  00F2               	movwf	(i2cSend@msg)
  2418                           	line	112
  2419                           	
  2420  0258                     i1l9165:	
  2421                           ;i2cSlave.c: 112: int i = 0;
  2422  0258  01F0               	clrf	(i2cSend@i)
  2423  0259  01F1               	clrf	(i2cSend@i+1)
  2424                           	line	113
  2425                           	
  2426  025A                     i1l9167:	
  2427                           ;i2cSlave.c: 113: i++;
  2428  025A  3001               	movlw	low(01h)
  2429  025B  07F0               	addwf	(i2cSend@i),f
  2430  025C  1803               	skipnc
  2431  025D  0AF1               	incf	(i2cSend@i+1),f
  2432  025E  3000               	movlw	high(01h)
  2433  025F  07F1               	addwf	(i2cSend@i+1),f
  2434                           	line	114
  2435                           	
  2436  0260                     i1l9169:	
  2437                           ;i2cSlave.c: 114: SSPBUF = msg;
  2438  0260  0872               	movf	(i2cSend@msg),w
  2439  0261  1283               	bcf	status, 5	;RP0=0, select bank0
  2440  0262  1303               	bcf	status, 6	;RP1=0, select bank0
  2441  0263  0093               	movwf	(19)	;volatile
  2442                           	line	115
  2443                           	
  2444  0264                     i1l9171:	
  2445                           ;i2cSlave.c: 115: SSPCONbits.CKP = 1;
  2446  0264  1614               	bsf	(20),4	;volatile
  2447  0265  2A66               	goto	i1l6128
  2448                           	line	117
  2449                           	
  2450  0266                     i1l9173:	
  2451                           	line	118
  2452                           ;i2cSlave.c: 117: return;
  2453                           	
  2454  0266                     i1l6128:	
  2455  0266  0008               	return
  2456                           	opt stack 0
  2457                           GLOBAL	__end_of_i2cSend
  2458  0267                     	__end_of_i2cSend:
  2459 ;; =============== function _i2cSend ends ============
  2460                           
  2461                           	signat	_i2cSend,4216
  2462                           psect	text374,local,class=CODE,delta=2
  2463                           global __ptext374
  2464  0000                     __ptext374:
  2465                           	global	btemp
  2466  007E                     	btemp set 07Eh
  2467                           
  2468                           	DABS	1,126,2	;btemp
  2469                           	global	wtemp0
  2470  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Fri Apr 12 10:49:17 2013

                     _F 00AA              i2cSend@msg 0072                      _T0 0551                      _T1 0552  
                    _RD 0C60                      _WR 0C61                     _I2C 0550                     _CKE 04A6  
                   _CKP 00A4                     _GIE 005F                     _DIR 0553                     _RB5 0035  
                   _ERR 0554                     _PR2 0092                     _SMP 04A7                     _isr 011F  
                   fsr0 0004                     indf 0000          i2cIsrHandler@i 0074                    l3100 01BD  
                  l1551 019D                    l1543 0034                    l1544 006C                    l1545 00AB  
                  l3090 01DB                    l1546 00AC                    l3091 01DA                    l1547 00AD  
                  l1572 0236                    l3092 01DB                    l1548 00AD                    l1573 0242  
                  l1574 023F                    l1575 0241                    l1567 0224                    l1576 0242  
                  l1568 022B                    l3088 01CF                    l1569 022B                    l3089 01D9  
                  l3099 01B9                    l6106 0214                    l4594 0280                    l4597 01F8  
                  l9101 0213                    l9201 0191                    l9051 01A6                    l9203 0192  
                  l9211 0015                    ?_isr 0070                    l9053 01B3                    l9061 023D  
                  l9205 0193                    l9221 0038                    l9213 001F                    l9055 022C  
                  l9063 01DC                    l9071 021D                    l9207 0197                    l9231 0068  
                  l9223 0044                    l9215 0024                    l9049 019E                    l9057 0234  
                  l9065 01F5                    l9073 0224                    l9081 01C9                    l9209 019A  
                  l9241 00A7                    l9233 006C                    l9225 004D                    l9217 002A  
                  l9059 0236                    l9067 01F7                    l9091 01D4                    l9083 01CA  
                  l9075 01BE                    l9235 0070                    l9227 0058                    l9219 0034  
                  l9069 0215                    l9085 01CB                    l9077 01C2                    l9093 0276  
                  l9181 0171                    l9237 0086                    l9229 005E                    l9087 01CC  
                  l9079 01C8                    l9095 01FC                    l9191 0187                    l9183 0174  
                  l9239 0099                    l9089 01CF                    l9097 020E                    l9193 018B  
                  l9185 0184                    l9099 0212                    l9195 018C                    l9187 0185  
                  l9197 018F                    l9189 0186                    l9199 0190                    _FLAG 00AA  
                  _T0IE 005D                    _T0IF 005A                    u2500 01D4                    u2501 01D3  
                  u2460 01B3                    u2620 005E                    u2461 01B2                    u2621 005D  
                  u2470 0234                    u2630 0070                    u2471 0233                    u2631 006F  
                  _PIE1 008C                    u2480 023D                    _PIE2 008D                    u2465 01AF  
                  u2481 023C                    u2490 021D                    u2491 021C                    _PEIE 005E  
                  _RBIE 005B                    _RBIF 0058                    _TMR0 0001                    _TMR1 000E  
                  _WREN 0C62                    _main 0015                    btemp 007E                    start 0012  
 __size_of_BeginEncoder 000B         ??_i2cIsrHandler 0073         __end_of_i2cInit 0215         __end_of_i2cSend 0267  
                 ??_isr 0076                   ?_main 0070                   _EEADR 010D                   _CARRY 0018  
                 _T1CON 0010                   _T2CON 0012                   _PORTD 0008                   _SSPM0 00A0  
                 _SSPM1 00A1                   _SSPM2 00A2                   _SSPM3 00A3                   _TRISB 0086  
                 _TRISD 0088                   _SSPIF 0063                   _SSPEN 00A5                   main@D 002C  
                 main@I 002A                   main@c 0035                   main@t 0034            _BeginEncoder 0276  
                 pclath 000A        __end_of_BeginPWM 01DC              _i2cRequest 0042                   status 0003  
                 wtemp0 007E            __end_of_main 00B0              _Initialise 0171                  ??_main 0026  
    __size_of_EncUpdate 001D        __end_of_SetPulse 01BE                  _EEDATA 010C                  _CCPR2L 001B  
                _EECON1 018C                  _EECON2 018D                  _CMCON1 0097                  _COUNTS 0039  
                i1l1560 0159                  i1l1561 014F                  i1l1562 0157                  i1l1554 0129  
                i1l1555 0164                  i1l1563 0161                  i1l1556 012F                  i1l1564 0164  
                i1l1557 0163                  i1l1558 0135                  i1l1559 0162                  i1l6110 010D  
                i1l6111 00DC                  i1l6112 010C                  i1l6113 00E7                  i1l6122 0274  
                i1l6114 010B                  i1l6123 0268                  i1l6115 010A                  i1l6124 0275  
                i1l6116 00FF                  i1l6125 0275                  i1l6117 0109                  i1l6109 00D0  
                i1l6118 011D                  i1l6119 011E                  i1l6128 0266                  i1l9111 0139  
                i1l9103 011F                  i1l9113 014B                  i1l9121 0159                  i1l9105 0123  
                i1l9131 00CB                  i1l9123 015C                  i1l9115 014F                  i1l9107 012D  
                i1l9141 00E7                  i1l9133 00D0                  i1l9125 00B0                  i1l9117 0152  
                i1l9109 0133                  i1l9143 00EE                  i1l9135 00D8                  i1l9151 010D  
                i1l9127 00B2                  i1l9119 0157                  i1l9153 0110                  i1l9145 00F3  
                i1l9137 00DC                  i1l9129 00C1                  i1l9171 0264                  i1l9155 0116  
                i1l9147 00F6                  i1l9139 00E6                  i1l9173 0266                  i1l9165 0258  
                i1l9157 0117                  i1l9149 0100                  i1l9167 025A                  i1l9175 0267  
                i1l9159 011E                  i1l9169 0260                  i1l9177 0268                  i1l9179 0273  
                u251_20 0123                  u251_21 0122                  u260_20 00F3                  u252_20 012D  
                u260_21 00F2                  u252_21 012C                  u261_20 0116                  u253_20 0133  
                u261_21 0115                  u253_21 0132                  u254_20 0139                  u254_21 0138  
                u255_20 014B                  u255_21 014A                  u255_25 0147                  u256_20 00C1  
                u256_21 00C0                  u257_20 00D8                  u257_21 00D7                  u258_20 00E5  
                u258_21 00E4                  u259_20 00EE                  u259_21 00ED                  _TARGET 003F  
                _TMR1IF 0060                  _TMR2IF 0061                  _SSPADD 0093         setDirection@dir 0020  
                _TRISC6 043E                  _TRISC7 043F                  _SSPBUF 0013               ??_i2cInit 0020  
             ??_i2cSend 0070              _UpdateData 0215                  saved_w 007E             _i2cWriteInt 007D  
     __end_of_EncUpdate 01F9          __pcstackCOMMON 0070             ?_Initialise 0070           ?_setDirection 0020  
             ?_BeginPWM 0070   __end_of_i2cDataUpdate 0276              __pbssBANK0 0036               ?_SetPulse 0020  
            __pmaintext 0015              __pintentry 0004                 _CCP2CON 001D          ??_setDirection 0022  
            ??_BeginPWM 0020             ?_UpdateData 0020                 _SSPSTAT 0094          main@currentPWM 0028  
   __size_of_Initialise 002D                 _i2cInit 01F9                 _i2cSend 0257              ??_SetPulse 0022  
 __end_of_i2cIsrHandler 011F               _DIRECTION 003B            _i2cDirection 0041            _i2cBufferVal 007C  
             _T2CONbits 0012            __size_of_isr 0052    end_of_initialization 0253     __size_of_UpdateData 0017  
           UpdateData@c 0022             UpdateData@t 0020               _PORTBbits 0006          SetPulse@length 0020  
             _TRISDbits 0088    __end_of_setDirection 0243             _CCP2CONbits 001D              main@counts 0032  
             _EncUpdate 01DC            ??_Initialise 0021               _i2cBuffer 0036     start_initialization 0243  
     __size_of_BeginPWM 001E             __end_of_isr 0171      __end_of_Initialise 019E              ?_EncUpdate 0020  
     __size_of_SetPulse 0020            SetPulse@temp 0022            ??_UpdateData 0024             __pbssCOMMON 007C  
         __pcstackBANK0 0020           ?_BeginEncoder 0070                ?_i2cInit 0070                ?_i2cSend 0070  
    __end_of_UpdateData 022C               __ptext361 0000               __ptext370 011F               __ptext362 0171  
             __ptext371 00B0               __ptext363 01F9               __ptext372 0267               __ptext364 0276  
             __ptext373 0257               __ptext365 01BE               __ptext374 0000               __ptext366 0215  
             __ptext367 01DC               __ptext368 022C               __ptext369 019E  __size_of_i2cDataUpdate 000F  
        ??_BeginEncoder 0020   __size_of_setDirection 0017                _DIR_READ 003D       interrupt_function 0004  
              _PIE1bits 008C                _PIR1bits 000C             ??_EncUpdate 0024                i2cSend@i 0070  
             main@P_old 002E                _BeginPWM 01BE            _setDirection 022C  __size_of_i2cIsrHandler 006F  
         _i2cDataUpdate 0267                _i2cSpeed 0043        __size_of_i2cInit 001C        __size_of_i2cSend 0010  
              _SetPulse 019E          ?_i2cDataUpdate 0070             EncUpdate@t0 0020             EncUpdate@t1 0022  
         __size_of_main 009B           _i2cIsrHandler 00B0    __end_of_BeginEncoder 0281                main@time 0030  
              intlevel1 0000          ?_i2cIsrHandler 0070              _OPTION_REG 0081         ??_i2cDataUpdate 0070  
        i2cInit@address 0020              _SSPCONbits 0014  
